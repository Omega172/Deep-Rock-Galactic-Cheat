#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OculusMR

#include "Basic.hpp"

#include "OculusMR_structs.hpp"


namespace CG::Params
{

// Function OculusMR.OculusMR_PlaneMeshComponent.AddCustomMeshTriangles
// 0x0010 (0x0010 - 0x0000)
struct OculusMR_PlaneMeshComponent_AddCustomMeshTriangles final
{
public:
	TArray<struct FOculusMR_PlaneMeshTriangle>    Triangles;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMR_PlaneMeshComponent_AddCustomMeshTriangles) == 0x000008, "Wrong alignment on OculusMR_PlaneMeshComponent_AddCustomMeshTriangles");
static_assert(sizeof(OculusMR_PlaneMeshComponent_AddCustomMeshTriangles) == 0x000010, "Wrong size on OculusMR_PlaneMeshComponent_AddCustomMeshTriangles");
static_assert(offsetof(OculusMR_PlaneMeshComponent_AddCustomMeshTriangles, Triangles) == 0x000000, "Member 'OculusMR_PlaneMeshComponent_AddCustomMeshTriangles::Triangles' has a wrong offset!");

// Function OculusMR.OculusMR_PlaneMeshComponent.SetCustomMeshTriangles
// 0x0018 (0x0018 - 0x0000)
struct OculusMR_PlaneMeshComponent_SetCustomMeshTriangles final
{
public:
	TArray<struct FOculusMR_PlaneMeshTriangle>    Triangles;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16A0[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OculusMR_PlaneMeshComponent_SetCustomMeshTriangles) == 0x000008, "Wrong alignment on OculusMR_PlaneMeshComponent_SetCustomMeshTriangles");
static_assert(sizeof(OculusMR_PlaneMeshComponent_SetCustomMeshTriangles) == 0x000018, "Wrong size on OculusMR_PlaneMeshComponent_SetCustomMeshTriangles");
static_assert(offsetof(OculusMR_PlaneMeshComponent_SetCustomMeshTriangles, Triangles) == 0x000000, "Member 'OculusMR_PlaneMeshComponent_SetCustomMeshTriangles::Triangles' has a wrong offset!");
static_assert(offsetof(OculusMR_PlaneMeshComponent_SetCustomMeshTriangles, ReturnValue) == 0x000010, "Member 'OculusMR_PlaneMeshComponent_SetCustomMeshTriangles::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMR_Settings.BindToTrackedCameraIndexIfAvailable
// 0x0004 (0x0004 - 0x0000)
struct OculusMR_Settings_BindToTrackedCameraIndexIfAvailable final
{
public:
	int32                                         InTrackedCameraIndex;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMR_Settings_BindToTrackedCameraIndexIfAvailable) == 0x000004, "Wrong alignment on OculusMR_Settings_BindToTrackedCameraIndexIfAvailable");
static_assert(sizeof(OculusMR_Settings_BindToTrackedCameraIndexIfAvailable) == 0x000004, "Wrong size on OculusMR_Settings_BindToTrackedCameraIndexIfAvailable");
static_assert(offsetof(OculusMR_Settings_BindToTrackedCameraIndexIfAvailable, InTrackedCameraIndex) == 0x000000, "Member 'OculusMR_Settings_BindToTrackedCameraIndexIfAvailable::InTrackedCameraIndex' has a wrong offset!");

// Function OculusMR.OculusMR_Settings.GetBindToTrackedCameraIndex
// 0x0004 (0x0004 - 0x0000)
struct OculusMR_Settings_GetBindToTrackedCameraIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMR_Settings_GetBindToTrackedCameraIndex) == 0x000004, "Wrong alignment on OculusMR_Settings_GetBindToTrackedCameraIndex");
static_assert(sizeof(OculusMR_Settings_GetBindToTrackedCameraIndex) == 0x000004, "Wrong size on OculusMR_Settings_GetBindToTrackedCameraIndex");
static_assert(offsetof(OculusMR_Settings_GetBindToTrackedCameraIndex, ReturnValue) == 0x000000, "Member 'OculusMR_Settings_GetBindToTrackedCameraIndex::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMR_Settings.GetCapturingCamera
// 0x0001 (0x0001 - 0x0000)
struct OculusMR_Settings_GetCapturingCamera final
{
public:
	EOculusMR_CameraDeviceEnum                    ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMR_Settings_GetCapturingCamera) == 0x000001, "Wrong alignment on OculusMR_Settings_GetCapturingCamera");
static_assert(sizeof(OculusMR_Settings_GetCapturingCamera) == 0x000001, "Wrong size on OculusMR_Settings_GetCapturingCamera");
static_assert(offsetof(OculusMR_Settings_GetCapturingCamera, ReturnValue) == 0x000000, "Member 'OculusMR_Settings_GetCapturingCamera::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMR_Settings.GetCompositionMethod
// 0x0001 (0x0001 - 0x0000)
struct OculusMR_Settings_GetCompositionMethod final
{
public:
	EOculusMR_CompositionMethod                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMR_Settings_GetCompositionMethod) == 0x000001, "Wrong alignment on OculusMR_Settings_GetCompositionMethod");
static_assert(sizeof(OculusMR_Settings_GetCompositionMethod) == 0x000001, "Wrong size on OculusMR_Settings_GetCompositionMethod");
static_assert(offsetof(OculusMR_Settings_GetCompositionMethod, ReturnValue) == 0x000000, "Member 'OculusMR_Settings_GetCompositionMethod::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMR_Settings.GetIsCasting
// 0x0001 (0x0001 - 0x0000)
struct OculusMR_Settings_GetIsCasting final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMR_Settings_GetIsCasting) == 0x000001, "Wrong alignment on OculusMR_Settings_GetIsCasting");
static_assert(sizeof(OculusMR_Settings_GetIsCasting) == 0x000001, "Wrong size on OculusMR_Settings_GetIsCasting");
static_assert(offsetof(OculusMR_Settings_GetIsCasting, ReturnValue) == 0x000000, "Member 'OculusMR_Settings_GetIsCasting::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMR_Settings.SetCapturingCamera
// 0x0001 (0x0001 - 0x0000)
struct OculusMR_Settings_SetCapturingCamera final
{
public:
	EOculusMR_CameraDeviceEnum                    Val;                                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMR_Settings_SetCapturingCamera) == 0x000001, "Wrong alignment on OculusMR_Settings_SetCapturingCamera");
static_assert(sizeof(OculusMR_Settings_SetCapturingCamera) == 0x000001, "Wrong size on OculusMR_Settings_SetCapturingCamera");
static_assert(offsetof(OculusMR_Settings_SetCapturingCamera, Val) == 0x000000, "Member 'OculusMR_Settings_SetCapturingCamera::Val' has a wrong offset!");

// Function OculusMR.OculusMR_Settings.SetCompositionMethod
// 0x0001 (0x0001 - 0x0000)
struct OculusMR_Settings_SetCompositionMethod final
{
public:
	EOculusMR_CompositionMethod                   Val;                                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMR_Settings_SetCompositionMethod) == 0x000001, "Wrong alignment on OculusMR_Settings_SetCompositionMethod");
static_assert(sizeof(OculusMR_Settings_SetCompositionMethod) == 0x000001, "Wrong size on OculusMR_Settings_SetCompositionMethod");
static_assert(offsetof(OculusMR_Settings_SetCompositionMethod, Val) == 0x000000, "Member 'OculusMR_Settings_SetCompositionMethod::Val' has a wrong offset!");

// Function OculusMR.OculusMR_Settings.SetIsCasting
// 0x0001 (0x0001 - 0x0000)
struct OculusMR_Settings_SetIsCasting final
{
public:
	bool                                          Val;                                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMR_Settings_SetIsCasting) == 0x000001, "Wrong alignment on OculusMR_Settings_SetIsCasting");
static_assert(sizeof(OculusMR_Settings_SetIsCasting) == 0x000001, "Wrong size on OculusMR_Settings_SetIsCasting");
static_assert(offsetof(OculusMR_Settings_SetIsCasting, Val) == 0x000000, "Member 'OculusMR_Settings_SetIsCasting::Val' has a wrong offset!");

// Function OculusMR.OculusMRFunctionLibrary.GetMrcScalingFactor
// 0x0004 (0x0004 - 0x0000)
struct OculusMRFunctionLibrary_GetMrcScalingFactor final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMRFunctionLibrary_GetMrcScalingFactor) == 0x000004, "Wrong alignment on OculusMRFunctionLibrary_GetMrcScalingFactor");
static_assert(sizeof(OculusMRFunctionLibrary_GetMrcScalingFactor) == 0x000004, "Wrong size on OculusMRFunctionLibrary_GetMrcScalingFactor");
static_assert(offsetof(OculusMRFunctionLibrary_GetMrcScalingFactor, ReturnValue) == 0x000000, "Member 'OculusMRFunctionLibrary_GetMrcScalingFactor::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMRFunctionLibrary.GetOculusMRSettings
// 0x0008 (0x0008 - 0x0000)
struct OculusMRFunctionLibrary_GetOculusMRSettings final
{
public:
	class UOculusMR_Settings*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMRFunctionLibrary_GetOculusMRSettings) == 0x000008, "Wrong alignment on OculusMRFunctionLibrary_GetOculusMRSettings");
static_assert(sizeof(OculusMRFunctionLibrary_GetOculusMRSettings) == 0x000008, "Wrong size on OculusMRFunctionLibrary_GetOculusMRSettings");
static_assert(offsetof(OculusMRFunctionLibrary_GetOculusMRSettings, ReturnValue) == 0x000000, "Member 'OculusMRFunctionLibrary_GetOculusMRSettings::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMRFunctionLibrary.GetTrackingReferenceComponent
// 0x0008 (0x0008 - 0x0000)
struct OculusMRFunctionLibrary_GetTrackingReferenceComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMRFunctionLibrary_GetTrackingReferenceComponent) == 0x000008, "Wrong alignment on OculusMRFunctionLibrary_GetTrackingReferenceComponent");
static_assert(sizeof(OculusMRFunctionLibrary_GetTrackingReferenceComponent) == 0x000008, "Wrong size on OculusMRFunctionLibrary_GetTrackingReferenceComponent");
static_assert(offsetof(OculusMRFunctionLibrary_GetTrackingReferenceComponent, ReturnValue) == 0x000000, "Member 'OculusMRFunctionLibrary_GetTrackingReferenceComponent::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMRFunctionLibrary.IsMrcActive
// 0x0001 (0x0001 - 0x0000)
struct OculusMRFunctionLibrary_IsMrcActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMRFunctionLibrary_IsMrcActive) == 0x000001, "Wrong alignment on OculusMRFunctionLibrary_IsMrcActive");
static_assert(sizeof(OculusMRFunctionLibrary_IsMrcActive) == 0x000001, "Wrong size on OculusMRFunctionLibrary_IsMrcActive");
static_assert(offsetof(OculusMRFunctionLibrary_IsMrcActive, ReturnValue) == 0x000000, "Member 'OculusMRFunctionLibrary_IsMrcActive::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMRFunctionLibrary.IsMrcEnabled
// 0x0001 (0x0001 - 0x0000)
struct OculusMRFunctionLibrary_IsMrcEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OculusMRFunctionLibrary_IsMrcEnabled) == 0x000001, "Wrong alignment on OculusMRFunctionLibrary_IsMrcEnabled");
static_assert(sizeof(OculusMRFunctionLibrary_IsMrcEnabled) == 0x000001, "Wrong size on OculusMRFunctionLibrary_IsMrcEnabled");
static_assert(offsetof(OculusMRFunctionLibrary_IsMrcEnabled, ReturnValue) == 0x000000, "Member 'OculusMRFunctionLibrary_IsMrcEnabled::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMRFunctionLibrary.SetMrcScalingFactor
// 0x0008 (0x0008 - 0x0000)
struct OculusMRFunctionLibrary_SetMrcScalingFactor final
{
public:
	float                                         ScalingFactor;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16A5[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OculusMRFunctionLibrary_SetMrcScalingFactor) == 0x000004, "Wrong alignment on OculusMRFunctionLibrary_SetMrcScalingFactor");
static_assert(sizeof(OculusMRFunctionLibrary_SetMrcScalingFactor) == 0x000008, "Wrong size on OculusMRFunctionLibrary_SetMrcScalingFactor");
static_assert(offsetof(OculusMRFunctionLibrary_SetMrcScalingFactor, ScalingFactor) == 0x000000, "Member 'OculusMRFunctionLibrary_SetMrcScalingFactor::ScalingFactor' has a wrong offset!");
static_assert(offsetof(OculusMRFunctionLibrary_SetMrcScalingFactor, ReturnValue) == 0x000004, "Member 'OculusMRFunctionLibrary_SetMrcScalingFactor::ReturnValue' has a wrong offset!");

// Function OculusMR.OculusMRFunctionLibrary.SetTrackingReferenceComponent
// 0x0010 (0x0010 - 0x0000)
struct OculusMRFunctionLibrary_SetTrackingReferenceComponent final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_16A6[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(OculusMRFunctionLibrary_SetTrackingReferenceComponent) == 0x000008, "Wrong alignment on OculusMRFunctionLibrary_SetTrackingReferenceComponent");
static_assert(sizeof(OculusMRFunctionLibrary_SetTrackingReferenceComponent) == 0x000010, "Wrong size on OculusMRFunctionLibrary_SetTrackingReferenceComponent");
static_assert(offsetof(OculusMRFunctionLibrary_SetTrackingReferenceComponent, Component) == 0x000000, "Member 'OculusMRFunctionLibrary_SetTrackingReferenceComponent::Component' has a wrong offset!");
static_assert(offsetof(OculusMRFunctionLibrary_SetTrackingReferenceComponent, ReturnValue) == 0x000008, "Member 'OculusMRFunctionLibrary_SetTrackingReferenceComponent::ReturnValue' has a wrong offset!");

}

