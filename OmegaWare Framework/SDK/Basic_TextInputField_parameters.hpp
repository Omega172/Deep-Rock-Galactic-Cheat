#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_TextInputField

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function Basic_TextInputField.Basic_TextInputField_C.OnTextChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Basic_TextInputField_C_OnTextChanged__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Basic_TextInputField_C_OnTextChanged__DelegateSignature) == 0x000008, "Wrong alignment on Basic_TextInputField_C_OnTextChanged__DelegateSignature");
static_assert(sizeof(Basic_TextInputField_C_OnTextChanged__DelegateSignature) == 0x000018, "Wrong size on Basic_TextInputField_C_OnTextChanged__DelegateSignature");
static_assert(offsetof(Basic_TextInputField_C_OnTextChanged__DelegateSignature, Text) == 0x000000, "Member 'Basic_TextInputField_C_OnTextChanged__DelegateSignature::Text' has a wrong offset!");

// Function Basic_TextInputField.Basic_TextInputField_C.OnTextCommitted__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Basic_TextInputField_C_OnTextCommitted__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	uint8                                         CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_TextInputField_C_OnTextCommitted__DelegateSignature) == 0x000008, "Wrong alignment on Basic_TextInputField_C_OnTextCommitted__DelegateSignature");
static_assert(sizeof(Basic_TextInputField_C_OnTextCommitted__DelegateSignature) == 0x000020, "Wrong size on Basic_TextInputField_C_OnTextCommitted__DelegateSignature");
static_assert(offsetof(Basic_TextInputField_C_OnTextCommitted__DelegateSignature, Text) == 0x000000, "Member 'Basic_TextInputField_C_OnTextCommitted__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_OnTextCommitted__DelegateSignature, CommitMethod) == 0x000018, "Member 'Basic_TextInputField_C_OnTextCommitted__DelegateSignature::CommitMethod' has a wrong offset!");

// Function Basic_TextInputField.Basic_TextInputField_C.ExecuteUbergraph_Basic_TextInputField
// 0x0050 (0x0050 - 0x0000)
struct Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0008(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CC4[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC5[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0038(0x0018)(ConstParm)
};
static_assert(alignof(Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField) == 0x000008, "Wrong alignment on Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField");
static_assert(sizeof(Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField) == 0x000050, "Wrong size on Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField");
static_assert(offsetof(Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField, EntryPoint) == 0x000000, "Member 'Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField::EntryPoint' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField, K2Node_ComponentBoundEvent_Text) == 0x000008, "Member 'Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField, K2Node_ComponentBoundEvent_CommitMethod) == 0x000020, "Member 'Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField, K2Node_Event_IsDesignTime) == 0x000021, "Member 'Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField, CallFunc_MenuColors_OutputColor) == 0x000024, "Member 'Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField, K2Node_ComponentBoundEvent_Text_1) == 0x000038, "Member 'Basic_TextInputField_C_ExecuteUbergraph_Basic_TextInputField::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");

// Function Basic_TextInputField.Basic_TextInputField_C.BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function Basic_TextInputField.Basic_TextInputField_C.BndEvt__InputField_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'Basic_TextInputField_C_BndEvt__InputField_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function Basic_TextInputField.Basic_TextInputField_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Basic_TextInputField_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_TextInputField_C_PreConstruct) == 0x000001, "Wrong alignment on Basic_TextInputField_C_PreConstruct");
static_assert(sizeof(Basic_TextInputField_C_PreConstruct) == 0x000001, "Wrong size on Basic_TextInputField_C_PreConstruct");
static_assert(offsetof(Basic_TextInputField_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Basic_TextInputField_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Basic_TextInputField.Basic_TextInputField_C.GetText
// 0x0030 (0x0030 - 0x0000)
struct Basic_TextInputField_C_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0018(0x0018)()
};
static_assert(alignof(Basic_TextInputField_C_GetText) == 0x000008, "Wrong alignment on Basic_TextInputField_C_GetText");
static_assert(sizeof(Basic_TextInputField_C_GetText) == 0x000030, "Wrong size on Basic_TextInputField_C_GetText");
static_assert(offsetof(Basic_TextInputField_C_GetText, ReturnValue) == 0x000000, "Member 'Basic_TextInputField_C_GetText::ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_GetText, CallFunc_GetText_ReturnValue) == 0x000018, "Member 'Basic_TextInputField_C_GetText::CallFunc_GetText_ReturnValue' has a wrong offset!");

// Function Basic_TextInputField.Basic_TextInputField_C.GetHint
// 0x0018 (0x0018 - 0x0000)
struct Basic_TextInputField_C_GetHint final
{
public:
	class FText                                   Param_HintText;                                    // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(Basic_TextInputField_C_GetHint) == 0x000008, "Wrong alignment on Basic_TextInputField_C_GetHint");
static_assert(sizeof(Basic_TextInputField_C_GetHint) == 0x000018, "Wrong size on Basic_TextInputField_C_GetHint");
static_assert(offsetof(Basic_TextInputField_C_GetHint, Param_HintText) == 0x000000, "Member 'Basic_TextInputField_C_GetHint::Param_HintText' has a wrong offset!");

// Function Basic_TextInputField.Basic_TextInputField_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct Basic_TextInputField_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Basic_TextInputField_C_SetText) == 0x000008, "Wrong alignment on Basic_TextInputField_C_SetText");
static_assert(sizeof(Basic_TextInputField_C_SetText) == 0x000018, "Wrong size on Basic_TextInputField_C_SetText");
static_assert(offsetof(Basic_TextInputField_C_SetText, InText) == 0x000000, "Member 'Basic_TextInputField_C_SetText::InText' has a wrong offset!");

// Function Basic_TextInputField.Basic_TextInputField_C.OnKeyUp
// 0x01E0 (0x01E0 - 0x0000)
struct Basic_TextInputField_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0128(0x00B8)()
};
static_assert(alignof(Basic_TextInputField_C_OnKeyUp) == 0x000008, "Wrong alignment on Basic_TextInputField_C_OnKeyUp");
static_assert(sizeof(Basic_TextInputField_C_OnKeyUp) == 0x0001E0, "Wrong size on Basic_TextInputField_C_OnKeyUp");
static_assert(offsetof(Basic_TextInputField_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'Basic_TextInputField_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'Basic_TextInputField_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_OnKeyUp, ReturnValue) == 0x000070, "Member 'Basic_TextInputField_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_TextInputField_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000128, "Member 'Basic_TextInputField_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

}

