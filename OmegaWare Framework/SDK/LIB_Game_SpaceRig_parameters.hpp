#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LIB_Game_SpaceRig

#include "Basic.hpp"


namespace CG::Params
{

// Function LIB_Game_SpaceRig.LIB_Game_SpaceRig_C.GetSRController
// 0x0028 (0x0028 - 0x0000)
struct LIB_Game_SpaceRig_C_GetSRController final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SR_PlayerControllerBase_C*          SRController;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SR_PlayerControllerBase_C*          K2Node_DynamicCast_AsBP_SR_Player_Controller_Base; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LIB_Game_SpaceRig_C_GetSRController) == 0x000008, "Wrong alignment on LIB_Game_SpaceRig_C_GetSRController");
static_assert(sizeof(LIB_Game_SpaceRig_C_GetSRController) == 0x000028, "Wrong size on LIB_Game_SpaceRig_C_GetSRController");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRController, __WorldContext) == 0x000000, "Member 'LIB_Game_SpaceRig_C_GetSRController::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRController, SRController) == 0x000008, "Member 'LIB_Game_SpaceRig_C_GetSRController::SRController' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRController, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'LIB_Game_SpaceRig_C_GetSRController::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRController, K2Node_DynamicCast_AsBP_SR_Player_Controller_Base) == 0x000018, "Member 'LIB_Game_SpaceRig_C_GetSRController::K2Node_DynamicCast_AsBP_SR_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRController, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LIB_Game_SpaceRig_C_GetSRController::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LIB_Game_SpaceRig.LIB_Game_SpaceRig_C.GetSRGameState
// 0x0028 (0x0028 - 0x0000)
struct LIB_Game_SpaceRig_C_GetSRGameState final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_SpaceRig_C*               GameState;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameState_SpaceRig_C*               K2Node_DynamicCast_AsBP_Game_State_Space_Rig;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LIB_Game_SpaceRig_C_GetSRGameState) == 0x000008, "Wrong alignment on LIB_Game_SpaceRig_C_GetSRGameState");
static_assert(sizeof(LIB_Game_SpaceRig_C_GetSRGameState) == 0x000028, "Wrong size on LIB_Game_SpaceRig_C_GetSRGameState");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRGameState, __WorldContext) == 0x000000, "Member 'LIB_Game_SpaceRig_C_GetSRGameState::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRGameState, GameState) == 0x000008, "Member 'LIB_Game_SpaceRig_C_GetSRGameState::GameState' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRGameState, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'LIB_Game_SpaceRig_C_GetSRGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRGameState, K2Node_DynamicCast_AsBP_Game_State_Space_Rig) == 0x000018, "Member 'LIB_Game_SpaceRig_C_GetSRGameState::K2Node_DynamicCast_AsBP_Game_State_Space_Rig' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSRGameState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LIB_Game_SpaceRig_C_GetSRGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LIB_Game_SpaceRig.LIB_Game_SpaceRig_C.SetSpaceRigUpgradePreview
// 0x0030 (0x0030 - 0x0000)
struct LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           ItemUpgrade;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_SpaceRig_C*             K2Node_DynamicCast_AsBP_Player_State_Space_Rig;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview) == 0x000008, "Wrong alignment on LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview");
static_assert(sizeof(LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview) == 0x000030, "Wrong size on LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview");
static_assert(offsetof(LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview, PlayerController) == 0x000000, "Member 'LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview::PlayerController' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview, ItemUpgrade) == 0x000008, "Member 'LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview::ItemUpgrade' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview, __WorldContext) == 0x000010, "Member 'LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview, K2Node_DynamicCast_AsBP_Player_State_Space_Rig) == 0x000020, "Member 'LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview::K2Node_DynamicCast_AsBP_Player_State_Space_Rig' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'LIB_Game_SpaceRig_C_SetSpaceRigUpgradePreview::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LIB_Game_SpaceRig.LIB_Game_SpaceRig_C.GetSpaceRigUpgradePreview
// 0x0030 (0x0030 - 0x0000)
struct LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           PreviewUpgrade;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F4[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_SpaceRig_C*             K2Node_DynamicCast_AsBP_Player_State_Space_Rig;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview) == 0x000008, "Wrong alignment on LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview");
static_assert(sizeof(LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview) == 0x000030, "Wrong size on LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview, PlayerController) == 0x000000, "Member 'LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview::PlayerController' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview, __WorldContext) == 0x000008, "Member 'LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview, PreviewUpgrade) == 0x000010, "Member 'LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview::PreviewUpgrade' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview, K2Node_DynamicCast_AsBP_Player_State_Space_Rig) == 0x000020, "Member 'LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview::K2Node_DynamicCast_AsBP_Player_State_Space_Rig' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'LIB_Game_SpaceRig_C_GetSpaceRigUpgradePreview::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LIB_Game_SpaceRig.LIB_Game_SpaceRig_C.RefreshSpacerigUpgradePreview
// 0x0028 (0x0028 - 0x0000)
struct LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30F5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerState_SpaceRig_C*             K2Node_DynamicCast_AsBP_Player_State_Space_Rig;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview) == 0x000008, "Wrong alignment on LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview");
static_assert(sizeof(LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview) == 0x000028, "Wrong size on LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview");
static_assert(offsetof(LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview, PlayerController) == 0x000000, "Member 'LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview::PlayerController' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview, __WorldContext) == 0x000008, "Member 'LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview, K2Node_DynamicCast_AsBP_Player_State_Space_Rig) == 0x000018, "Member 'LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview::K2Node_DynamicCast_AsBP_Player_State_Space_Rig' has a wrong offset!");
static_assert(offsetof(LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'LIB_Game_SpaceRig_C_RefreshSpacerigUpgradePreview::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

