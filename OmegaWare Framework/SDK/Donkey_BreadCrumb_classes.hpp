#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Donkey_BreadCrumb

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace CG
{

// BlueprintGeneratedClass Donkey_BreadCrumb.Donkey_BreadCrumb_C
// 0x0078 (0x0298 - 0x0220)
class ADonkey_BreadCrumb_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Donkey_DestinationMarker;                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shape_Cone3;                                       // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shape_Cone;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   TerrainScannerMesh;                                // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Light02;                                        // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight_NoShadow;                               // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_front;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh_light;                                        // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NextPointLookat;                                   // 0x0288(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_Donkey_BreadCrumb(int32 EntryPoint);
	void Blink_Photosensitive();
	void Blink();
	void ReceiveBeginPlay();
	void SetNextArrowPoint(const struct FVector& NextPoint);
	void OnRep_NextPointLookat();

	struct FVector GetArrowPoint() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Donkey_BreadCrumb_C">();
	}
	static class ADonkey_BreadCrumb_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADonkey_BreadCrumb_C>();
	}
};
static_assert(alignof(ADonkey_BreadCrumb_C) == 0x000008, "Wrong alignment on ADonkey_BreadCrumb_C");
static_assert(sizeof(ADonkey_BreadCrumb_C) == 0x000298, "Wrong size on ADonkey_BreadCrumb_C");
static_assert(offsetof(ADonkey_BreadCrumb_C, UberGraphFrame) == 0x000220, "Member 'ADonkey_BreadCrumb_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, SM_Donkey_DestinationMarker) == 0x000228, "Member 'ADonkey_BreadCrumb_C::SM_Donkey_DestinationMarker' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, StaticMesh) == 0x000230, "Member 'ADonkey_BreadCrumb_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, Shape_Cone3) == 0x000238, "Member 'ADonkey_BreadCrumb_C::Shape_Cone3' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, Shape_Cone) == 0x000240, "Member 'ADonkey_BreadCrumb_C::Shape_Cone' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, Sphere) == 0x000248, "Member 'ADonkey_BreadCrumb_C::Sphere' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, TerrainScannerMesh) == 0x000250, "Member 'ADonkey_BreadCrumb_C::TerrainScannerMesh' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, PointLight) == 0x000258, "Member 'ADonkey_BreadCrumb_C::PointLight' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, SM_Light02) == 0x000260, "Member 'ADonkey_BreadCrumb_C::SM_Light02' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, PointLight_NoShadow) == 0x000268, "Member 'ADonkey_BreadCrumb_C::PointLight_NoShadow' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, Mesh_front) == 0x000270, "Member 'ADonkey_BreadCrumb_C::Mesh_front' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, Mesh_light) == 0x000278, "Member 'ADonkey_BreadCrumb_C::Mesh_light' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, Scene) == 0x000280, "Member 'ADonkey_BreadCrumb_C::Scene' has a wrong offset!");
static_assert(offsetof(ADonkey_BreadCrumb_C, NextPointLookat) == 0x000288, "Member 'ADonkey_BreadCrumb_C::NextPointLookat' has a wrong offset!");

}

