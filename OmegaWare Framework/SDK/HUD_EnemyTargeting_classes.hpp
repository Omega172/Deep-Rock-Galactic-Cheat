#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_EnemyTargeting

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_classes.hpp"
#include "UMG_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_EnemyTargeting.HUD_EnemyTargeting_C
// 0x0068 (0x0310 - 0x02A8)
class UHUD_EnemyTargeting_C final : public ULookingAtWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       DeadAnim;                                          // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetSwitcher*                        ContentSwitcher;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DeadIcon;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_EnemyTargeting_HealthBar_C*        HealthBar;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_EnemyTargeting_HealthBar_Elite_C*  HealthBar_Elite;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_EnemyTargeting_AfflictionBox_C*    HUD_EnemyTargeting_AfflictionBox;                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_EnemyTargeting_Temperature_C*      Icon_Temperature;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         StatusIconBox;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           VisibilityCanvas;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector                                LastTargetLocation;                                // 0x0300(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HealthBarVisible;                                  // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_HUD_EnemyTargeting(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnDamagedEnemy(const TScriptInterface<class IHealth>& EnemyHealth, float Damage, float DamageModifier, float HealthRemaining, bool IsWeakPoint, bool IsRadial);
	void Construct();
	void ReceiveNewTarget(class AActor* InCurrentTarget);
	void ReceiveUpdateTarget(class AActor* InCurrentTarget, float DeltaTime);
	void ReceiveTargetLost();
	void SetIsVisible(bool Param_IsVisible);
	void HandleTargetDamaged(TScriptInterface<class IHealth> Health, float Damage, float DamageModifier, float HealthRemaining, bool IsWeakPoint, bool IsRadial);
	void UpdateWidgets(bool Reset);
	void ClampToScreenHeight(float CoordinateY, float Bound, float* ClampedY);
	void UpdateScreenPosition();
	void SelectContent();
	void GetContent(class ULookingAtContentWidget** OutActiveContent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_EnemyTargeting_C">();
	}
	static class UHUD_EnemyTargeting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_EnemyTargeting_C>();
	}
};
static_assert(alignof(UHUD_EnemyTargeting_C) == 0x000008, "Wrong alignment on UHUD_EnemyTargeting_C");
static_assert(sizeof(UHUD_EnemyTargeting_C) == 0x000310, "Wrong size on UHUD_EnemyTargeting_C");
static_assert(offsetof(UHUD_EnemyTargeting_C, UberGraphFrame) == 0x0002A8, "Member 'UHUD_EnemyTargeting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, DeadAnim) == 0x0002B0, "Member 'UHUD_EnemyTargeting_C::DeadAnim' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, Intro) == 0x0002B8, "Member 'UHUD_EnemyTargeting_C::Intro' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, ContentSwitcher) == 0x0002C0, "Member 'UHUD_EnemyTargeting_C::ContentSwitcher' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, DeadIcon) == 0x0002C8, "Member 'UHUD_EnemyTargeting_C::DeadIcon' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, HealthBar) == 0x0002D0, "Member 'UHUD_EnemyTargeting_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, HealthBar_Elite) == 0x0002D8, "Member 'UHUD_EnemyTargeting_C::HealthBar_Elite' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, HUD_EnemyTargeting_AfflictionBox) == 0x0002E0, "Member 'UHUD_EnemyTargeting_C::HUD_EnemyTargeting_AfflictionBox' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, Icon_Temperature) == 0x0002E8, "Member 'UHUD_EnemyTargeting_C::Icon_Temperature' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, StatusIconBox) == 0x0002F0, "Member 'UHUD_EnemyTargeting_C::StatusIconBox' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, VisibilityCanvas) == 0x0002F8, "Member 'UHUD_EnemyTargeting_C::VisibilityCanvas' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, LastTargetLocation) == 0x000300, "Member 'UHUD_EnemyTargeting_C::LastTargetLocation' has a wrong offset!");
static_assert(offsetof(UHUD_EnemyTargeting_C, HealthBarVisible) == 0x00030C, "Member 'UHUD_EnemyTargeting_C::HealthBarVisible' has a wrong offset!");

}

