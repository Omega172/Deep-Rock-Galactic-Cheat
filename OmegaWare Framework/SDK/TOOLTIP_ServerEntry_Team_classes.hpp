#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TOOLTIP_ServerEntry_Team

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass TOOLTIP_ServerEntry_Team.TOOLTIP_ServerEntry_Team_C
// 0x0078 (0x02D8 - 0x0260)
class UTOOLTIP_ServerEntry_Team_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_Menu_MinimalWindow_C*            Basic_Menu_MinimalWindow;                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ContentBox;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateFontInfo                         ResourceFont;                                      // 0x0278(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         MaxIcons;                                          // 0x02D0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TOOLTIP_ServerEntry_Team(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetData(class UITM_ServerList_Entry_PlayerIcons_C* TeamWidget, TArray<class UPlayerCharacterID*>& Players, bool IsClassLocked);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TOOLTIP_ServerEntry_Team_C">();
	}
	static class UTOOLTIP_ServerEntry_Team_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTOOLTIP_ServerEntry_Team_C>();
	}
};
static_assert(alignof(UTOOLTIP_ServerEntry_Team_C) == 0x000008, "Wrong alignment on UTOOLTIP_ServerEntry_Team_C");
static_assert(sizeof(UTOOLTIP_ServerEntry_Team_C) == 0x0002D8, "Wrong size on UTOOLTIP_ServerEntry_Team_C");
static_assert(offsetof(UTOOLTIP_ServerEntry_Team_C, UberGraphFrame) == 0x000260, "Member 'UTOOLTIP_ServerEntry_Team_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Team_C, Basic_Menu_MinimalWindow) == 0x000268, "Member 'UTOOLTIP_ServerEntry_Team_C::Basic_Menu_MinimalWindow' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Team_C, ContentBox) == 0x000270, "Member 'UTOOLTIP_ServerEntry_Team_C::ContentBox' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Team_C, ResourceFont) == 0x000278, "Member 'UTOOLTIP_ServerEntry_Team_C::ResourceFont' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_ServerEntry_Team_C, MaxIcons) == 0x0002D0, "Member 'UTOOLTIP_ServerEntry_Team_C::MaxIcons' has a wrong offset!");

}

