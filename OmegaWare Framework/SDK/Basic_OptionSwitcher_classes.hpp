#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_OptionSwitcher

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENU_TextCase_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass Basic_OptionSwitcher.Basic_OptionSwitcher_C
// 0x0060 (0x02C0 - 0x0260)
class UBasic_OptionSwitcher_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             ArrowBox_Text;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ScrollArrow2_C*                  ArrowLeft;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ScrollArrow2_C*                  ArrowRight;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Left;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Right;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FText>                           Options;                                           // 0x0290(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         SelectedIndex;                                     // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop;                                              // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD3[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSelectionChanged;                                // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          White_Text;                                        // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENU_TextCase                                  TextCase;                                          // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ContainsOption(const class FText& Option, bool* DoesContain);
	bool RemoveOption(class FText& Item);
	void GetOptionCount(int32* Count);
	void ClearOptions();
	void Add_Option(const class FText& Option, int32* Param_Index);
	void GetSelectedValue(class FText* Value);
	void GetSelectedIndex(int32* Param_Index);
	void SetSelectedValue(const class FText& Value);
	void SetSelectedIndex(int32 NewIndex);
	void Set_Options(TArray<class FText>& Param_Options, int32 DefaultIndex);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Button_Left_K2Node_ComponentBoundEvent_143_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_Right_K2Node_ComponentBoundEvent_164_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Button_Left_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_Left_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_Right_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_Right_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void ExecuteUbergraph_Basic_OptionSwitcher(int32 EntryPoint);
	void OnSelectionChanged__DelegateSignature(const class FText& Value, int32 Param_Index);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Basic_OptionSwitcher_C">();
	}
	static class UBasic_OptionSwitcher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBasic_OptionSwitcher_C>();
	}
};
static_assert(alignof(UBasic_OptionSwitcher_C) == 0x000008, "Wrong alignment on UBasic_OptionSwitcher_C");
static_assert(sizeof(UBasic_OptionSwitcher_C) == 0x0002C0, "Wrong size on UBasic_OptionSwitcher_C");
static_assert(offsetof(UBasic_OptionSwitcher_C, UberGraphFrame) == 0x000260, "Member 'UBasic_OptionSwitcher_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, ArrowBox_Text) == 0x000268, "Member 'UBasic_OptionSwitcher_C::ArrowBox_Text' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, ArrowLeft) == 0x000270, "Member 'UBasic_OptionSwitcher_C::ArrowLeft' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, ArrowRight) == 0x000278, "Member 'UBasic_OptionSwitcher_C::ArrowRight' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, Button_Left) == 0x000280, "Member 'UBasic_OptionSwitcher_C::Button_Left' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, Button_Right) == 0x000288, "Member 'UBasic_OptionSwitcher_C::Button_Right' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, Options) == 0x000290, "Member 'UBasic_OptionSwitcher_C::Options' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, SelectedIndex) == 0x0002A0, "Member 'UBasic_OptionSwitcher_C::SelectedIndex' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, Loop) == 0x0002A4, "Member 'UBasic_OptionSwitcher_C::Loop' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, OnSelectionChanged) == 0x0002A8, "Member 'UBasic_OptionSwitcher_C::OnSelectionChanged' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, White_Text) == 0x0002B8, "Member 'UBasic_OptionSwitcher_C::White_Text' has a wrong offset!");
static_assert(offsetof(UBasic_OptionSwitcher_C, TextCase) == 0x0002B9, "Member 'UBasic_OptionSwitcher_C::TextCase' has a wrong offset!");

}

