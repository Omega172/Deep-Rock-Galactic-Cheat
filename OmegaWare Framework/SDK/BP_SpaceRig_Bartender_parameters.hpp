#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpaceRig_Bartender

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace CG::Params
{

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.ExecuteUbergraph_BP_SpaceRig_Bartender
// 0x07B0 (0x07B0 - 0x0000)
struct BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3001[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFSDPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3002[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3003[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_ComponentBoundEvent_user;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputKeys                                    K2Node_ComponentBoundEvent_key;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3004[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_canUse;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3005[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerController_SpaceRig_C*        K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3006[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_CustomEvent_Customer;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3007[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3008[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_CustomEvent_PlayerState;                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3009[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_300A[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDrinkableDataAsset*                    K2Node_CustomEvent_Drinable;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_PourTransform;                  // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Duration_1;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_300B[0x8];                                     // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01B0(0x0030)(IsPlainOldData, NoDestructor)
	class ABP_DrinksBox_C*                        K2Node_CustomEvent_DrinkBox_2;                     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanOrderNewRound_CanOrder;                // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_300C[0x1];                                     // 0x01EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_300D[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DrinksBox_C*                        K2Node_CustomEvent_DrinkBox_1;                     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_PlayFireworks;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_300E[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAffirmative_Duration;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_300F[0x8];                                     // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	TDelegate<void(bool CanUse)>                  K2Node_CreateDelegate_OutputDelegate_1;            // 0x0240(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3010[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DrinksBox_C*                        CallFunc_Array_Get_Item;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3011[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DrinksBox_C*                        K2Node_CustomEvent_DrinkBox;                       // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZY_ReturnValue;                // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Pour_PourDuration;                        // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3012[0x8];                                     // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3013[0x3];                                     // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3014[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3015[0x3];                                     // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0300(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3016[0x2];                                     // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayGreeting_Duration;                    // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_actor;                          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x03B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x03F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0414(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZY_ReturnValue_1;              // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3017[0x7];                                     // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0440(0x0030)(IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0470(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3018[0x3];                                     // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_DrinksBox_C* DrinkBox)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x047C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3019[0x4];                                     // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0490(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301A[0x7];                                     // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Bar_BackgroundMenu_C*               K2Node_DynamicCast_AsUI_Bar_Background_Menu;       // 0x04A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301B[0x3];                                     // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_DrinksBox_C* DrinkBox)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x04AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_301C[0x4];                                     // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_canUse;                         // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301D[0x3];                                     // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DrinksBox_C*                        CallFunc_Array_Get_Item_1;                         // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301E[0x4];                                     // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_Event_user;                                 // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayGreeting_Duration_1;                  // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301F[0x2];                                     // 0x04F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x04F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0500(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x050C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3020[0x8];                                     // 0x0518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0520(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZY_ReturnValue_2;              // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x058C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3021[0x8];                                     // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x05A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x05D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0600(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0630(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x06B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x06BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x06BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3022[0x3];                                     // 0x06BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue_1;            // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x06D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3023[0x2];                                     // 0x06D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x06DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3024[0x3];                                     // 0x06DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue_1;                      // 0x06E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0710(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DrinksBox_C*                        CallFunc_Array_Get_Item_2;                         // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Pour_PourDuration_1;                      // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender) == 0x000010, "Wrong alignment on BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender");
static_assert(sizeof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender) == 0x0007B0, "Wrong size on BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, EntryPoint) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Location) == 0x00001C, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Rotation) == 0x000028, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Scale) == 0x000034, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, Temp_bool_Has_Been_Initd_Variable) == 0x000050, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000054, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_HasAuthority_ReturnValue_1) == 0x000060, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Location_1) == 0x000064, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Rotation_1) == 0x000070, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Scale_1) == 0x00007C, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_ComponentBoundEvent_user) == 0x000088, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_ComponentBoundEvent_user' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_ComponentBoundEvent_key) == 0x000090, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_ComponentBoundEvent_key' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_GetPlayerController_ReturnValue) == 0x000098, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_ComponentBoundEvent_canUse) == 0x0000A0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_ComponentBoundEvent_canUse' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig) == 0x0000A8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_Customer) == 0x0000B8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_Customer' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C4, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_GetFSDGameState_ReturnValue) == 0x0000E0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_PlayerState) == 0x0000E8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeVector_ReturnValue) == 0x0000F4, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, Temp_bool_IsClosed_Variable) == 0x000100, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_Drinable) == 0x000108, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_Drinable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_PourTransform) == 0x000110, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_PourTransform' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_Duration_1) == 0x000140, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_Duration_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000144, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000150, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_GetRelativeTransform_ReturnValue) == 0x000180, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeTransform_ReturnValue) == 0x0001B0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_DrinkBox_2) == 0x0001E0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_DrinkBox_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Less_IntInt_ReturnValue) == 0x0001EC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_CanOrderNewRound_CanOrder) == 0x0001ED, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_CanOrderNewRound_CanOrder' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_IsValid_ReturnValue_1) == 0x0001EE, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Array_Length_ReturnValue_1) == 0x0001F0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_DrinkBox_1) == 0x0001F8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_DrinkBox_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_PlayFireworks) == 0x000200, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_PlayFireworks' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_PlayAffirmative_Duration) == 0x000204, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_PlayAffirmative_Duration' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000210, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CreateDelegate_OutputDelegate_1) == 0x000240, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, Temp_int_Array_Index_Variable) == 0x000250, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Array_Get_Item) == 0x000258, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeVector_ReturnValue_1) == 0x000260, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_DrinkBox) == 0x000270, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_DrinkBox' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeRotFromZY_ReturnValue) == 0x000278, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeRotFromZY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Pour_PourDuration) == 0x000284, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Pour_PourDuration' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeTransform_ReturnValue_1) == 0x000290, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Add_FloatFloat_ReturnValue) == 0x0002C0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, Temp_int_Loop_Counter_Variable_1) == 0x0002C4, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002C8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002CC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_GetAnimInstance_ReturnValue) == 0x0002D0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Montage_Play_ReturnValue) == 0x0002D8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0002E0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_ComponentBoundEvent_OtherActor) == 0x0002E8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_ComponentBoundEvent_OtherComp) == 0x0002F0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0002F8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_ComponentBoundEvent_bFromSweep) == 0x0002FC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_ComponentBoundEvent_SweepResult) == 0x000300, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_DynamicCast_AsPlayer_Character) == 0x000388, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_DynamicCast_bSuccess_1) == 0x000390, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_IsValid_ReturnValue_2) == 0x000391, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_PlayGreeting_Duration) == 0x000394, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_PlayGreeting_Duration' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_actor) == 0x000398, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_actor' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_Duration) == 0x0003A0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0003A4, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0003A8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0003B4, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x0003C0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0003F0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Location_2) == 0x0003FC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Rotation_2) == 0x000408, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Scale_2) == 0x000414, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeVector_ReturnValue_2) == 0x000420, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeRotFromZY_ReturnValue_1) == 0x00042C, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeRotFromZY_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_IsValid_ReturnValue_3) == 0x000438, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeTransform_ReturnValue_2) == 0x000440, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000470, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_IsValid_ReturnValue_4) == 0x000478, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CreateDelegate_OutputDelegate_2) == 0x00047C, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000490, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_Enabled) == 0x000498, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_DynamicCast_AsUI_Bar_Background_Menu) == 0x0004A0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_DynamicCast_AsUI_Bar_Background_Menu' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_DynamicCast_bSuccess_2) == 0x0004A8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CreateDelegate_OutputDelegate_3) == 0x0004AC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0004C0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_CustomEvent_canUse) == 0x0004C8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_CustomEvent_canUse' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, Temp_int_Array_Index_Variable_1) == 0x0004CC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Array_Get_Item_1) == 0x0004D0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, Temp_int_Variable) == 0x0004D8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_Event_user) == 0x0004E0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_Event_user' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_PlayGreeting_Duration_1) == 0x0004E8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_PlayGreeting_Duration_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0004EC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_IsValid_ReturnValue_5) == 0x0004F0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_IsValid_ReturnValue_6) == 0x0004F1, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Location_3) == 0x0004F4, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Rotation_3) == 0x000500, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Scale_3) == 0x00050C, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeTransform_ReturnValue_3) == 0x000520, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000550, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x00055C, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeRotFromZY_ReturnValue_2) == 0x000568, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeRotFromZY_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Location_4) == 0x000574, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Rotation_4) == 0x000580, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BreakTransform_Scale_4) == 0x00058C, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeTransform_ReturnValue_4) == 0x0005A0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_MakeTransform_ReturnValue_5) == 0x0005D0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_TLerp_ReturnValue) == 0x000600, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000630, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Not_PreBool_ReturnValue) == 0x0006B8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_IsValid_ReturnValue_7) == 0x0006B9, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Not_PreBool_ReturnValue_1) == 0x0006BA, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Not_PreBool_ReturnValue_2) == 0x0006BB, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_IsValid_ReturnValue_8) == 0x0006BC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_GetFSDGameState_ReturnValue_1) == 0x0006C0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_GetFSDGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Array_Length_ReturnValue_2) == 0x0006C8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Array_Length_ReturnValue_3) == 0x0006CC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Min_ReturnValue) == 0x0006D0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Less_IntInt_ReturnValue_2) == 0x0006D4, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_BooleanAND_ReturnValue) == 0x0006D5, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Add_IntInt_ReturnValue_2) == 0x0006D8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, Temp_bool_Variable) == 0x0006DC, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_TLerp_ReturnValue_1) == 0x0006E0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_TLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000710, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, K2Node_Select_Default) == 0x000798, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Array_Get_Item_2) == 0x0007A0, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender, CallFunc_Pour_PourDuration_1) == 0x0007A8, "Member 'BP_SpaceRig_Bartender_C_ExecuteUbergraph_BP_SpaceRig_Bartender::CallFunc_Pour_PourDuration_1' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.PlayBartenderTip
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_PlayBartenderTip final
{
public:
	class APlayerCharacter*                       User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_PlayBartenderTip) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_PlayBartenderTip");
static_assert(sizeof(BP_SpaceRig_Bartender_C_PlayBartenderTip) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_PlayBartenderTip");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayBartenderTip, User) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_PlayBartenderTip::User' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.OnUsableChanged_Mixer
// 0x0001 (0x0001 - 0x0000)
struct BP_SpaceRig_Bartender_C_OnUsableChanged_Mixer final
{
public:
	bool                                          CanUse;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_OnUsableChanged_Mixer) == 0x000001, "Wrong alignment on BP_SpaceRig_Bartender_C_OnUsableChanged_Mixer");
static_assert(sizeof(BP_SpaceRig_Bartender_C_OnUsableChanged_Mixer) == 0x000001, "Wrong size on BP_SpaceRig_Bartender_C_OnUsableChanged_Mixer");
static_assert(offsetof(BP_SpaceRig_Bartender_C_OnUsableChanged_Mixer, CanUse) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_OnUsableChanged_Mixer::CanUse' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.Toggle Fireworks
// 0x0001 (0x0001 - 0x0000)
struct BP_SpaceRig_Bartender_C_Toggle_Fireworks final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_Toggle_Fireworks) == 0x000001, "Wrong alignment on BP_SpaceRig_Bartender_C_Toggle_Fireworks");
static_assert(sizeof(BP_SpaceRig_Bartender_C_Toggle_Fireworks) == 0x000001, "Wrong size on BP_SpaceRig_Bartender_C_Toggle_Fireworks");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Toggle_Fireworks, Enabled) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_Toggle_Fireworks::Enabled' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.Look Towards
// 0x0010 (0x0010 - 0x0000)
struct BP_SpaceRig_Bartender_C_Look_Towards final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_Look_Towards) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_Look_Towards");
static_assert(sizeof(BP_SpaceRig_Bartender_C_Look_Towards) == 0x000010, "Wrong size on BP_SpaceRig_Bartender_C_Look_Towards");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Look_Towards, Actor) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_Look_Towards::Actor' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Look_Towards, Duration) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_Look_Towards::Duration' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3025[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_SpaceRig_Bartender_C_BndEvt__GreetColliderBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.Client Spawn Next Drink
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_Client_Spawn_Next_Drink final
{
public:
	class ABP_DrinksBox_C*                        DrinkBox;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_Client_Spawn_Next_Drink) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_Client_Spawn_Next_Drink");
static_assert(sizeof(BP_SpaceRig_Bartender_C_Client_Spawn_Next_Drink) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_Client_Spawn_Next_Drink");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Client_Spawn_Next_Drink, DrinkBox) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_Client_Spawn_Next_Drink::DrinkBox' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.All_BeginSpawnDrinks
// 0x0001 (0x0001 - 0x0000)
struct BP_SpaceRig_Bartender_C_All_BeginSpawnDrinks final
{
public:
	bool                                          PlayFireworks;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_All_BeginSpawnDrinks) == 0x000001, "Wrong alignment on BP_SpaceRig_Bartender_C_All_BeginSpawnDrinks");
static_assert(sizeof(BP_SpaceRig_Bartender_C_All_BeginSpawnDrinks) == 0x000001, "Wrong size on BP_SpaceRig_Bartender_C_All_BeginSpawnDrinks");
static_assert(offsetof(BP_SpaceRig_Bartender_C_All_BeginSpawnDrinks, PlayFireworks) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_All_BeginSpawnDrinks::PlayFireworks' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.OnDrinkReady_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_OnDrinkReady_Event final
{
public:
	class ABP_DrinksBox_C*                        DrinkBox;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_OnDrinkReady_Event) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_OnDrinkReady_Event");
static_assert(sizeof(BP_SpaceRig_Bartender_C_OnDrinkReady_Event) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_OnDrinkReady_Event");
static_assert(offsetof(BP_SpaceRig_Bartender_C_OnDrinkReady_Event, DrinkBox) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_OnDrinkReady_Event::DrinkBox' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.OnAvailableForNewDrink_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_OnAvailableForNewDrink_Event final
{
public:
	class ABP_DrinksBox_C*                        DrinkBox;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_OnAvailableForNewDrink_Event) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_OnAvailableForNewDrink_Event");
static_assert(sizeof(BP_SpaceRig_Bartender_C_OnAvailableForNewDrink_Event) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_OnAvailableForNewDrink_Event");
static_assert(offsetof(BP_SpaceRig_Bartender_C_OnAvailableForNewDrink_Event, DrinkBox) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_OnAvailableForNewDrink_Event::DrinkBox' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.Lerp To
// 0x0040 (0x0040 - 0x0000)
struct BP_SpaceRig_Bartender_C_Lerp_To final
{
public:
	struct FTransform                             PourTransform;                                     // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         Duration;                                          // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_Lerp_To) == 0x000010, "Wrong alignment on BP_SpaceRig_Bartender_C_Lerp_To");
static_assert(sizeof(BP_SpaceRig_Bartender_C_Lerp_To) == 0x000040, "Wrong size on BP_SpaceRig_Bartender_C_Lerp_To");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Lerp_To, PourTransform) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_Lerp_To::PourTransform' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Lerp_To, Duration) == 0x000030, "Member 'BP_SpaceRig_Bartender_C_Lerp_To::Duration' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.SpawnDrinks
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_SpawnDrinks final
{
public:
	class UDrinkableDataAsset*                    Drinable;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_SpawnDrinks) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_SpawnDrinks");
static_assert(sizeof(BP_SpaceRig_Bartender_C_SpawnDrinks) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_SpawnDrinks");
static_assert(offsetof(BP_SpaceRig_Bartender_C_SpawnDrinks, Drinable) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_SpawnDrinks::Drinable' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.OnPlayerLeave_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_OnPlayerLeave_Event final
{
public:
	class AFSDPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_OnPlayerLeave_Event) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_OnPlayerLeave_Event");
static_assert(sizeof(BP_SpaceRig_Bartender_C_OnPlayerLeave_Event) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_OnPlayerLeave_Event");
static_assert(offsetof(BP_SpaceRig_Bartender_C_OnPlayerLeave_Event, PlayerState) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_OnPlayerLeave_Event::PlayerState' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.LookAtCustomer
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_LookAtCustomer final
{
public:
	class APlayerCharacter*                       Customer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_LookAtCustomer) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_LookAtCustomer");
static_assert(sizeof(BP_SpaceRig_Bartender_C_LookAtCustomer) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_LookAtCustomer");
static_assert(offsetof(BP_SpaceRig_Bartender_C_LookAtCustomer, Customer) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_LookAtCustomer::Customer' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsableChangedSignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsableChangedSignature__DelegateSignature final
{
public:
	bool                                          CanUse;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsableChangedSignature__DelegateSignature) == 0x000001, "Wrong alignment on BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsableChangedSignature__DelegateSignature");
static_assert(sizeof(BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsableChangedSignature__DelegateSignature) == 0x000001, "Wrong size on BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsableChangedSignature__DelegateSignature");
static_assert(offsetof(BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsableChangedSignature__DelegateSignature, CanUse) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsableChangedSignature__DelegateSignature::CanUse' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature final
{
public:
	class APlayerCharacter*                       User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputKeys                                    Key;                                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature");
static_assert(sizeof(BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature) == 0x000010, "Wrong size on BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature");
static_assert(offsetof(BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature, User) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature::User' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature, Key) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_BndEvt__BarUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature::Key' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.CanOrderNewRound
// 0x0020 (0x0020 - 0x0000)
struct BP_SpaceRig_Bartender_C_CanOrderNewRound final
{
public:
	bool                                          CanOrder;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3026[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DrinksBox_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAvailable_IsAvailable;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_CanOrderNewRound) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_CanOrderNewRound");
static_assert(sizeof(BP_SpaceRig_Bartender_C_CanOrderNewRound) == 0x000020, "Wrong size on BP_SpaceRig_Bartender_C_CanOrderNewRound");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, CanOrder) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::CanOrder' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, CallFunc_IsAvailable_IsAvailable) == 0x00001C, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::CallFunc_IsAvailable_IsAvailable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_CanOrderNewRound, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'BP_SpaceRig_Bartender_C_CanOrderNewRound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.SetCustomer
// 0x0020 (0x0020 - 0x0000)
struct BP_SpaceRig_Bartender_C_SetCustomer final
{
public:
	class APlayerCharacter*                       Customer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3027[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetPlayerState_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOrderNewRound_CanOrder;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_SetCustomer) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_SetCustomer");
static_assert(sizeof(BP_SpaceRig_Bartender_C_SetCustomer) == 0x000020, "Wrong size on BP_SpaceRig_Bartender_C_SetCustomer");
static_assert(offsetof(BP_SpaceRig_Bartender_C_SetCustomer, Customer) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_SetCustomer::Customer' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_SetCustomer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_SetCustomer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_SetCustomer, CallFunc_GetPlayerState_ReturnValue) == 0x000010, "Member 'BP_SpaceRig_Bartender_C_SetCustomer::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_SetCustomer, CallFunc_CanOrderNewRound_CanOrder) == 0x000018, "Member 'BP_SpaceRig_Bartender_C_SetCustomer::CallFunc_CanOrderNewRound_CanOrder' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.SetBartenderLightMaterial
// 0x0018 (0x0018 - 0x0000)
struct BP_SpaceRig_Bartender_C_SetBartenderLightMaterial final
{
public:
	class UMaterialInterface*                     SourceMaterial;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_SetBartenderLightMaterial) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_SetBartenderLightMaterial");
static_assert(sizeof(BP_SpaceRig_Bartender_C_SetBartenderLightMaterial) == 0x000018, "Wrong size on BP_SpaceRig_Bartender_C_SetBartenderLightMaterial");
static_assert(offsetof(BP_SpaceRig_Bartender_C_SetBartenderLightMaterial, SourceMaterial) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_SetBartenderLightMaterial::SourceMaterial' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_SetBartenderLightMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_SetBartenderLightMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_SetBartenderLightMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000010, "Member 'BP_SpaceRig_Bartender_C_SetBartenderLightMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.Pour
// 0x0070 (0x0070 - 0x0000)
struct BP_SpaceRig_Bartender_C_Pour final
{
public:
	class ABP_DrinksBox_C*                        DrinkBox;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PourDuration;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3028[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3029[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_Pour) == 0x000010, "Wrong alignment on BP_SpaceRig_Bartender_C_Pour");
static_assert(sizeof(BP_SpaceRig_Bartender_C_Pour) == 0x000070, "Wrong size on BP_SpaceRig_Bartender_C_Pour");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Pour, DrinkBox) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_Pour::DrinkBox' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Pour, PourDuration) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_Pour::PourDuration' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Pour, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'BP_SpaceRig_Bartender_C_Pour::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Pour, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BP_SpaceRig_Bartender_C_Pour::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Pour, CallFunc_GetAnimInstance_ReturnValue) == 0x000050, "Member 'BP_SpaceRig_Bartender_C_Pour::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Pour, CallFunc_Montage_Play_ReturnValue) == 0x000058, "Member 'BP_SpaceRig_Bartender_C_Pour::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Pour, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'BP_SpaceRig_Bartender_C_Pour::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.PlayAffirmative
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_PlayAffirmative final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnim_Duration;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_PlayAffirmative) == 0x000004, "Wrong alignment on BP_SpaceRig_Bartender_C_PlayAffirmative");
static_assert(sizeof(BP_SpaceRig_Bartender_C_PlayAffirmative) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_PlayAffirmative");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayAffirmative, Duration) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_PlayAffirmative::Duration' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayAffirmative, CallFunc_PlayAnim_Duration) == 0x000004, "Member 'BP_SpaceRig_Bartender_C_PlayAffirmative::CallFunc_PlayAnim_Duration' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.PlayNegative
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_PlayNegative final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnim_Duration;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_PlayNegative) == 0x000004, "Wrong alignment on BP_SpaceRig_Bartender_C_PlayNegative");
static_assert(sizeof(BP_SpaceRig_Bartender_C_PlayNegative) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_PlayNegative");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayNegative, Duration) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_PlayNegative::Duration' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayNegative, CallFunc_PlayAnim_Duration) == 0x000004, "Member 'BP_SpaceRig_Bartender_C_PlayNegative::CallFunc_PlayAnim_Duration' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.PlayAnim
// 0x0020 (0x0020 - 0x0000)
struct BP_SpaceRig_Bartender_C_PlayAnim final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_PlayAnim) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_PlayAnim");
static_assert(sizeof(BP_SpaceRig_Bartender_C_PlayAnim) == 0x000020, "Wrong size on BP_SpaceRig_Bartender_C_PlayAnim");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayAnim, MontageToPlay) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_PlayAnim::MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayAnim, Duration) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_PlayAnim::Duration' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayAnim, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_SpaceRig_Bartender_C_PlayAnim::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayAnim, CallFunc_Montage_Play_ReturnValue) == 0x000018, "Member 'BP_SpaceRig_Bartender_C_PlayAnim::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.PlayGreeting
// 0x0008 (0x0008 - 0x0000)
struct BP_SpaceRig_Bartender_C_PlayGreeting final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnim_Duration;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_PlayGreeting) == 0x000004, "Wrong alignment on BP_SpaceRig_Bartender_C_PlayGreeting");
static_assert(sizeof(BP_SpaceRig_Bartender_C_PlayGreeting) == 0x000008, "Wrong size on BP_SpaceRig_Bartender_C_PlayGreeting");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayGreeting, Duration) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_PlayGreeting::Duration' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PlayGreeting, CallFunc_PlayAnim_Duration) == 0x000004, "Member 'BP_SpaceRig_Bartender_C_PlayGreeting::CallFunc_PlayAnim_Duration' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.Spawn Mixer Beer
// 0x0048 (0x0048 - 0x0000)
struct BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer final
{
public:
	class FString                                 ControlEventID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         MixerCooldownToSet;                                // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDrinkableDataAsset*                    OrderedDrink;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Ordering_Player;                                   // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Announcement_Text;                                 // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer");
static_assert(sizeof(BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer) == 0x000048, "Wrong size on BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer, ControlEventID) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer::ControlEventID' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer, MixerCooldownToSet) == 0x000010, "Member 'BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer::MixerCooldownToSet' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer, OrderedDrink) == 0x000018, "Member 'BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer::OrderedDrink' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer, Ordering_Player) == 0x000020, "Member 'BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer::Ordering_Player' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer, Announcement_Text) == 0x000030, "Member 'BP_SpaceRig_Bartender_C_Spawn_Mixer_Beer::Announcement_Text' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.PayCredits
// 0x0030 (0x0030 - 0x0000)
struct BP_SpaceRig_Bartender_C_PayCredits final
{
public:
	class APlayerCharacter*                       User;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Purchased;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetPlayerState_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerController*                   CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerController_SpaceRig_C*        K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_PayCredits) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_PayCredits");
static_assert(sizeof(BP_SpaceRig_Bartender_C_PayCredits) == 0x000030, "Wrong size on BP_SpaceRig_Bartender_C_PayCredits");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PayCredits, User) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_PayCredits::User' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PayCredits, Amount) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_PayCredits::Amount' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PayCredits, Purchased) == 0x00000C, "Member 'BP_SpaceRig_Bartender_C_PayCredits::Purchased' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PayCredits, CallFunc_GetPlayerState_ReturnValue) == 0x000010, "Member 'BP_SpaceRig_Bartender_C_PayCredits::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PayCredits, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_SpaceRig_Bartender_C_PayCredits::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PayCredits, K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig) == 0x000020, "Member 'BP_SpaceRig_Bartender_C_PayCredits::K2Node_DynamicCast_AsBP_Player_Controller_Space_Rig' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PayCredits, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SpaceRig_Bartender_C_PayCredits::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_PayCredits, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_SpaceRig_Bartender_C_PayCredits::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SpaceRig_Bartender.BP_SpaceRig_Bartender_C.UpdateHolidayDecoration
// 0x00F8 (0x00F8 - 0x0000)
struct BP_SpaceRig_Bartender_C_UpdateHolidayDecoration final
{
public:
	EHolidayType                                  Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHolidayType                                  Temp_byte_Variable_1;                              // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHolidayType                                  Temp_byte_Variable_2;                              // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHolidayType                                  Temp_byte_Variable_3;                              // 0x0003(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHolidayType                                  Temp_byte_Variable_4;                              // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHolidayType                                  Temp_byte_Variable_5;                              // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHolidayType                                  Temp_byte_Variable_6;                              // 0x0006(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302D[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FHolidayMeshItems                      K2Node_MakeStruct_HolidayMeshItems;                // 0x0018(0x0010)(ContainsInstancedReference)
	class UFSDEventManager*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEventTypeActive_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_2;                          // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FHolidayMeshItems                      K2Node_MakeStruct_HolidayMeshItems_1;              // 0x0058(0x0010)(ContainsInstancedReference)
	struct FHolidayMeshItems                      K2Node_MakeStruct_HolidayMeshItems_2;              // 0x0068(0x0010)(ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_3;                          // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_4;                          // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FHolidayMeshItems                      K2Node_MakeStruct_HolidayMeshItems_3;              // 0x0098(0x0010)(ContainsInstancedReference)
	struct FHolidayMeshItems                      K2Node_MakeStruct_HolidayMeshItems_4;              // 0x00A8(0x0010)(ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_5;                          // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_6;                          // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FHolidayMeshItems                      K2Node_MakeStruct_HolidayMeshItems_5;              // 0x00D8(0x0010)(ContainsInstancedReference)
	struct FHolidayMeshItems                      K2Node_MakeStruct_HolidayMeshItems_6;              // 0x00E8(0x0010)(ContainsInstancedReference)
};
static_assert(alignof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration) == 0x000008, "Wrong alignment on BP_SpaceRig_Bartender_C_UpdateHolidayDecoration");
static_assert(sizeof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration) == 0x0000F8, "Wrong size on BP_SpaceRig_Bartender_C_UpdateHolidayDecoration");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, Temp_byte_Variable) == 0x000000, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, Temp_byte_Variable_1) == 0x000001, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, Temp_byte_Variable_2) == 0x000002, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, Temp_byte_Variable_3) == 0x000003, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, Temp_byte_Variable_4) == 0x000004, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, Temp_byte_Variable_5) == 0x000005, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, Temp_byte_Variable_6) == 0x000006, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeStruct_HolidayMeshItems) == 0x000018, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeStruct_HolidayMeshItems' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, CallFunc_IsEventTypeActive_ReturnValue) == 0x000030, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::CallFunc_IsEventTypeActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeArray_Array_1) == 0x000038, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeArray_Array_2) == 0x000048, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeStruct_HolidayMeshItems_1) == 0x000058, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeStruct_HolidayMeshItems_1' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeStruct_HolidayMeshItems_2) == 0x000068, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeStruct_HolidayMeshItems_2' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeArray_Array_3) == 0x000078, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeArray_Array_4) == 0x000088, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeStruct_HolidayMeshItems_3) == 0x000098, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeStruct_HolidayMeshItems_3' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeStruct_HolidayMeshItems_4) == 0x0000A8, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeStruct_HolidayMeshItems_4' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeArray_Array_5) == 0x0000B8, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeArray_Array_6) == 0x0000C8, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeStruct_HolidayMeshItems_5) == 0x0000D8, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeStruct_HolidayMeshItems_5' has a wrong offset!");
static_assert(offsetof(BP_SpaceRig_Bartender_C_UpdateHolidayDecoration, K2Node_MakeStruct_HolidayMeshItems_6) == 0x0000E8, "Member 'BP_SpaceRig_Bartender_C_UpdateHolidayDecoration::K2Node_MakeStruct_HolidayMeshItems_6' has a wrong offset!");

}

