#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerController

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "FSD_structs.hpp"


namespace CG::Params
{

// Function BP_PlayerController.BP_PlayerController_C.ExecuteUbergraph_BP_PlayerController
// 0x0528 (0x0528 - 0x0000)
struct BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_36F1[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_9;                        // 0x0018(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F2[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0038(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F3[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0058(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_10;                       // 0x0070(0x0018)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_8;                        // 0x00A8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F4[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_11;                       // 0x00C8(0x0018)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture>                CallFunc_GetRandomSpacerigLoadImagePath_Output;    // 0x00E0(0x0028)(HasGetValueTypeHash)
	class UPlayerCharacterID*                     K2Node_CustomEvent_Hero_1;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FindPlayerStart_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0140(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F5[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_12;                       // 0x0160(0x0018)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetVoiceStatus_ReturnValue;               // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_13;                       // 0x0188(0x0018)(HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x01A8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F6[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_3;                            // 0x01C8(0x0018)(HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue_1;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue;       // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F7[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue_2;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_14;                       // 0x0208(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_15;                       // 0x0220(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue_1;         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F8[0x6];                                     // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_7;                        // 0x0250(0x0018)(HasGetValueTypeHash)
	class UPlayerCharacterID*                     K2Node_CustomEvent_Hero;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue_3;          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue_4;          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue_1;     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0288(0x0018)(HasGetValueTypeHash)
	class UMusicManager*                          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue_5;          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x02B0(0x0018)(HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue_2;     // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36F9[0x2];                                     // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_4;                            // 0x02E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x02F8(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FA[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0318(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Event_areObjectivesCompleted;               // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FB[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_numberOfPlayersInPod;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FC[0x7];                                     // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0340(0x0018)(HasGetValueTypeHash)
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue;             // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADeepCSGWorld*                          CallFunc_GetCSGWorld_ReturnValue;                  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FD[0x6];                                     // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0370(0x0018)()
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FE[0x7];                                     // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_16;                       // 0x03A0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue;               // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36FF[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x03C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x03D8(0x0018)(HasGetValueTypeHash)
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue_1;           // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UWindowWidget>              CallFunc_LoadWindowWidgetClass_ReturnValue;        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue_1;            // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWindowWidget*                          CallFunc_OpenWindowFromClass_ReturnValue;          // 0x0410(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStats*                             CallFunc_GetGameStats_ReturnValue;                 // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3700[0x5];                                     // 0x0423(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0428(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3701[0x7];                                     // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue_1;             // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3702[0x6];                                     // 0x045A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0460(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_ShouldSkipEndscreen_ReturnValue;          // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3703[0x7];                                     // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue_1;             // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x0488(0x0018)(HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3704[0x7];                                     // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue_2;         // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue_3;         // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESteamBranch                                  CallFunc_GetSteamBranch_ReturnValue;               // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3705[0x6];                                     // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x04D0(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3706[0x7];                                     // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue_2;           // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClass_ReturnValue;                    // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayInEditor_ReturnValue_2;             // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3707[0x7];                                     // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsWindow_Widget;           // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3708[0x6];                                     // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWindowWidget*                          CallFunc_OpenWindowFromClass_ReturnValue_1;        // 0x0518(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController) == 0x000008, "Wrong alignment on BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController");
static_assert(sizeof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController) == 0x000528, "Wrong size on BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, EntryPoint) == 0x000000, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_9) == 0x000018, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_int_Variable) == 0x000030, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_bool_IsClosed_Variable) == 0x000034, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000035, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key) == 0x000038, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_bool_Has_Been_Initd_Variable) == 0x000050, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000051, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_struct_Variable) == 0x000058, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_10) == 0x000070, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_8) == 0x0000A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_HasAuthority_ReturnValue) == 0x0000C0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_11) == 0x0000C8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetRandomSpacerigLoadImagePath_Output) == 0x0000E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetRandomSpacerigLoadImagePath_Output' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Hero_1) == 0x000108, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Hero_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_FindPlayerStart_ReturnValue) == 0x000110, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_FindPlayerStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDGameMode_ReturnValue) == 0x000118, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000120, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000130, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_struct_Variable_1) == 0x000140, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_int_Variable_1) == 0x000158, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_12) == 0x000160, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetVoiceStatus_ReturnValue) == 0x000178, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetVoiceStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_13) == 0x000188, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetProceduralSetup_ReturnValue) == 0x0001A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetProceduralSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_struct_Variable_2) == 0x0001A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_struct_Variable_3) == 0x0001C8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDPlayerState_ReturnValue) == 0x0001E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDPlayerState_ReturnValue_1) == 0x0001E8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSelectedCharacterID_ReturnValue) == 0x0001F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSelectedCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_1) == 0x0001F8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDPlayerState_ReturnValue_2) == 0x000200, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDPlayerState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_14) == 0x000208, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_15) == 0x000220, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Add_IntInt_ReturnValue) == 0x000238, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Subtract_IntInt_ReturnValue) == 0x00023C, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetProceduralSetup_ReturnValue_1) == 0x000240, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetProceduralSetup_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsLocalController_ReturnValue) == 0x000248, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_2) == 0x000249, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_7) == 0x000250, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Hero) == 0x000268, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Hero' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDPlayerState_ReturnValue_3) == 0x000270, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDPlayerState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDPlayerState_ReturnValue_4) == 0x000278, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDPlayerState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSelectedCharacterID_ReturnValue_1) == 0x000280, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSelectedCharacterID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_1) == 0x000288, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetWorldSubsystem_ReturnValue) == 0x0002A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDPlayerState_ReturnValue_5) == 0x0002A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDPlayerState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key) == 0x0002B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSelectedCharacterID_ReturnValue_2) == 0x0002C8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSelectedCharacterID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_3) == 0x0002D0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_4) == 0x0002D1, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002D4, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002D8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_int_Variable_2) == 0x0002DC, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_struct_Variable_4) == 0x0002E0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_2) == 0x0002F8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_int_Variable_3) == 0x000310, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_1) == 0x000318, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_areObjectivesCompleted) == 0x000330, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_areObjectivesCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Event_numberOfPlayersInPod) == 0x000334, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Event_numberOfPlayersInPod' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_5) == 0x000338, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputActionEvent_Key_3) == 0x000340, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetWindowManager_ReturnValue) == 0x000358, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetWindowManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetCSGWorld_ReturnValue) == 0x000360, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetCSGWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_6) == 0x000368, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_bool_Variable) == 0x000369, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_MakeLiteralText_ReturnValue) == 0x000370, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_HasAuthority_ReturnValue_1) == 0x000388, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_Conv_TextToString_ReturnValue) == 0x000390, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_16) == 0x0003A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsPlayInEditor_ReturnValue) == 0x0003B8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsPlayInEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_2) == 0x0003C0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_3) == 0x0003D8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetWindowManager_ReturnValue_1) == 0x0003F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetWindowManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDGameState_ReturnValue) == 0x0003F8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_LoadWindowWidgetClass_ReturnValue) == 0x000400, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_LoadWindowWidgetClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDGameState_ReturnValue_1) == 0x000408, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_OpenWindowFromClass_ReturnValue) == 0x000410, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_OpenWindowFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetGameStats_ReturnValue) == 0x000418, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetGameStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_7) == 0x000420, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsValid_ReturnValue_8) == 0x000421, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BooleanAND_ReturnValue) == 0x000422, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_4) == 0x000428, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000440, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_object_Variable) == 0x000448, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsTexture) == 0x000450, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess) == 0x000458, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsPlayInEditor_ReturnValue_1) == 0x000459, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsPlayInEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_5) == 0x000460, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_ShouldSkipEndscreen_ReturnValue) == 0x000478, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_ShouldSkipEndscreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetFSDGameMode_ReturnValue_1) == 0x000480, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetFSDGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, Temp_struct_Variable_5) == 0x000488, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_K2_GetPawn_ReturnValue) == 0x0004A0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_AsPlayer_Character) == 0x0004A8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_DynamicCast_bSuccess_1) == 0x0004B0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetProceduralSetup_ReturnValue_2) == 0x0004B8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetProceduralSetup_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetProceduralSetup_ReturnValue_3) == 0x0004C0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetProceduralSetup_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetSteamBranch_ReturnValue) == 0x0004C8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetSteamBranch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0004C9, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_InputKeyEvent_Key_6) == 0x0004D0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_Select_Default) == 0x0004E8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_GetWindowManager_ReturnValue_2) == 0x0004F0, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_GetWindowManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_LoadClass_ReturnValue) == 0x0004F8, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_LoadClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_IsPlayInEditor_ReturnValue_2) == 0x000500, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_IsPlayInEditor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_ClassDynamicCast_AsWindow_Widget) == 0x000508, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_ClassDynamicCast_AsWindow_Widget' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_ClassDynamicCast_bSuccess) == 0x000510, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_BooleanOR_ReturnValue) == 0x000511, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, CallFunc_OpenWindowFromClass_ReturnValue_1) == 0x000518, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::CallFunc_OpenWindowFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController, K2Node_CustomEvent_Loaded) == 0x000520, "Member 'BP_PlayerController_C_ExecuteUbergraph_BP_PlayerController::K2Node_CustomEvent_Loaded' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.Receive_EndLevel_WaitForData
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_Receive_EndLevel_WaitForData final
{
public:
	bool                                          AreObjectivesCompleted;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3709[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfPlayersInPod;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_Receive_EndLevel_WaitForData) == 0x000004, "Wrong alignment on BP_PlayerController_C_Receive_EndLevel_WaitForData");
static_assert(sizeof(BP_PlayerController_C_Receive_EndLevel_WaitForData) == 0x000008, "Wrong size on BP_PlayerController_C_Receive_EndLevel_WaitForData");
static_assert(offsetof(BP_PlayerController_C_Receive_EndLevel_WaitForData, AreObjectivesCompleted) == 0x000000, "Member 'BP_PlayerController_C_Receive_EndLevel_WaitForData::AreObjectivesCompleted' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_Receive_EndLevel_WaitForData, NumberOfPlayersInPod) == 0x000004, "Member 'BP_PlayerController_C_Receive_EndLevel_WaitForData::NumberOfPlayersInPod' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.SelectLateJoinCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_SelectLateJoinCharacter final
{
public:
	class UPlayerCharacterID*                     Hero;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_SelectLateJoinCharacter) == 0x000008, "Wrong alignment on BP_PlayerController_C_SelectLateJoinCharacter");
static_assert(sizeof(BP_PlayerController_C_SelectLateJoinCharacter) == 0x000008, "Wrong size on BP_PlayerController_C_SelectLateJoinCharacter");
static_assert(offsetof(BP_PlayerController_C_SelectLateJoinCharacter, Hero) == 0x000000, "Member 'BP_PlayerController_C_SelectLateJoinCharacter::Hero' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.SelectNewHero
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_SelectNewHero final
{
public:
	class UPlayerCharacterID*                     Hero;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_SelectNewHero) == 0x000008, "Wrong alignment on BP_PlayerController_C_SelectNewHero");
static_assert(sizeof(BP_PlayerController_C_SelectNewHero) == 0x000008, "Wrong size on BP_PlayerController_C_SelectNewHero");
static_assert(offsetof(BP_PlayerController_C_SelectNewHero, Hero) == 0x000000, "Member 'BP_PlayerController_C_SelectNewHero::Hero' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Ctrl+Alt_O_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_CtrlPlusAlt_O_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_CtrlPlusAlt_O_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_CtrlPlusAlt_O_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_CtrlPlusAlt_O_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_CtrlPlusAlt_O_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_CtrlPlusAlt_O_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_CtrlPlusAlt_O_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Ctrl+Alt_N_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_CtrlPlusAlt_N_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_CtrlPlusAlt_N_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_CtrlPlusAlt_N_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_CtrlPlusAlt_N_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_CtrlPlusAlt_N_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_CtrlPlusAlt_N_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_CtrlPlusAlt_N_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Multiply_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Multiply_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Multiply_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Multiply_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Multiply_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Multiply_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Multiply_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Multiply_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Add_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Add_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Add_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Add_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Add_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Add_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Add_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Add_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Subtract_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Subtract_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Subtract_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Subtract_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Subtract_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Subtract_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Subtract_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Subtract_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_H_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_H_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_H_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_H_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_H_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_H_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_H_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_H_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_7");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_7");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_8");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_8");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_9) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_9");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_9) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_9");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_9, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputKeyEvent_9::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Chat_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Chat_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Zero_K2Node_InputKeyEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_10) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_10");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_10) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_10");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_10, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_10::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Zero_K2Node_InputKeyEvent_11
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_11) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_11");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_11) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_11");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_11, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Zero_K2Node_InputKeyEvent_11::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Nine_K2Node_InputKeyEvent_12
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_12) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_12");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_12) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_12");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_12, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_12::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Nine_K2Node_InputKeyEvent_13
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_13) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_13");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_13) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_13");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_13, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Nine_K2Node_InputKeyEvent_13::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Eight_K2Node_InputKeyEvent_14
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_14) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_14");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_14) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_14");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_14, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_14::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_Eight_K2Node_InputKeyEvent_15
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_15) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_15");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_15) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_15");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_15, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_Eight_K2Node_InputKeyEvent_15::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_MenuButton_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_MenuButton_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_MenuButton_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_MenuButton_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_MenuButton_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_MenuButton_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_MenuButton_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_MenuButton_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_PushToTalk_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_PushToTalk_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_PushToTalk_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.InpActEvt_O_K2Node_InputKeyEvent_16
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_InpActEvt_O_K2Node_InputKeyEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_InpActEvt_O_K2Node_InputKeyEvent_16) == 0x000008, "Wrong alignment on BP_PlayerController_C_InpActEvt_O_K2Node_InputKeyEvent_16");
static_assert(sizeof(BP_PlayerController_C_InpActEvt_O_K2Node_InputKeyEvent_16) == 0x000018, "Wrong size on BP_PlayerController_C_InpActEvt_O_K2Node_InputKeyEvent_16");
static_assert(offsetof(BP_PlayerController_C_InpActEvt_O_K2Node_InputKeyEvent_16, Key) == 0x000000, "Member 'BP_PlayerController_C_InpActEvt_O_K2Node_InputKeyEvent_16::Key' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.OnLoaded_0556572242FB261AF5947C9A16CF353A
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerController_C_OnLoaded_0556572242FB261AF5947C9A16CF353A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_OnLoaded_0556572242FB261AF5947C9A16CF353A) == 0x000008, "Wrong alignment on BP_PlayerController_C_OnLoaded_0556572242FB261AF5947C9A16CF353A");
static_assert(sizeof(BP_PlayerController_C_OnLoaded_0556572242FB261AF5947C9A16CF353A) == 0x000008, "Wrong size on BP_PlayerController_C_OnLoaded_0556572242FB261AF5947C9A16CF353A");
static_assert(offsetof(BP_PlayerController_C_OnLoaded_0556572242FB261AF5947C9A16CF353A, Loaded) == 0x000000, "Member 'BP_PlayerController_C_OnLoaded_0556572242FB261AF5947C9A16CF353A::Loaded' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.IsHUDVisible
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerController_C_IsHUDVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_IsHUDVisible) == 0x000001, "Wrong alignment on BP_PlayerController_C_IsHUDVisible");
static_assert(sizeof(BP_PlayerController_C_IsHUDVisible) == 0x000001, "Wrong size on BP_PlayerController_C_IsHUDVisible");
static_assert(offsetof(BP_PlayerController_C_IsHUDVisible, Visible) == 0x000000, "Member 'BP_PlayerController_C_IsHUDVisible::Visible' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.DestroyCharacter
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerController_C_DestroyCharacter final
{
public:
	class APawn*                                  CharacterPawn;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerController_C_DestroyCharacter) == 0x000008, "Wrong alignment on BP_PlayerController_C_DestroyCharacter");
static_assert(sizeof(BP_PlayerController_C_DestroyCharacter) == 0x000018, "Wrong size on BP_PlayerController_C_DestroyCharacter");
static_assert(offsetof(BP_PlayerController_C_DestroyCharacter, CharacterPawn) == 0x000000, "Member 'BP_PlayerController_C_DestroyCharacter::CharacterPawn' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DestroyCharacter, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_DestroyCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_DestroyCharacter, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_DestroyCharacter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.ShouldSkipEndscreen
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerController_C_ShouldSkipEndscreen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMissionSuccessful_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_ShouldSkipEndscreen) == 0x000008, "Wrong alignment on BP_PlayerController_C_ShouldSkipEndscreen");
static_assert(sizeof(BP_PlayerController_C_ShouldSkipEndscreen) == 0x000020, "Wrong size on BP_PlayerController_C_ShouldSkipEndscreen");
static_assert(offsetof(BP_PlayerController_C_ShouldSkipEndscreen, ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_ShouldSkipEndscreen::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ShouldSkipEndscreen, CallFunc_GetFSDGameState_ReturnValue) == 0x000008, "Member 'BP_PlayerController_C_ShouldSkipEndscreen::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ShouldSkipEndscreen, CallFunc_GetFSDGameState_ReturnValue_1) == 0x000010, "Member 'BP_PlayerController_C_ShouldSkipEndscreen::CallFunc_GetFSDGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ShouldSkipEndscreen, CallFunc_GetMissionSuccessful_ReturnValue) == 0x000018, "Member 'BP_PlayerController_C_ShouldSkipEndscreen::CallFunc_GetMissionSuccessful_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ShouldSkipEndscreen, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_PlayerController_C_ShouldSkipEndscreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ShouldSkipEndscreen, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00001A, "Member 'BP_PlayerController_C_ShouldSkipEndscreen::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_ShouldSkipEndscreen, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'BP_PlayerController_C_ShouldSkipEndscreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerController.BP_PlayerController_C.UpdateTutorialComplete
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerController_C_UpdateTutorialComplete final
{
public:
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue_1;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_370C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTutorialMission_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerController_C_UpdateTutorialComplete) == 0x000008, "Wrong alignment on BP_PlayerController_C_UpdateTutorialComplete");
static_assert(sizeof(BP_PlayerController_C_UpdateTutorialComplete) == 0x000028, "Wrong size on BP_PlayerController_C_UpdateTutorialComplete");
static_assert(offsetof(BP_PlayerController_C_UpdateTutorialComplete, CallFunc_GetFSDSaveGame_ReturnValue) == 0x000000, "Member 'BP_PlayerController_C_UpdateTutorialComplete::CallFunc_GetFSDSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_UpdateTutorialComplete, CallFunc_GetFSDSaveGame_ReturnValue_1) == 0x000008, "Member 'BP_PlayerController_C_UpdateTutorialComplete::CallFunc_GetFSDSaveGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_UpdateTutorialComplete, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_PlayerController_C_UpdateTutorialComplete::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_UpdateTutorialComplete, CallFunc_GetFSDGameState_ReturnValue) == 0x000018, "Member 'BP_PlayerController_C_UpdateTutorialComplete::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerController_C_UpdateTutorialComplete, CallFunc_IsTutorialMission_ReturnValue) == 0x000020, "Member 'BP_PlayerController_C_UpdateTutorialComplete::CallFunc_IsTutorialMission_ReturnValue' has a wrong offset!");

}

