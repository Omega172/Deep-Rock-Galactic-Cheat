#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_InputIcon

#include "Basic.hpp"

#include "UI_InputIcon_classes.hpp"
#include "UI_InputIcon_parameters.hpp"


namespace CG
{

// Function UI_InputIcon.UI_InputIcon_C.ExecuteUbergraph_UI_InputIcon
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputIcon_C::ExecuteUbergraph_UI_InputIcon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputIcon_C", "ExecuteUbergraph_UI_InputIcon");

	Params::UI_InputIcon_C_ExecuteUbergraph_UI_InputIcon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputIcon.UI_InputIcon_C.OnInputSourceChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFSDInputSource                         InputSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputIcon_C::OnInputSourceChanged(EFSDInputSource InputSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputIcon_C", "OnInputSourceChanged");

	Params::UI_InputIcon_C_OnInputSourceChanged Parms{};

	Parms.InputSource = InputSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputIcon.UI_InputIcon_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_InputIcon_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputIcon_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_InputIcon.UI_InputIcon_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_InputIcon_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputIcon_C", "PreConstruct");

	Params::UI_InputIcon_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputIcon.UI_InputIcon_C.GetCurrentMenuAction
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFSDInputSource                         OutSource                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName UUI_InputIcon_C::GetCurrentMenuAction(EFSDInputSource* OutSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputIcon_C", "GetCurrentMenuAction");

	Params::UI_InputIcon_C_GetCurrentMenuAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSource != nullptr)
		*OutSource = Parms.OutSource;

	return Parms.ReturnValue;
}


// Function UI_InputIcon.UI_InputIcon_C.SetSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStruct_InputIcon                InSettings                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputIcon_C::SetSettings(const struct FStruct_InputIcon& InSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputIcon_C", "SetSettings");

	Params::UI_InputIcon_C_SetSettings Parms{};

	Parms.InSettings = std::move(InSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_InputIcon.UI_InputIcon_C.Refresh
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_InputIcon_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputIcon_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_InputIcon.UI_InputIcon_C.GetIconSize
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UTexture2D*                       InTexture                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        OutSize                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputIcon_C::GetIconSize(class UTexture2D* InTexture, struct FVector2D* OutSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputIcon_C", "GetIconSize");

	Params::UI_InputIcon_C_GetIconSize Parms{};

	Parms.InTexture = InTexture;

	UObject::ProcessEvent(Func, &Parms);

	if (OutSize != nullptr)
		*OutSize = std::move(Parms.OutSize);
}


// Function UI_InputIcon.UI_InputIcon_C.GetBrushTint
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsTintable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FLinearColor                     OutputColor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_InputIcon_C::GetBrushTint(bool IsTintable, struct FLinearColor* OutputColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_InputIcon_C", "GetBrushTint");

	Params::UI_InputIcon_C_GetBrushTint Parms{};

	Parms.IsTintable = IsTintable;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputColor != nullptr)
		*OutputColor = std::move(Parms.OutputColor);
}

}

