#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PerkBackground

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass UI_PerkBackground.UI_PerkBackground_C
// 0x0060 (0x02C0 - 0x0260)
class UUI_PerkBackground_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BackgroundBorder_Image;                            // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BackgroundFill_Image;                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_MaskedCanvas_C*                     BackgroundMask_Canvas;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               BackgroundSize;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             IconContent;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Dimension;                                         // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EPerkUsageType                                PerkType;                                          // 0x0294(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2E24[0x3];                                     // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           FillColor;                                         // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BorderColor;                                       // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkTierState                                PerkState;                                         // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_PerkBackground(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetDimensions(float InDimensions);
	void SetColors(const struct FLinearColor& InFillColor, const struct FLinearColor& InBorderColor);
	void SetPerkType(EPerkUsageType InType, EPerkTierState InState);
	void FromPerk(class UPerkAsset* InPerk, EPerkTierState InState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_PerkBackground_C">();
	}
	static class UUI_PerkBackground_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_PerkBackground_C>();
	}
};
static_assert(alignof(UUI_PerkBackground_C) == 0x000008, "Wrong alignment on UUI_PerkBackground_C");
static_assert(sizeof(UUI_PerkBackground_C) == 0x0002C0, "Wrong size on UUI_PerkBackground_C");
static_assert(offsetof(UUI_PerkBackground_C, UberGraphFrame) == 0x000260, "Member 'UUI_PerkBackground_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, BackgroundBorder_Image) == 0x000268, "Member 'UUI_PerkBackground_C::BackgroundBorder_Image' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, BackgroundFill_Image) == 0x000270, "Member 'UUI_PerkBackground_C::BackgroundFill_Image' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, BackgroundMask_Canvas) == 0x000278, "Member 'UUI_PerkBackground_C::BackgroundMask_Canvas' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, BackgroundSize) == 0x000280, "Member 'UUI_PerkBackground_C::BackgroundSize' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, IconContent) == 0x000288, "Member 'UUI_PerkBackground_C::IconContent' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, Dimension) == 0x000290, "Member 'UUI_PerkBackground_C::Dimension' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, PerkType) == 0x000294, "Member 'UUI_PerkBackground_C::PerkType' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, FillColor) == 0x000298, "Member 'UUI_PerkBackground_C::FillColor' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, BorderColor) == 0x0002A8, "Member 'UUI_PerkBackground_C::BorderColor' has a wrong offset!");
static_assert(offsetof(UUI_PerkBackground_C, PerkState) == 0x0002B8, "Member 'UUI_PerkBackground_C::PerkState' has a wrong offset!");

}

