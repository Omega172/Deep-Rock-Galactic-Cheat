#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LIB_MenuColors

#include "Basic.hpp"

#include "MenuColorAndTint_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_WindowColors_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"


namespace CG::Params
{

// Function LIB_MenuColors.LIB_MenuColors_C.MenuColors
// 0x0258 (0x0258 - 0x0000)
struct LIB_MenuColors_C_MenuColors final
{
public:
	ENUM_MenuColors                               ColorSelector;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutputColor;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2C[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x0134(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_20;                           // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_21;                           // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_22;                           // 0x0184(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_23;                           // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_24;                           // 0x01A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_25;                           // 0x01B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_26;                           // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_27;                           // 0x01D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_28;                           // 0x01E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_29;                           // 0x01F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_30;                           // 0x0204(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_31;                           // 0x0214(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_32;                           // 0x0224(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_33;                           // 0x0234(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0244(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LIB_MenuColors_C_MenuColors) == 0x000008, "Wrong alignment on LIB_MenuColors_C_MenuColors");
static_assert(sizeof(LIB_MenuColors_C_MenuColors) == 0x000258, "Wrong size on LIB_MenuColors_C_MenuColors");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, ColorSelector) == 0x000000, "Member 'LIB_MenuColors_C_MenuColors::ColorSelector' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, __WorldContext) == 0x000008, "Member 'LIB_MenuColors_C_MenuColors::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, OutputColor) == 0x000010, "Member 'LIB_MenuColors_C_MenuColors::OutputColor' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_byte_Variable) == 0x000020, "Member 'LIB_MenuColors_C_MenuColors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable) == 0x000024, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_1) == 0x000034, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_2) == 0x000044, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_3) == 0x000054, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_4) == 0x000064, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_5) == 0x000074, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_6) == 0x000084, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_7) == 0x000094, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_8) == 0x0000A4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_9) == 0x0000B4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_10) == 0x0000C4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_11) == 0x0000D4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_12) == 0x0000E4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_13) == 0x0000F4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_14) == 0x000104, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_15) == 0x000114, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_16) == 0x000124, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_17) == 0x000134, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_18) == 0x000144, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_19) == 0x000154, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_20) == 0x000164, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_21) == 0x000174, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_22) == 0x000184, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_23) == 0x000194, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_24) == 0x0001A4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_24' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_25) == 0x0001B4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_25' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_26) == 0x0001C4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_26' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_27) == 0x0001D4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_27' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_28) == 0x0001E4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_28' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_29) == 0x0001F4, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_29' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_30) == 0x000204, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_30' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_31) == 0x000214, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_31' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_32) == 0x000224, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_32' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, Temp_struct_Variable_33) == 0x000234, "Member 'LIB_MenuColors_C_MenuColors::Temp_struct_Variable_33' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColors, K2Node_Select_Default) == 0x000244, "Member 'LIB_MenuColors_C_MenuColors::K2Node_Select_Default' has a wrong offset!");

// Function LIB_MenuColors.LIB_MenuColors_C.MenuColorsAndOpacity
// 0x0040 (0x0040 - 0x0000)
struct LIB_MenuColors_C_MenuColorsAndOpacity final
{
public:
	ENUM_MenuColors                               ColorSelector;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Opacity;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutputColor;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LIB_MenuColors_C_MenuColorsAndOpacity) == 0x000008, "Wrong alignment on LIB_MenuColors_C_MenuColorsAndOpacity");
static_assert(sizeof(LIB_MenuColors_C_MenuColorsAndOpacity) == 0x000040, "Wrong size on LIB_MenuColors_C_MenuColorsAndOpacity");
static_assert(offsetof(LIB_MenuColors_C_MenuColorsAndOpacity, ColorSelector) == 0x000000, "Member 'LIB_MenuColors_C_MenuColorsAndOpacity::ColorSelector' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColorsAndOpacity, Opacity) == 0x000004, "Member 'LIB_MenuColors_C_MenuColorsAndOpacity::Opacity' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColorsAndOpacity, __WorldContext) == 0x000008, "Member 'LIB_MenuColors_C_MenuColorsAndOpacity::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColorsAndOpacity, OutputColor) == 0x000010, "Member 'LIB_MenuColors_C_MenuColorsAndOpacity::OutputColor' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColorsAndOpacity, CallFunc_MenuColors_OutputColor) == 0x000020, "Member 'LIB_MenuColors_C_MenuColorsAndOpacity::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColorsAndOpacity, K2Node_MakeStruct_LinearColor) == 0x000030, "Member 'LIB_MenuColors_C_MenuColorsAndOpacity::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function LIB_MenuColors.LIB_MenuColors_C.SelectMenuColor
// 0x0038 (0x0038 - 0x0000)
struct LIB_MenuColors_C_SelectMenuColor final
{
public:
	ENUM_MenuColors                               FLASE;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               TURR;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2E[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutputColor;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2F[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LIB_MenuColors_C_SelectMenuColor) == 0x000008, "Wrong alignment on LIB_MenuColors_C_SelectMenuColor");
static_assert(sizeof(LIB_MenuColors_C_SelectMenuColor) == 0x000038, "Wrong size on LIB_MenuColors_C_SelectMenuColor");
static_assert(offsetof(LIB_MenuColors_C_SelectMenuColor, FLASE) == 0x000000, "Member 'LIB_MenuColors_C_SelectMenuColor::FLASE' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectMenuColor, TURR) == 0x000001, "Member 'LIB_MenuColors_C_SelectMenuColor::TURR' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectMenuColor, Condition) == 0x000002, "Member 'LIB_MenuColors_C_SelectMenuColor::Condition' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectMenuColor, __WorldContext) == 0x000008, "Member 'LIB_MenuColors_C_SelectMenuColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectMenuColor, OutputColor) == 0x000010, "Member 'LIB_MenuColors_C_SelectMenuColor::OutputColor' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectMenuColor, Temp_bool_Variable) == 0x000020, "Member 'LIB_MenuColors_C_SelectMenuColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectMenuColor, K2Node_Select_Default) == 0x000021, "Member 'LIB_MenuColors_C_SelectMenuColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectMenuColor, CallFunc_MenuColors_OutputColor) == 0x000024, "Member 'LIB_MenuColors_C_SelectMenuColor::CallFunc_MenuColors_OutputColor' has a wrong offset!");

// Function LIB_MenuColors.LIB_MenuColors_C.SetTextColor
// 0x0050 (0x0050 - 0x0000)
struct LIB_MenuColors_C_SetTextColor final
{
public:
	class UTextBlock*                             Text;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Color;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C30[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
};
static_assert(alignof(LIB_MenuColors_C_SetTextColor) == 0x000008, "Wrong alignment on LIB_MenuColors_C_SetTextColor");
static_assert(sizeof(LIB_MenuColors_C_SetTextColor) == 0x000050, "Wrong size on LIB_MenuColors_C_SetTextColor");
static_assert(offsetof(LIB_MenuColors_C_SetTextColor, Text) == 0x000000, "Member 'LIB_MenuColors_C_SetTextColor::Text' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SetTextColor, Color) == 0x000008, "Member 'LIB_MenuColors_C_SetTextColor::Color' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SetTextColor, __WorldContext) == 0x000010, "Member 'LIB_MenuColors_C_SetTextColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SetTextColor, CallFunc_MenuColors_OutputColor) == 0x000018, "Member 'LIB_MenuColors_C_SetTextColor::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SetTextColor, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'LIB_MenuColors_C_SetTextColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function LIB_MenuColors.LIB_MenuColors_C.SelectTextColor
// 0x0058 (0x0058 - 0x0000)
struct LIB_MenuColors_C_SelectTextColor final
{
public:
	class UTextBlock*                             Text;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               FLASE;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               TURR;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C31[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C32[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C33[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
};
static_assert(alignof(LIB_MenuColors_C_SelectTextColor) == 0x000008, "Wrong alignment on LIB_MenuColors_C_SelectTextColor");
static_assert(sizeof(LIB_MenuColors_C_SelectTextColor) == 0x000058, "Wrong size on LIB_MenuColors_C_SelectTextColor");
static_assert(offsetof(LIB_MenuColors_C_SelectTextColor, Text) == 0x000000, "Member 'LIB_MenuColors_C_SelectTextColor::Text' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectTextColor, FLASE) == 0x000008, "Member 'LIB_MenuColors_C_SelectTextColor::FLASE' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectTextColor, TURR) == 0x000009, "Member 'LIB_MenuColors_C_SelectTextColor::TURR' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectTextColor, Condition) == 0x00000A, "Member 'LIB_MenuColors_C_SelectTextColor::Condition' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectTextColor, __WorldContext) == 0x000010, "Member 'LIB_MenuColors_C_SelectTextColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectTextColor, Temp_bool_Variable) == 0x000018, "Member 'LIB_MenuColors_C_SelectTextColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectTextColor, K2Node_Select_Default) == 0x000019, "Member 'LIB_MenuColors_C_SelectTextColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectTextColor, CallFunc_MenuColors_OutputColor) == 0x00001C, "Member 'LIB_MenuColors_C_SelectTextColor::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_SelectTextColor, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'LIB_MenuColors_C_SelectTextColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function LIB_MenuColors.LIB_MenuColors_C.WindowColors
// 0x0118 (0x0118 - 0x0000)
struct LIB_MenuColors_C_WindowColors final
{
public:
	ENUM_WindowColors                             InColor;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C34[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color1;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color2;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_WindowColors                             Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C35[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_WindowColors                             Temp_byte_Variable_1;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C36[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LIB_MenuColors_C_WindowColors) == 0x000008, "Wrong alignment on LIB_MenuColors_C_WindowColors");
static_assert(sizeof(LIB_MenuColors_C_WindowColors) == 0x000118, "Wrong size on LIB_MenuColors_C_WindowColors");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, InColor) == 0x000000, "Member 'LIB_MenuColors_C_WindowColors::InColor' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, __WorldContext) == 0x000008, "Member 'LIB_MenuColors_C_WindowColors::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Color1) == 0x000010, "Member 'LIB_MenuColors_C_WindowColors::Color1' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Color2) == 0x000020, "Member 'LIB_MenuColors_C_WindowColors::Color2' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_byte_Variable) == 0x000030, "Member 'LIB_MenuColors_C_WindowColors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable) == 0x000034, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_1) == 0x000044, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_2) == 0x000054, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_3) == 0x000064, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_4) == 0x000074, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_5) == 0x000084, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_byte_Variable_1) == 0x000094, "Member 'LIB_MenuColors_C_WindowColors::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_6) == 0x000098, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_7) == 0x0000A8, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_8) == 0x0000B8, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_9) == 0x0000C8, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_10) == 0x0000D8, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, Temp_struct_Variable_11) == 0x0000E8, "Member 'LIB_MenuColors_C_WindowColors::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, K2Node_Select_Default) == 0x0000F8, "Member 'LIB_MenuColors_C_WindowColors::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_WindowColors, K2Node_Select_Default_1) == 0x000108, "Member 'LIB_MenuColors_C_WindowColors::K2Node_Select_Default_1' has a wrong offset!");

// Function LIB_MenuColors.LIB_MenuColors_C.MenuColorAndTint
// 0x0050 (0x0050 - 0x0000)
struct LIB_MenuColors_C_MenuColorAndTint final
{
public:
	struct FMenuColorAndTint                      InValue;                                           // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C37[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutResult;                                         // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LIB_MenuColors_C_MenuColorAndTint) == 0x000008, "Wrong alignment on LIB_MenuColors_C_MenuColorAndTint");
static_assert(sizeof(LIB_MenuColors_C_MenuColorAndTint) == 0x000050, "Wrong size on LIB_MenuColors_C_MenuColorAndTint");
static_assert(offsetof(LIB_MenuColors_C_MenuColorAndTint, InValue) == 0x000000, "Member 'LIB_MenuColors_C_MenuColorAndTint::InValue' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColorAndTint, __WorldContext) == 0x000018, "Member 'LIB_MenuColors_C_MenuColorAndTint::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColorAndTint, OutResult) == 0x000020, "Member 'LIB_MenuColors_C_MenuColorAndTint::OutResult' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColorAndTint, CallFunc_MenuColors_OutputColor) == 0x000030, "Member 'LIB_MenuColors_C_MenuColorAndTint::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(LIB_MenuColors_C_MenuColorAndTint, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000040, "Member 'LIB_MenuColors_C_MenuColorAndTint::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");

}

