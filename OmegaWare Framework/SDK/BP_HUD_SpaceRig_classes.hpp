#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_SpaceRig

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"
#include "UMG_structs.hpp"


namespace CG
{

// BlueprintGeneratedClass BP_HUD_SpaceRig.BP_HUD_SpaceRig_C
// 0x0058 (0x03A8 - 0x0350)
class ABP_HUD_SpaceRig_C final : public ASpaceRigHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHUD_SpaceRig_C*                        HUD;                                               // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    OwnedWidgets;                                      // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FClaimableRewardEntry>          PendingPromotionRewards;                           // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          PendingFirstPromotion;                             // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_303F[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDLCSettings*                       DLCSettings;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWindowWidget*                          CheatMenu;                                         // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HUD_SpaceRig(int32 EntryPoint);
	void OnLastWindowClosed();
	void WaitAndTryNextNotification(float WaitDuration);
	void Handle_Event_Popup(class UFSDEvent* InEvent);
	void Handle_Event_Rewards(class UFSDEvent* InEvent);
	void Setup_Vanity_Mastery_Notification();
	void SetupModWarnings_();
	void Shouting_Done();
	void Setup_Cheat_Menu();
	void CheatMenuRequest();
	void Setup_Notification_Queue();
	void ReceiveNotificationAdded();
	void ReceiveNotificationQueueActivated();
	void Setup_Game_DLC_Announcements();
	void Stop_Check_For_Tutorial_Prompt();
	void CheckForTutorialPrompt();
	void SetupTutorialMessage();
	void OnFSDEventActiveChanged(const class UFSDEvent* InFsdEvent, bool InIsActive);
	void Setup_FSD_Events();
	void Setup_Pending_Rewards();
	void Setup_First_Infused_Core();
	void Setup_Promotion_Rewards();
	void Setup_UI_Notifications();
	void Setup_Spacerig_Notifications();
	void OnEligibleForRetirementAssignment(class UBP_GameInstance_C* GameInstance);
	void Setup_Retirement_Shouts();
	void OnCampaignNotification_Event(class UCampaignNotification* Notification);
	void Setup_Campaign_Notifications();
	void Handle_Count_Down();
	void Update_Visibility();
	void OnCountdownCompleted();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void OnVisibilityChanged();
	void PlayerSpawned(class APlayerCharacter* Player);
	void EnqueueWindow(TSoftClassPtr<class UClass> WidgetClass);
	void FetchPromotionRewards(bool* OutSuccess);
	void TryShowNextNotification();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_SpaceRig_C">();
	}
	static class ABP_HUD_SpaceRig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HUD_SpaceRig_C>();
	}
};
static_assert(alignof(ABP_HUD_SpaceRig_C) == 0x000008, "Wrong alignment on ABP_HUD_SpaceRig_C");
static_assert(sizeof(ABP_HUD_SpaceRig_C) == 0x0003A8, "Wrong size on ABP_HUD_SpaceRig_C");
static_assert(offsetof(ABP_HUD_SpaceRig_C, UberGraphFrame) == 0x000350, "Member 'ABP_HUD_SpaceRig_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HUD_SpaceRig_C, DefaultSceneRoot) == 0x000358, "Member 'ABP_HUD_SpaceRig_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_HUD_SpaceRig_C, PlayerCharacter) == 0x000360, "Member 'ABP_HUD_SpaceRig_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(ABP_HUD_SpaceRig_C, HUD) == 0x000368, "Member 'ABP_HUD_SpaceRig_C::HUD' has a wrong offset!");
static_assert(offsetof(ABP_HUD_SpaceRig_C, OwnedWidgets) == 0x000370, "Member 'ABP_HUD_SpaceRig_C::OwnedWidgets' has a wrong offset!");
static_assert(offsetof(ABP_HUD_SpaceRig_C, PendingPromotionRewards) == 0x000380, "Member 'ABP_HUD_SpaceRig_C::PendingPromotionRewards' has a wrong offset!");
static_assert(offsetof(ABP_HUD_SpaceRig_C, PendingFirstPromotion) == 0x000390, "Member 'ABP_HUD_SpaceRig_C::PendingFirstPromotion' has a wrong offset!");
static_assert(offsetof(ABP_HUD_SpaceRig_C, DLCSettings) == 0x000398, "Member 'ABP_HUD_SpaceRig_C::DLCSettings' has a wrong offset!");
static_assert(offsetof(ABP_HUD_SpaceRig_C, CheatMenu) == 0x0003A0, "Member 'ABP_HUD_SpaceRig_C::CheatMenu' has a wrong offset!");

}

