#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Loadout_PerksEquip

#include "Basic.hpp"

#include "ITM_Loadout_PerksEquip_classes.hpp"
#include "ITM_Loadout_PerksEquip_parameters.hpp"


namespace CG
{

// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.ExecuteUbergraph_ITM_Loadout_PerksEquip
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Loadout_PerksEquip_C::ExecuteUbergraph_ITM_Loadout_PerksEquip(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "ExecuteUbergraph_ITM_Loadout_PerksEquip");

	Params::ITM_Loadout_PerksEquip_C_ExecuteUbergraph_ITM_Loadout_PerksEquip Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_Loadout_PerksEquip_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "PreConstruct");

	Params::ITM_Loadout_PerksEquip_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UITM_Loadout_PerksEquip_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.BndEvt__ITM_Loadout_PerksEquip_Selection_K2Node_ComponentBoundEvent_4_OnPerkClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPerkAsset*                       PerkAsset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Loadout_PerksEquip_C::BndEvt__ITM_Loadout_PerksEquip_Selection_K2Node_ComponentBoundEvent_4_OnPerkClicked__DelegateSignature(class UPerkAsset* PerkAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "BndEvt__ITM_Loadout_PerksEquip_Selection_K2Node_ComponentBoundEvent_4_OnPerkClicked__DelegateSignature");

	Params::ITM_Loadout_PerksEquip_C_BndEvt__ITM_Loadout_PerksEquip_Selection_K2Node_ComponentBoundEvent_4_OnPerkClicked__DelegateSignature Parms{};

	Parms.PerkAsset = PerkAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.Set Character Class
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayerCharacterID*               CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Loadout_PerksEquip_C::Set_Character_Class(class UPlayerCharacterID* CharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "Set Character Class");

	Params::ITM_Loadout_PerksEquip_C_Set_Character_Class Parms{};

	Parms.CharacterID = CharacterID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.UpdateEquippedPerks
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UITM_Loadout_PerksEquip_C::UpdateEquippedPerks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "UpdateEquippedPerks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.GetEquippedPerkAt
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UPerkAsset*>               TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UPerkAsset*                       Perk                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Loadout_PerksEquip_C::GetEquippedPerkAt(int32 Param_Index, const TArray<class UPerkAsset*>& TargetArray, class UPerkAsset** Perk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "GetEquippedPerkAt");

	Params::ITM_Loadout_PerksEquip_C_GetEquippedPerkAt Parms{};

	Parms.Param_Index = Param_Index;
	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);

	if (Perk != nullptr)
		*Perk = Parms.Perk;
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.Get_PerkStar_ToolTipWidget_0
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UITM_Loadout_PerksEquip_C::Get_PerkStar_ToolTipWidget_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "Get_PerkStar_ToolTipWidget_0");

	Params::ITM_Loadout_PerksEquip_C_Get_PerkStar_ToolTipWidget_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.UpdateSlots
// (Private, BlueprintCallable, BlueprintEvent)

void UITM_Loadout_PerksEquip_C::UpdateSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "UpdateSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.CreateSlots
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVerticalBox*                     InSlotsBox                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPlayerCharacterID*               InCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPerkUsageType                          InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Loadout_PerksEquip_C::CreateSlots(class UVerticalBox* InSlotsBox, class UPlayerCharacterID* InCharacter, EPerkUsageType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "CreateSlots");

	Params::ITM_Loadout_PerksEquip_C_CreateSlots Parms{};

	Parms.InSlotsBox = InSlotsBox;
	Parms.InCharacter = InCharacter;
	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.SelectSlot
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITM_LoadOut_PerksEquip_Slot_C*   InSlot                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_Loadout_PerksEquip_C::SelectSlot(class UITM_LoadOut_PerksEquip_Slot_C* InSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "SelectSlot");

	Params::ITM_Loadout_PerksEquip_C_SelectSlot Parms{};

	Parms.InSlot = InSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_Loadout_PerksEquip.ITM_Loadout_PerksEquip_C.GetEquippedPerksByType
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayerCharacterID*               InCharacterClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPerkUsageType                          InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UPerkAsset*>               OutPerks                                               (Parm, OutParm)

void UITM_Loadout_PerksEquip_C::GetEquippedPerksByType(class UPlayerCharacterID* InCharacterClass, EPerkUsageType InType, TArray<class UPerkAsset*>* OutPerks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_Loadout_PerksEquip_C", "GetEquippedPerksByType");

	Params::ITM_Loadout_PerksEquip_C_GetEquippedPerksByType Parms{};

	Parms.InCharacterClass = InCharacterClass;
	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);

	if (OutPerks != nullptr)
		*OutPerks = std::move(Parms.OutPerks);
}

}

