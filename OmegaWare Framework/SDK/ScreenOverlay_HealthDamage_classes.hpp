#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScreenOverlay_HealthDamage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C
// 0x0050 (0x02B0 - 0x0260)
class UScreenOverlay_HealthDamage_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 HealthImage;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SplatImage;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         FadeDuration;                                      // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SolidDuration;                                     // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       Player;                                            // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StartColor;                                        // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerHealthComponent*                 HealthComponent;                                   // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ScreenOverlay_HealthDamage(int32 EntryPoint);
	void OnUpdateHealthImage(float Health);
	void UpdateBloodColor(bool NewValue);
	void OnCameraModeChanged(ECharacterCameraMode NewCameraMode, ECharacterCameraMode OldCameraMode);
	void Construct();
	void End_Splat();
	void OnCharacterStateChanged(ECharacterState NewState);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnDamageTaken_Event(float Amount);
	void Begin_Splat(float Duration, const struct FLinearColor& Param_Color);
	void CheckForLowHealth(float StartAnimTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ScreenOverlay_HealthDamage_C">();
	}
	static class UScreenOverlay_HealthDamage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScreenOverlay_HealthDamage_C>();
	}
};
static_assert(alignof(UScreenOverlay_HealthDamage_C) == 0x000008, "Wrong alignment on UScreenOverlay_HealthDamage_C");
static_assert(sizeof(UScreenOverlay_HealthDamage_C) == 0x0002B0, "Wrong size on UScreenOverlay_HealthDamage_C");
static_assert(offsetof(UScreenOverlay_HealthDamage_C, UberGraphFrame) == 0x000260, "Member 'UScreenOverlay_HealthDamage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_HealthDamage_C, HealthImage) == 0x000268, "Member 'UScreenOverlay_HealthDamage_C::HealthImage' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_HealthDamage_C, SplatImage) == 0x000270, "Member 'UScreenOverlay_HealthDamage_C::SplatImage' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_HealthDamage_C, FadeDuration) == 0x000278, "Member 'UScreenOverlay_HealthDamage_C::FadeDuration' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_HealthDamage_C, SolidDuration) == 0x00027C, "Member 'UScreenOverlay_HealthDamage_C::SolidDuration' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_HealthDamage_C, Player) == 0x000280, "Member 'UScreenOverlay_HealthDamage_C::Player' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_HealthDamage_C, Color) == 0x000288, "Member 'UScreenOverlay_HealthDamage_C::Color' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_HealthDamage_C, StartColor) == 0x000298, "Member 'UScreenOverlay_HealthDamage_C::StartColor' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_HealthDamage_C, HealthComponent) == 0x0002A8, "Member 'UScreenOverlay_HealthDamage_C::HealthComponent' has a wrong offset!");

}

