#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"
#include "UMG_structs.hpp"


namespace CG
{

// BlueprintGeneratedClass BP_HUD.BP_HUD_C
// 0x0140 (0x0478 - 0x0338)
class ABP_HUD_C final : public AFSDHUD
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        Widgets;                                           // 0x0348(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class APlayerController*                      PlayerController;                                  // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HudInitialized;                                    // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanAddToViewport;                                  // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3726[0x6];                                     // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDMainHUDWidget*                      HudWidget;                                         // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class URadarPointComponent*>           RadarPointsInQueue;                                // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWindowWidget*                          EscMenu;                                           // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWindowWidget*                          CheatMenu;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScreenOverlay_Afflictions_C*           AfflictionWidget;                                  // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_Invitation_C*                       InviteRequest;                                     // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWindowWidget*                          QuickCheatMenu;                                    // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   HUD_Class;                                         // 0x03B0(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Escape_Menu_Class;                                 // 0x03D8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Cheat_Menu_Class;                                  // 0x0400(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Quick_Cheat_Menu_Class;                            // 0x0428(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Affliction_Class;                                  // 0x0450(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HUD(int32 EntryPoint);
	void CheatMenuRequest();
	void QuickCheatMenuRequest();
	void On_HUD_Initialized();
	void MenuLoaded();
	void LoadEscapeMenu();
	void OnShowMainMenu();
	void OnEndLevelReceived_Event();
	void CameraDroneSpawned(class APlayerCameraDrone* Drone);
	void ReceiveDestroyed();
	void OnVisibilityChanged();
	void HandleSeamlessTravel();
	void RadarPointAdded(class URadarPointComponent* RadarPoint);
	void PlayerSpawned(class APlayerCharacter* Player);
	void Add_Widget_Class(class UClass* Param_Class, class UWidget** Widget);
	void AddAllWidgetToViewport();
	void RemoveAllWidgetsFromParents();
	void CreateCheatsIfNotCreated();
	void PushEvent(class UWidget* EventWidget, bool Left);
	void CreateQuickCheatsIfNotCreated();
	void IsInitialized(bool* Out);
	void CreateEscMenu();
	void PopEvent(class UWidget* EventWidget, bool Left);
	void GetEscapeMenu(class UWindowWidget** Param_EscMenu);
	void GetHUDWidget(class UFSDMainHUDWidget** Param_HudWidget);
	void GetCheatMenu(class UWindowWidget** Param_CheatMenu);
	void GetQuickCheatMenu(class UWindowWidget** Param_QuickCheatMenu);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HUD_C">();
	}
	static class ABP_HUD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HUD_C>();
	}
};
static_assert(alignof(ABP_HUD_C) == 0x000008, "Wrong alignment on ABP_HUD_C");
static_assert(sizeof(ABP_HUD_C) == 0x000478, "Wrong size on ABP_HUD_C");
static_assert(offsetof(ABP_HUD_C, UberGraphFrame) == 0x000338, "Member 'ABP_HUD_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, DefaultSceneRoot) == 0x000340, "Member 'ABP_HUD_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, Widgets) == 0x000348, "Member 'ABP_HUD_C::Widgets' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, PlayerController) == 0x000358, "Member 'ABP_HUD_C::PlayerController' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, HudInitialized) == 0x000360, "Member 'ABP_HUD_C::HudInitialized' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, CanAddToViewport) == 0x000361, "Member 'ABP_HUD_C::CanAddToViewport' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, HudWidget) == 0x000368, "Member 'ABP_HUD_C::HudWidget' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, RadarPointsInQueue) == 0x000370, "Member 'ABP_HUD_C::RadarPointsInQueue' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, PlayerCharacter) == 0x000380, "Member 'ABP_HUD_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, EscMenu) == 0x000388, "Member 'ABP_HUD_C::EscMenu' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, CheatMenu) == 0x000390, "Member 'ABP_HUD_C::CheatMenu' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, AfflictionWidget) == 0x000398, "Member 'ABP_HUD_C::AfflictionWidget' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, InviteRequest) == 0x0003A0, "Member 'ABP_HUD_C::InviteRequest' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, QuickCheatMenu) == 0x0003A8, "Member 'ABP_HUD_C::QuickCheatMenu' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, HUD_Class) == 0x0003B0, "Member 'ABP_HUD_C::HUD_Class' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, Escape_Menu_Class) == 0x0003D8, "Member 'ABP_HUD_C::Escape_Menu_Class' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, Cheat_Menu_Class) == 0x000400, "Member 'ABP_HUD_C::Cheat_Menu_Class' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, Quick_Cheat_Menu_Class) == 0x000428, "Member 'ABP_HUD_C::Quick_Cheat_Menu_Class' has a wrong offset!");
static_assert(offsetof(ABP_HUD_C, Affliction_Class) == 0x000450, "Member 'ABP_HUD_C::Affliction_Class' has a wrong offset!");

}

