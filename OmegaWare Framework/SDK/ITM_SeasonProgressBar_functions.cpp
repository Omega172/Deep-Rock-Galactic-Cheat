#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_SeasonProgressBar

#include "Basic.hpp"

#include "ITM_SeasonProgressBar_classes.hpp"
#include "ITM_SeasonProgressBar_parameters.hpp"


namespace CG
{

// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.XPCountFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UITM_SeasonProgressBar_C::XPCountFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "XPCountFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.LevelReached__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_SeasonProgressBar_C::LevelReached__DelegateSignature(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "LevelReached__DelegateSignature");

	Params::ITM_SeasonProgressBar_C_LevelReached__DelegateSignature Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.ExecuteUbergraph_ITM_SeasonProgressBar
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_SeasonProgressBar_C::ExecuteUbergraph_ITM_SeasonProgressBar(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "ExecuteUbergraph_ITM_SeasonProgressBar");

	Params::ITM_SeasonProgressBar_C_ExecuteUbergraph_ITM_SeasonProgressBar Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITM_SeasonProgressBar_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "PreConstruct");

	Params::ITM_SeasonProgressBar_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.ContinueCount
// (BlueprintCallable, BlueprintEvent)

void UITM_SeasonProgressBar_C::ContinueCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "ContinueCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.UpdateXPText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrXP                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_SeasonProgressBar_C::UpdateXPText(int32 CurrXP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "UpdateXPText");

	Params::ITM_SeasonProgressBar_C_UpdateXPText Parms{};

	Parms.CurrXP = CurrXP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.UpdateTextFromXP
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   XP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_SeasonProgressBar_C::UpdateTextFromXP(int32 XP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "UpdateTextFromXP");

	Params::ITM_SeasonProgressBar_C_UpdateTextFromXP Parms{};

	Parms.XP = XP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.UpdateText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Percent                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_SeasonProgressBar_C::UpdateText(int32 CurrentLevel, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "UpdateText");

	Params::ITM_SeasonProgressBar_C_UpdateText Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.AnimateXP
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FromLevel                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToLevel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FromPercent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ToPercent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FromXP                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ToXP                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_SeasonProgressBar_C::AnimateXP(int32 FromLevel, int32 ToLevel, float FromPercent, float ToPercent, int32 FromXP, int32 ToXP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "AnimateXP");

	Params::ITM_SeasonProgressBar_C_AnimateXP Parms{};

	Parms.FromLevel = FromLevel;
	Parms.ToLevel = ToLevel;
	Parms.FromPercent = FromPercent;
	Parms.ToPercent = ToPercent;
	Parms.FromXP = FromXP;
	Parms.ToXP = ToXP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_SeasonProgressBar.ITM_SeasonProgressBar_C.AnimateCount
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SeasonXP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AddedXP                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSeasonEvent>             SeasonEvents                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UITM_SeasonProgressBar_C::AnimateCount(int32 SeasonXP, int32 AddedXP, const TArray<struct FSeasonEvent>& SeasonEvents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_SeasonProgressBar_C", "AnimateCount");

	Params::ITM_SeasonProgressBar_C_AnimateCount Parms{};

	Parms.SeasonXP = SeasonXP;
	Parms.AddedXP = AddedXP;
	Parms.SeasonEvents = std::move(SeasonEvents);

	UObject::ProcessEvent(Func, &Parms);
}

}

