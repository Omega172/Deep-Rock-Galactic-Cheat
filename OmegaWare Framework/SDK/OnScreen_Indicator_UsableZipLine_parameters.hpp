#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnScreen_Indicator_UsableZipLine

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"


namespace CG::Params
{

// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.ExecuteUbergraph_OnScreen_Indicator_UsableZipLine
// 0x00F8 (0x00F8 - 0x0000)
struct OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3426[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFSDInputSource InputSource)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDTargetPlatform                            Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3427[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UZipLineStateComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3428[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x007C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterState                               K2Node_CustomEvent_newState;                       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3429[0x1];                                     // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECharacterState NewState)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342A[0x1];                                     // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDInputSource                               CallFunc_GetInputSource_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDInputSource                               K2Node_CustomEvent_InputSource;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_342B[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine) == 0x000008, "Wrong alignment on OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine");
static_assert(sizeof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine) == 0x0000F8, "Wrong size on OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, EntryPoint) == 0x000000, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::EntryPoint' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_FSDTargetPlatform_ReturnValue) == 0x000004, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_FSDTargetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, Temp_bool_Variable) == 0x000005, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, Temp_int_Variable) == 0x000018, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, Temp_int_Variable_1) == 0x00001C, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, Temp_byte_Variable) == 0x000020, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, Temp_object_Variable) == 0x000028, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, Temp_object_Variable_1) == 0x000030, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, Temp_object_Variable_2) == 0x000038, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, Temp_object_Variable_3) == 0x000040, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, Temp_object_Variable_4) == 0x000048, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000050, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_Select_Default) == 0x000058, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_Event_IsDesignTime) == 0x000068, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_MenuColors_OutputColor) == 0x00006C, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_Event_MyGeometry) == 0x00007C, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_Event_InDeltaTime) == 0x0000B4, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_GetOwningPlayerPawn_ReturnValue_1) == 0x0000B8, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_GetOwningPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_DynamicCast_AsPlayer_Character) == 0x0000C0, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_CustomEvent_newState) == 0x0000C9, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_CustomEvent_newState' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000CC, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_SelectVisibility_IsVisible) == 0x0000DC, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_SelectVisibility_VisibilityChanged) == 0x0000DD, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_SelectVisibility_New_Visibility) == 0x0000DE, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x0000E0, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_MakeVector2D_ReturnValue) == 0x0000E8, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_GetInputSource_ReturnValue) == 0x0000F0, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_GetInputSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_CustomEvent_InputSource) == 0x0000F1, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_CustomEvent_InputSource' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F2, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine, K2Node_Select_Default_1) == 0x0000F4, "Member 'OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine::K2Node_Select_Default_1' has a wrong offset!");

// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.OnInputSourceChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct OnScreen_Indicator_UsableZipLine_C_OnInputSourceChanged_Event final
{
public:
	EFSDInputSource                               InputSource;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OnScreen_Indicator_UsableZipLine_C_OnInputSourceChanged_Event) == 0x000001, "Wrong alignment on OnScreen_Indicator_UsableZipLine_C_OnInputSourceChanged_Event");
static_assert(sizeof(OnScreen_Indicator_UsableZipLine_C_OnInputSourceChanged_Event) == 0x000001, "Wrong size on OnScreen_Indicator_UsableZipLine_C_OnInputSourceChanged_Event");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_OnInputSourceChanged_Event, InputSource) == 0x000000, "Member 'OnScreen_Indicator_UsableZipLine_C_OnInputSourceChanged_Event::InputSource' has a wrong offset!");

// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.OnCharacterStateChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct OnScreen_Indicator_UsableZipLine_C_OnCharacterStateChanged_Event final
{
public:
	ECharacterState                               NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OnScreen_Indicator_UsableZipLine_C_OnCharacterStateChanged_Event) == 0x000001, "Wrong alignment on OnScreen_Indicator_UsableZipLine_C_OnCharacterStateChanged_Event");
static_assert(sizeof(OnScreen_Indicator_UsableZipLine_C_OnCharacterStateChanged_Event) == 0x000001, "Wrong size on OnScreen_Indicator_UsableZipLine_C_OnCharacterStateChanged_Event");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_OnCharacterStateChanged_Event, NewState) == 0x000000, "Member 'OnScreen_Indicator_UsableZipLine_C_OnCharacterStateChanged_Event::NewState' has a wrong offset!");

// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.Tick
// 0x003C (0x003C - 0x0000)
struct OnScreen_Indicator_UsableZipLine_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OnScreen_Indicator_UsableZipLine_C_Tick) == 0x000004, "Wrong alignment on OnScreen_Indicator_UsableZipLine_C_Tick");
static_assert(sizeof(OnScreen_Indicator_UsableZipLine_C_Tick) == 0x00003C, "Wrong size on OnScreen_Indicator_UsableZipLine_C_Tick");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Tick, MyGeometry) == 0x000000, "Member 'OnScreen_Indicator_UsableZipLine_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Tick, InDeltaTime) == 0x000038, "Member 'OnScreen_Indicator_UsableZipLine_C_Tick::InDeltaTime' has a wrong offset!");

// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct OnScreen_Indicator_UsableZipLine_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OnScreen_Indicator_UsableZipLine_C_PreConstruct) == 0x000001, "Wrong alignment on OnScreen_Indicator_UsableZipLine_C_PreConstruct");
static_assert(sizeof(OnScreen_Indicator_UsableZipLine_C_PreConstruct) == 0x000001, "Wrong size on OnScreen_Indicator_UsableZipLine_C_PreConstruct");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'OnScreen_Indicator_UsableZipLine_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.Refresh
// 0x0034 (0x0034 - 0x0000)
struct OnScreen_Indicator_UsableZipLine_C_Refresh final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSpeedBoostActivated_ReturnValue;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectMenuColor_OutputColor;              // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectMenuColor_OutputColor_1;            // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OnScreen_Indicator_UsableZipLine_C_Refresh) == 0x000004, "Wrong alignment on OnScreen_Indicator_UsableZipLine_C_Refresh");
static_assert(sizeof(OnScreen_Indicator_UsableZipLine_C_Refresh) == 0x000034, "Wrong size on OnScreen_Indicator_UsableZipLine_C_Refresh");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, Temp_byte_Variable) == 0x000000, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, Temp_byte_Variable_1) == 0x000001, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_GetSpeedBoostActivated_ReturnValue) == 0x000002, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_GetSpeedBoostActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_SelectVisibility_IsVisible) == 0x000004, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_SelectVisibility_VisibilityChanged) == 0x000005, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_SelectVisibility_New_Visibility) == 0x000006, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, Temp_bool_Variable) == 0x000007, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, K2Node_Select_Default) == 0x000008, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_SelectMenuColor_OutputColor) == 0x00000C, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_SelectMenuColor_OutputColor' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_SelectMenuColor_OutputColor_1) == 0x00001C, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_SelectMenuColor_OutputColor_1' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002C, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00002D, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_SelectVisibility_IsVisible_1) == 0x00002F, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x000030, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(OnScreen_Indicator_UsableZipLine_C_Refresh, CallFunc_SelectVisibility_New_Visibility_1) == 0x000031, "Member 'OnScreen_Indicator_UsableZipLine_C_Refresh::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");

}

