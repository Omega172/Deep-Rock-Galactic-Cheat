#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FSDEngine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function FSDEngine.CSGBuilderBase.PreGenerate
// 0x0008 (0x0008 - 0x0000)
struct CSGBuilderBase_PreGenerate final
{
public:
	class UBakeConfig*                            builder;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CSGBuilderBase_PreGenerate) == 0x000008, "Wrong alignment on CSGBuilderBase_PreGenerate");
static_assert(sizeof(CSGBuilderBase_PreGenerate) == 0x000008, "Wrong size on CSGBuilderBase_PreGenerate");
static_assert(offsetof(CSGBuilderBase_PreGenerate, builder) == 0x000000, "Member 'CSGBuilderBase_PreGenerate::builder' has a wrong offset!");

// Function FSDEngine.BakeConfig.GetBoolSetting
// 0x000C (0x000C - 0x0000)
struct BakeConfig_GetBoolSetting final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          DefaultVal;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27D7[0x2];                                     // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BakeConfig_GetBoolSetting) == 0x000004, "Wrong alignment on BakeConfig_GetBoolSetting");
static_assert(sizeof(BakeConfig_GetBoolSetting) == 0x00000C, "Wrong size on BakeConfig_GetBoolSetting");
static_assert(offsetof(BakeConfig_GetBoolSetting, Param_Name) == 0x000000, "Member 'BakeConfig_GetBoolSetting::Param_Name' has a wrong offset!");
static_assert(offsetof(BakeConfig_GetBoolSetting, DefaultVal) == 0x000008, "Member 'BakeConfig_GetBoolSetting::DefaultVal' has a wrong offset!");
static_assert(offsetof(BakeConfig_GetBoolSetting, ReturnValue) == 0x000009, "Member 'BakeConfig_GetBoolSetting::ReturnValue' has a wrong offset!");

// Function FSDEngine.BakeConfig.GetFloatSetting
// 0x0010 (0x0010 - 0x0000)
struct BakeConfig_GetFloatSetting final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DefaultVal;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BakeConfig_GetFloatSetting) == 0x000004, "Wrong alignment on BakeConfig_GetFloatSetting");
static_assert(sizeof(BakeConfig_GetFloatSetting) == 0x000010, "Wrong size on BakeConfig_GetFloatSetting");
static_assert(offsetof(BakeConfig_GetFloatSetting, Param_Name) == 0x000000, "Member 'BakeConfig_GetFloatSetting::Param_Name' has a wrong offset!");
static_assert(offsetof(BakeConfig_GetFloatSetting, DefaultVal) == 0x000008, "Member 'BakeConfig_GetFloatSetting::DefaultVal' has a wrong offset!");
static_assert(offsetof(BakeConfig_GetFloatSetting, ReturnValue) == 0x00000C, "Member 'BakeConfig_GetFloatSetting::ReturnValue' has a wrong offset!");

// Function FSDEngine.BakeConfig.GetIntSetting
// 0x0010 (0x0010 - 0x0000)
struct BakeConfig_GetIntSetting final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultVal;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BakeConfig_GetIntSetting) == 0x000004, "Wrong alignment on BakeConfig_GetIntSetting");
static_assert(sizeof(BakeConfig_GetIntSetting) == 0x000010, "Wrong size on BakeConfig_GetIntSetting");
static_assert(offsetof(BakeConfig_GetIntSetting, Param_Name) == 0x000000, "Member 'BakeConfig_GetIntSetting::Param_Name' has a wrong offset!");
static_assert(offsetof(BakeConfig_GetIntSetting, DefaultVal) == 0x000008, "Member 'BakeConfig_GetIntSetting::DefaultVal' has a wrong offset!");
static_assert(offsetof(BakeConfig_GetIntSetting, ReturnValue) == 0x00000C, "Member 'BakeConfig_GetIntSetting::ReturnValue' has a wrong offset!");

// Function FSDEngine.BakeConfig.GetObject
// 0x0010 (0x0010 - 0x0000)
struct BakeConfig_GetObject final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuilderBase*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BakeConfig_GetObject) == 0x000008, "Wrong alignment on BakeConfig_GetObject");
static_assert(sizeof(BakeConfig_GetObject) == 0x000010, "Wrong size on BakeConfig_GetObject");
static_assert(offsetof(BakeConfig_GetObject, Param_Name) == 0x000000, "Member 'BakeConfig_GetObject::Param_Name' has a wrong offset!");
static_assert(offsetof(BakeConfig_GetObject, ReturnValue) == 0x000008, "Member 'BakeConfig_GetObject::ReturnValue' has a wrong offset!");

// Function FSDEngine.BakeConfig.GetRandomStream
// 0x0008 (0x0008 - 0x0000)
struct BakeConfig_GetRandomStream final
{
public:
	struct FRandomStream                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(BakeConfig_GetRandomStream) == 0x000004, "Wrong alignment on BakeConfig_GetRandomStream");
static_assert(sizeof(BakeConfig_GetRandomStream) == 0x000008, "Wrong size on BakeConfig_GetRandomStream");
static_assert(offsetof(BakeConfig_GetRandomStream, ReturnValue) == 0x000000, "Member 'BakeConfig_GetRandomStream::ReturnValue' has a wrong offset!");

// Function FSDEngine.BakeConfig.GetVectorSetting
// 0x0020 (0x0020 - 0x0000)
struct BakeConfig_GetVectorSetting final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                DefaultVal;                                        // 0x0008(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BakeConfig_GetVectorSetting) == 0x000004, "Wrong alignment on BakeConfig_GetVectorSetting");
static_assert(sizeof(BakeConfig_GetVectorSetting) == 0x000020, "Wrong size on BakeConfig_GetVectorSetting");
static_assert(offsetof(BakeConfig_GetVectorSetting, Param_Name) == 0x000000, "Member 'BakeConfig_GetVectorSetting::Param_Name' has a wrong offset!");
static_assert(offsetof(BakeConfig_GetVectorSetting, DefaultVal) == 0x000008, "Member 'BakeConfig_GetVectorSetting::DefaultVal' has a wrong offset!");
static_assert(offsetof(BakeConfig_GetVectorSetting, ReturnValue) == 0x000014, "Member 'BakeConfig_GetVectorSetting::ReturnValue' has a wrong offset!");

// Function FSDEngine.DeepProceduralMeshComponent.FindTerrainMaterialFromPhysicalMaterial
// 0x0010 (0x0010 - 0x0000)
struct DeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial final
{
public:
	class UPhysicalMaterial*                      Material;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTerrainMaterialCore*                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial) == 0x000008, "Wrong alignment on DeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial");
static_assert(sizeof(DeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial) == 0x000010, "Wrong size on DeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial");
static_assert(offsetof(DeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial, Material) == 0x000000, "Member 'DeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial::Material' has a wrong offset!");
static_assert(offsetof(DeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial, ReturnValue) == 0x000008, "Member 'DeepProceduralMeshComponent_FindTerrainMaterialFromPhysicalMaterial::ReturnValue' has a wrong offset!");

}

