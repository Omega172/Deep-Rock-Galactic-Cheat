#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_SpaceRig_PlayerRank

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function ITEM_SpaceRig_PlayerRank.ITEM_SpaceRig_PlayerRank_C.ExecuteUbergraph_ITEM_SpaceRig_PlayerRank
// 0x0108 (0x0108 - 0x0000)
struct ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AFSDPlayerState* PlayerState, const struct FPlayerProgress& Progress)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_CE0[0x4];                                      // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	class AFSDPlayerState*                        K2Node_CustomEvent_PlayerState;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerProgress                        K2Node_CustomEvent_Progress;                       // 0x0058(0x0008)(NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE1[0x3];                                      // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE2[0x4];                                      // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0088(0x0028)()
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_3;                 // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameData*                              CallFunc_GetFSDGameData_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetPlayerRankName_ReturnValue;            // 0x00D8(0x0018)(ConstParm)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00F0(0x0018)()
};
static_assert(alignof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank) == 0x000008, "Wrong alignment on ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank");
static_assert(sizeof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank) == 0x000108, "Wrong size on ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, EntryPoint) == 0x000000, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_GetFSDPlayerState_ReturnValue) == 0x000028, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_GetFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_GetFSDPlayerState_ReturnValue_1) == 0x000030, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_GetFSDPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, K2Node_CustomEvent_PlayerState) == 0x000050, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, K2Node_CustomEvent_Progress) == 0x000058, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::K2Node_CustomEvent_Progress' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, K2Node_Event_IsDesignTime) == 0x000060, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_MenuColors_OutputColor) == 0x000064, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_MenuColors_OutputColor_1) == 0x000074, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, K2Node_MakeStruct_SlateColor) == 0x000088, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_MenuColors_OutputColor_2) == 0x0000B0, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_MenuColors_OutputColor_3) == 0x0000C0, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_MenuColors_OutputColor_3' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_GetFSDGameData_ReturnValue) == 0x0000D0, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_GetFSDGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_GetPlayerRankName_ReturnValue) == 0x0000D8, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_GetPlayerRankName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank, CallFunc_TextToUpper_ReturnValue) == 0x0000F0, "Member 'ITEM_SpaceRig_PlayerRank_C_ExecuteUbergraph_ITEM_SpaceRig_PlayerRank::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function ITEM_SpaceRig_PlayerRank.ITEM_SpaceRig_PlayerRank_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITEM_SpaceRig_PlayerRank_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_SpaceRig_PlayerRank_C_PreConstruct) == 0x000001, "Wrong alignment on ITEM_SpaceRig_PlayerRank_C_PreConstruct");
static_assert(sizeof(ITEM_SpaceRig_PlayerRank_C_PreConstruct) == 0x000001, "Wrong size on ITEM_SpaceRig_PlayerRank_C_PreConstruct");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITEM_SpaceRig_PlayerRank_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITEM_SpaceRig_PlayerRank.ITEM_SpaceRig_PlayerRank_C.OnPlayerProgressChanged
// 0x0010 (0x0010 - 0x0000)
struct ITEM_SpaceRig_PlayerRank_C_OnPlayerProgressChanged final
{
public:
	class AFSDPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerProgress                        Progress;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(ITEM_SpaceRig_PlayerRank_C_OnPlayerProgressChanged) == 0x000008, "Wrong alignment on ITEM_SpaceRig_PlayerRank_C_OnPlayerProgressChanged");
static_assert(sizeof(ITEM_SpaceRig_PlayerRank_C_OnPlayerProgressChanged) == 0x000010, "Wrong size on ITEM_SpaceRig_PlayerRank_C_OnPlayerProgressChanged");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_OnPlayerProgressChanged, PlayerState) == 0x000000, "Member 'ITEM_SpaceRig_PlayerRank_C_OnPlayerProgressChanged::PlayerState' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_OnPlayerProgressChanged, Progress) == 0x000008, "Member 'ITEM_SpaceRig_PlayerRank_C_OnPlayerProgressChanged::Progress' has a wrong offset!");

// Function ITEM_SpaceRig_PlayerRank.ITEM_SpaceRig_PlayerRank_C.SetPlayerName
// 0x0178 (0x0178 - 0x0000)
struct ITEM_SpaceRig_PlayerRank_C_SetPlayerName final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	EFSDTargetPlatform                            Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE3[0x2];                                      // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameOwnerStatus_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE4[0x7];                                      // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue_2;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x00D0(0x0018)()
	class UUGCRegistry*                           CallFunc_GetUGCRegistry_ReturnValue;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFSDTargetPlatform                            CallFunc_FSDTargetPlatform_ReturnValue;            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE5[0x4];                                      // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
};
static_assert(alignof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName) == 0x000008, "Wrong alignment on ITEM_SpaceRig_PlayerRank_C_SetPlayerName");
static_assert(sizeof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName) == 0x000178, "Wrong size on ITEM_SpaceRig_PlayerRank_C_SetPlayerName");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, Temp_text_Variable) == 0x000000, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, Temp_byte_Variable) == 0x000018, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, Temp_bool_Variable) == 0x000019, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, Temp_bool_Variable_1) == 0x00001A, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, Temp_bool_Variable_2) == 0x00001B, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, Temp_bool_Variable_3) == 0x00001C, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, Temp_bool_Variable_4) == 0x00001D, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_GetFSDPlayerState_ReturnValue) == 0x000020, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_GetFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_GetGameOwnerStatus_ReturnValue) == 0x000028, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_GetGameOwnerStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_GetFSDPlayerState_ReturnValue_1) == 0x000030, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_GetFSDPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_GetFSDPlayerState_ReturnValue_2) == 0x000038, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_GetFSDPlayerState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_GetPlayerName_ReturnValue) == 0x000040, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_GetPlayerName_ReturnValue_1) == 0x000050, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_GetPlayerName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000078, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, Temp_text_Variable_1) == 0x0000D0, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_GetUGCRegistry_ReturnValue) == 0x0000E8, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_GetUGCRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_FSDTargetPlatform_ReturnValue) == 0x0000F0, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_FSDTargetPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, K2Node_Select_Default) == 0x0000F2, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, Temp_bool_Variable_5) == 0x0000F3, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, K2Node_Select_Default_1) == 0x0000F8, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, K2Node_MakeArray_Array) == 0x000150, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITEM_SpaceRig_PlayerRank_C_SetPlayerName, CallFunc_Format_ReturnValue) == 0x000160, "Member 'ITEM_SpaceRig_PlayerRank_C_SetPlayerName::CallFunc_Format_ReturnValue' has a wrong offset!");

}

