#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Modio

#include "Basic.hpp"

#include "Modio_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function Modio.ModioCommonTypesLibrary.Conv_ApiKeyToString
// 0x0020 (0x0020 - 0x0000)
struct ModioCommonTypesLibrary_Conv_ApiKeyToString final
{
public:
	struct FModioApiKey                           ApiKey;                                            // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_Conv_ApiKeyToString) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_Conv_ApiKeyToString");
static_assert(sizeof(ModioCommonTypesLibrary_Conv_ApiKeyToString) == 0x000020, "Wrong size on ModioCommonTypesLibrary_Conv_ApiKeyToString");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_ApiKeyToString, ApiKey) == 0x000000, "Member 'ModioCommonTypesLibrary_Conv_ApiKeyToString::ApiKey' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_ApiKeyToString, ReturnValue) == 0x000010, "Member 'ModioCommonTypesLibrary_Conv_ApiKeyToString::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.Conv_EmailAddressToString
// 0x0020 (0x0020 - 0x0000)
struct ModioCommonTypesLibrary_Conv_EmailAddressToString final
{
public:
	struct FModioEmailAddress                     EmailAddress;                                      // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_Conv_EmailAddressToString) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_Conv_EmailAddressToString");
static_assert(sizeof(ModioCommonTypesLibrary_Conv_EmailAddressToString) == 0x000020, "Wrong size on ModioCommonTypesLibrary_Conv_EmailAddressToString");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_EmailAddressToString, EmailAddress) == 0x000000, "Member 'ModioCommonTypesLibrary_Conv_EmailAddressToString::EmailAddress' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_EmailAddressToString, ReturnValue) == 0x000010, "Member 'ModioCommonTypesLibrary_Conv_EmailAddressToString::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.Conv_EmailAuthCodeToString
// 0x0020 (0x0020 - 0x0000)
struct ModioCommonTypesLibrary_Conv_EmailAuthCodeToString final
{
public:
	struct FModioEmailAuthCode                    EmailAuthCode;                                     // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_Conv_EmailAuthCodeToString) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_Conv_EmailAuthCodeToString");
static_assert(sizeof(ModioCommonTypesLibrary_Conv_EmailAuthCodeToString) == 0x000020, "Wrong size on ModioCommonTypesLibrary_Conv_EmailAuthCodeToString");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_EmailAuthCodeToString, EmailAuthCode) == 0x000000, "Member 'ModioCommonTypesLibrary_Conv_EmailAuthCodeToString::EmailAuthCode' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_EmailAuthCodeToString, ReturnValue) == 0x000010, "Member 'ModioCommonTypesLibrary_Conv_EmailAuthCodeToString::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.Conv_FileMetadataIDToString
// 0x0018 (0x0018 - 0x0000)
struct ModioCommonTypesLibrary_Conv_FileMetadataIDToString final
{
public:
	struct FModioFileMetadataID                   FileMetadataID;                                    // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_Conv_FileMetadataIDToString) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_Conv_FileMetadataIDToString");
static_assert(sizeof(ModioCommonTypesLibrary_Conv_FileMetadataIDToString) == 0x000018, "Wrong size on ModioCommonTypesLibrary_Conv_FileMetadataIDToString");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_FileMetadataIDToString, FileMetadataID) == 0x000000, "Member 'ModioCommonTypesLibrary_Conv_FileMetadataIDToString::FileMetadataID' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_FileMetadataIDToString, ReturnValue) == 0x000008, "Member 'ModioCommonTypesLibrary_Conv_FileMetadataIDToString::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.Conv_GameIDToString
// 0x0018 (0x0018 - 0x0000)
struct ModioCommonTypesLibrary_Conv_GameIDToString final
{
public:
	struct FModioGameID                           GameId;                                            // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_Conv_GameIDToString) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_Conv_GameIDToString");
static_assert(sizeof(ModioCommonTypesLibrary_Conv_GameIDToString) == 0x000018, "Wrong size on ModioCommonTypesLibrary_Conv_GameIDToString");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_GameIDToString, GameId) == 0x000000, "Member 'ModioCommonTypesLibrary_Conv_GameIDToString::GameId' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_GameIDToString, ReturnValue) == 0x000008, "Member 'ModioCommonTypesLibrary_Conv_GameIDToString::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.Conv_ModIDToString
// 0x0018 (0x0018 - 0x0000)
struct ModioCommonTypesLibrary_Conv_ModIDToString final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_Conv_ModIDToString) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_Conv_ModIDToString");
static_assert(sizeof(ModioCommonTypesLibrary_Conv_ModIDToString) == 0x000018, "Wrong size on ModioCommonTypesLibrary_Conv_ModIDToString");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_ModIDToString, ModId) == 0x000000, "Member 'ModioCommonTypesLibrary_Conv_ModIDToString::ModId' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_ModIDToString, ReturnValue) == 0x000008, "Member 'ModioCommonTypesLibrary_Conv_ModIDToString::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.Conv_StringToEmailAddress
// 0x0020 (0x0020 - 0x0000)
struct ModioCommonTypesLibrary_Conv_StringToEmailAddress final
{
public:
	class FString                                 Email;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioEmailAddress                     ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_Conv_StringToEmailAddress) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_Conv_StringToEmailAddress");
static_assert(sizeof(ModioCommonTypesLibrary_Conv_StringToEmailAddress) == 0x000020, "Wrong size on ModioCommonTypesLibrary_Conv_StringToEmailAddress");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_StringToEmailAddress, Email) == 0x000000, "Member 'ModioCommonTypesLibrary_Conv_StringToEmailAddress::Email' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_StringToEmailAddress, ReturnValue) == 0x000010, "Member 'ModioCommonTypesLibrary_Conv_StringToEmailAddress::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.Conv_StringToEmailAuthCode
// 0x0020 (0x0020 - 0x0000)
struct ModioCommonTypesLibrary_Conv_StringToEmailAuthCode final
{
public:
	class FString                                 AuthCode;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioEmailAuthCode                    ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_Conv_StringToEmailAuthCode) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_Conv_StringToEmailAuthCode");
static_assert(sizeof(ModioCommonTypesLibrary_Conv_StringToEmailAuthCode) == 0x000020, "Wrong size on ModioCommonTypesLibrary_Conv_StringToEmailAuthCode");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_StringToEmailAuthCode, AuthCode) == 0x000000, "Member 'ModioCommonTypesLibrary_Conv_StringToEmailAuthCode::AuthCode' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_StringToEmailAuthCode, ReturnValue) == 0x000010, "Member 'ModioCommonTypesLibrary_Conv_StringToEmailAuthCode::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.Conv_UserIDToString
// 0x0018 (0x0018 - 0x0000)
struct ModioCommonTypesLibrary_Conv_UserIDToString final
{
public:
	struct FModioUserID                           UserId;                                            // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_Conv_UserIDToString) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_Conv_UserIDToString");
static_assert(sizeof(ModioCommonTypesLibrary_Conv_UserIDToString) == 0x000018, "Wrong size on ModioCommonTypesLibrary_Conv_UserIDToString");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_UserIDToString, UserId) == 0x000000, "Member 'ModioCommonTypesLibrary_Conv_UserIDToString::UserId' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_Conv_UserIDToString, ReturnValue) == 0x000008, "Member 'ModioCommonTypesLibrary_Conv_UserIDToString::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.EqualTo
// 0x0018 (0x0018 - 0x0000)
struct ModioCommonTypesLibrary_EqualTo final
{
public:
	struct FModioModID                            A;                                                 // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioModID                            B;                                                 // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1087[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioCommonTypesLibrary_EqualTo) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_EqualTo");
static_assert(sizeof(ModioCommonTypesLibrary_EqualTo) == 0x000018, "Wrong size on ModioCommonTypesLibrary_EqualTo");
static_assert(offsetof(ModioCommonTypesLibrary_EqualTo, A) == 0x000000, "Member 'ModioCommonTypesLibrary_EqualTo::A' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_EqualTo, B) == 0x000008, "Member 'ModioCommonTypesLibrary_EqualTo::B' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_EqualTo, ReturnValue) == 0x000010, "Member 'ModioCommonTypesLibrary_EqualTo::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.GetRawValueFromModID
// 0x0010 (0x0010 - 0x0000)
struct ModioCommonTypesLibrary_GetRawValueFromModID final
{
public:
	struct FModioModID                            In;                                                // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_GetRawValueFromModID) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_GetRawValueFromModID");
static_assert(sizeof(ModioCommonTypesLibrary_GetRawValueFromModID) == 0x000010, "Wrong size on ModioCommonTypesLibrary_GetRawValueFromModID");
static_assert(offsetof(ModioCommonTypesLibrary_GetRawValueFromModID, In) == 0x000000, "Member 'ModioCommonTypesLibrary_GetRawValueFromModID::In' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_GetRawValueFromModID, ReturnValue) == 0x000008, "Member 'ModioCommonTypesLibrary_GetRawValueFromModID::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.MakeApiKey
// 0x0020 (0x0020 - 0x0000)
struct ModioCommonTypesLibrary_MakeApiKey final
{
public:
	class FString                                 ApiKey;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioApiKey                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_MakeApiKey) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_MakeApiKey");
static_assert(sizeof(ModioCommonTypesLibrary_MakeApiKey) == 0x000020, "Wrong size on ModioCommonTypesLibrary_MakeApiKey");
static_assert(offsetof(ModioCommonTypesLibrary_MakeApiKey, ApiKey) == 0x000000, "Member 'ModioCommonTypesLibrary_MakeApiKey::ApiKey' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_MakeApiKey, ReturnValue) == 0x000010, "Member 'ModioCommonTypesLibrary_MakeApiKey::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.MakeAuthParams
// 0x0050 (0x0050 - 0x0000)
struct ModioCommonTypesLibrary_MakeAuthParams final
{
public:
	class FString                                 AuthToken;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EmailAddress;                                      // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasAcceptedTOS;                                   // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1088[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioAuthenticationParams             ReturnValue;                                       // 0x0028(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_MakeAuthParams) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_MakeAuthParams");
static_assert(sizeof(ModioCommonTypesLibrary_MakeAuthParams) == 0x000050, "Wrong size on ModioCommonTypesLibrary_MakeAuthParams");
static_assert(offsetof(ModioCommonTypesLibrary_MakeAuthParams, AuthToken) == 0x000000, "Member 'ModioCommonTypesLibrary_MakeAuthParams::AuthToken' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_MakeAuthParams, EmailAddress) == 0x000010, "Member 'ModioCommonTypesLibrary_MakeAuthParams::EmailAddress' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_MakeAuthParams, bHasAcceptedTOS) == 0x000020, "Member 'ModioCommonTypesLibrary_MakeAuthParams::bHasAcceptedTOS' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_MakeAuthParams, ReturnValue) == 0x000028, "Member 'ModioCommonTypesLibrary_MakeAuthParams::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.MakeGameId
// 0x0010 (0x0010 - 0x0000)
struct ModioCommonTypesLibrary_MakeGameId final
{
public:
	int64                                         GameId;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioGameID                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_MakeGameId) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_MakeGameId");
static_assert(sizeof(ModioCommonTypesLibrary_MakeGameId) == 0x000010, "Wrong size on ModioCommonTypesLibrary_MakeGameId");
static_assert(offsetof(ModioCommonTypesLibrary_MakeGameId, GameId) == 0x000000, "Member 'ModioCommonTypesLibrary_MakeGameId::GameId' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_MakeGameId, ReturnValue) == 0x000008, "Member 'ModioCommonTypesLibrary_MakeGameId::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.MakeInitializeOptions
// 0x0058 (0x0058 - 0x0000)
struct ModioCommonTypesLibrary_MakeInitializeOptions final
{
public:
	int64                                         GameId;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ApiKey;                                            // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioEnvironment                             GameEnvironment;                                   // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioPortal                                  PortalInUse;                                       // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1089[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioInitializeOptions                ReturnValue;                                       // 0x0020(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_MakeInitializeOptions) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_MakeInitializeOptions");
static_assert(sizeof(ModioCommonTypesLibrary_MakeInitializeOptions) == 0x000058, "Wrong size on ModioCommonTypesLibrary_MakeInitializeOptions");
static_assert(offsetof(ModioCommonTypesLibrary_MakeInitializeOptions, GameId) == 0x000000, "Member 'ModioCommonTypesLibrary_MakeInitializeOptions::GameId' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_MakeInitializeOptions, ApiKey) == 0x000008, "Member 'ModioCommonTypesLibrary_MakeInitializeOptions::ApiKey' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_MakeInitializeOptions, GameEnvironment) == 0x000018, "Member 'ModioCommonTypesLibrary_MakeInitializeOptions::GameEnvironment' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_MakeInitializeOptions, PortalInUse) == 0x000019, "Member 'ModioCommonTypesLibrary_MakeInitializeOptions::PortalInUse' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_MakeInitializeOptions, ReturnValue) == 0x000020, "Member 'ModioCommonTypesLibrary_MakeInitializeOptions::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.NotEqualTo
// 0x0018 (0x0018 - 0x0000)
struct ModioCommonTypesLibrary_NotEqualTo final
{
public:
	struct FModioModID                            A;                                                 // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioModID                            B;                                                 // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108A[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioCommonTypesLibrary_NotEqualTo) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_NotEqualTo");
static_assert(sizeof(ModioCommonTypesLibrary_NotEqualTo) == 0x000018, "Wrong size on ModioCommonTypesLibrary_NotEqualTo");
static_assert(offsetof(ModioCommonTypesLibrary_NotEqualTo, A) == 0x000000, "Member 'ModioCommonTypesLibrary_NotEqualTo::A' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_NotEqualTo, B) == 0x000008, "Member 'ModioCommonTypesLibrary_NotEqualTo::B' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_NotEqualTo, ReturnValue) == 0x000010, "Member 'ModioCommonTypesLibrary_NotEqualTo::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.SetPortal
// 0x0078 (0x0078 - 0x0000)
struct ModioCommonTypesLibrary_SetPortal final
{
public:
	struct FModioInitializeOptions                Options;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EModioPortal                                  PortalToUse;                                       // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioInitializeOptions                ReturnValue;                                       // 0x0040(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_SetPortal) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_SetPortal");
static_assert(sizeof(ModioCommonTypesLibrary_SetPortal) == 0x000078, "Wrong size on ModioCommonTypesLibrary_SetPortal");
static_assert(offsetof(ModioCommonTypesLibrary_SetPortal, Options) == 0x000000, "Member 'ModioCommonTypesLibrary_SetPortal::Options' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_SetPortal, PortalToUse) == 0x000038, "Member 'ModioCommonTypesLibrary_SetPortal::PortalToUse' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_SetPortal, ReturnValue) == 0x000040, "Member 'ModioCommonTypesLibrary_SetPortal::ReturnValue' has a wrong offset!");

// Function Modio.ModioCommonTypesLibrary.SetSessionIdentifier
// 0x0080 (0x0080 - 0x0000)
struct ModioCommonTypesLibrary_SetSessionIdentifier final
{
public:
	struct FModioInitializeOptions                Options;                                           // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 SessionIdentifier;                                 // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioInitializeOptions                ReturnValue;                                       // 0x0048(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCommonTypesLibrary_SetSessionIdentifier) == 0x000008, "Wrong alignment on ModioCommonTypesLibrary_SetSessionIdentifier");
static_assert(sizeof(ModioCommonTypesLibrary_SetSessionIdentifier) == 0x000080, "Wrong size on ModioCommonTypesLibrary_SetSessionIdentifier");
static_assert(offsetof(ModioCommonTypesLibrary_SetSessionIdentifier, Options) == 0x000000, "Member 'ModioCommonTypesLibrary_SetSessionIdentifier::Options' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_SetSessionIdentifier, SessionIdentifier) == 0x000038, "Member 'ModioCommonTypesLibrary_SetSessionIdentifier::SessionIdentifier' has a wrong offset!");
static_assert(offsetof(ModioCommonTypesLibrary_SetSessionIdentifier, ReturnValue) == 0x000048, "Member 'ModioCommonTypesLibrary_SetSessionIdentifier::ReturnValue' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetChangelogString
// 0x0088 (0x0088 - 0x0000)
struct ModioCreateModLibrary_SetChangelogString final
{
public:
	struct FModioCreateModFileParams              In;                                                // 0x0000(0x0078)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Changelog;                                         // 0x0078(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCreateModLibrary_SetChangelogString) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetChangelogString");
static_assert(sizeof(ModioCreateModLibrary_SetChangelogString) == 0x000088, "Wrong size on ModioCreateModLibrary_SetChangelogString");
static_assert(offsetof(ModioCreateModLibrary_SetChangelogString, In) == 0x000000, "Member 'ModioCreateModLibrary_SetChangelogString::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetChangelogString, Changelog) == 0x000078, "Member 'ModioCreateModLibrary_SetChangelogString::Changelog' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetDescription
// 0x00D8 (0x00D8 - 0x0000)
struct ModioCreateModLibrary_SetDescription final
{
public:
	struct FModioCreateModParams                  In;                                                // 0x0000(0x00C8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x00C8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCreateModLibrary_SetDescription) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetDescription");
static_assert(sizeof(ModioCreateModLibrary_SetDescription) == 0x0000D8, "Wrong size on ModioCreateModLibrary_SetDescription");
static_assert(offsetof(ModioCreateModLibrary_SetDescription, In) == 0x000000, "Member 'ModioCreateModLibrary_SetDescription::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetDescription, Description) == 0x0000C8, "Member 'ModioCreateModLibrary_SetDescription::Description' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetHomepageURL
// 0x00D8 (0x00D8 - 0x0000)
struct ModioCreateModLibrary_SetHomepageURL final
{
public:
	struct FModioCreateModParams                  In;                                                // 0x0000(0x00C8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 HomepageURL;                                       // 0x00C8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCreateModLibrary_SetHomepageURL) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetHomepageURL");
static_assert(sizeof(ModioCreateModLibrary_SetHomepageURL) == 0x0000D8, "Wrong size on ModioCreateModLibrary_SetHomepageURL");
static_assert(offsetof(ModioCreateModLibrary_SetHomepageURL, In) == 0x000000, "Member 'ModioCreateModLibrary_SetHomepageURL::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetHomepageURL, HomepageURL) == 0x0000C8, "Member 'ModioCreateModLibrary_SetHomepageURL::HomepageURL' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetInitialVisibility
// 0x00D0 (0x00D0 - 0x0000)
struct ModioCreateModLibrary_SetInitialVisibility final
{
public:
	struct FModioCreateModParams                  In;                                                // 0x0000(0x00C8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          InitialVisibility;                                 // 0x00C8(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108C[0x7];                                     // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioCreateModLibrary_SetInitialVisibility) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetInitialVisibility");
static_assert(sizeof(ModioCreateModLibrary_SetInitialVisibility) == 0x0000D0, "Wrong size on ModioCreateModLibrary_SetInitialVisibility");
static_assert(offsetof(ModioCreateModLibrary_SetInitialVisibility, In) == 0x000000, "Member 'ModioCreateModLibrary_SetInitialVisibility::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetInitialVisibility, InitialVisibility) == 0x0000C8, "Member 'ModioCreateModLibrary_SetInitialVisibility::InitialVisibility' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetMarkAsActiveRelease
// 0x0080 (0x0080 - 0x0000)
struct ModioCreateModLibrary_SetMarkAsActiveRelease final
{
public:
	struct FModioCreateModFileParams              In;                                                // 0x0000(0x0078)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bMarkAsActiveRelease;                              // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108D[0x7];                                     // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioCreateModLibrary_SetMarkAsActiveRelease) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetMarkAsActiveRelease");
static_assert(sizeof(ModioCreateModLibrary_SetMarkAsActiveRelease) == 0x000080, "Wrong size on ModioCreateModLibrary_SetMarkAsActiveRelease");
static_assert(offsetof(ModioCreateModLibrary_SetMarkAsActiveRelease, In) == 0x000000, "Member 'ModioCreateModLibrary_SetMarkAsActiveRelease::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetMarkAsActiveRelease, bMarkAsActiveRelease) == 0x000078, "Member 'ModioCreateModLibrary_SetMarkAsActiveRelease::bMarkAsActiveRelease' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetMetadataBlob
// 0x00D8 (0x00D8 - 0x0000)
struct ModioCreateModLibrary_SetMetadataBlob final
{
public:
	struct FModioCreateModParams                  In;                                                // 0x0000(0x00C8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 MetadataBlob;                                      // 0x00C8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCreateModLibrary_SetMetadataBlob) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetMetadataBlob");
static_assert(sizeof(ModioCreateModLibrary_SetMetadataBlob) == 0x0000D8, "Wrong size on ModioCreateModLibrary_SetMetadataBlob");
static_assert(offsetof(ModioCreateModLibrary_SetMetadataBlob, In) == 0x000000, "Member 'ModioCreateModLibrary_SetMetadataBlob::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetMetadataBlob, MetadataBlob) == 0x0000C8, "Member 'ModioCreateModLibrary_SetMetadataBlob::MetadataBlob' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetModFileMetadataBlob
// 0x0088 (0x0088 - 0x0000)
struct ModioCreateModLibrary_SetModFileMetadataBlob final
{
public:
	struct FModioCreateModFileParams              In;                                                // 0x0000(0x0078)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 MetadataBlob;                                      // 0x0078(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCreateModLibrary_SetModFileMetadataBlob) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetModFileMetadataBlob");
static_assert(sizeof(ModioCreateModLibrary_SetModFileMetadataBlob) == 0x000088, "Wrong size on ModioCreateModLibrary_SetModFileMetadataBlob");
static_assert(offsetof(ModioCreateModLibrary_SetModFileMetadataBlob, In) == 0x000000, "Member 'ModioCreateModLibrary_SetModFileMetadataBlob::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetModFileMetadataBlob, MetadataBlob) == 0x000078, "Member 'ModioCreateModLibrary_SetModFileMetadataBlob::MetadataBlob' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetModfilePlatforms
// 0x0088 (0x0088 - 0x0000)
struct ModioCreateModLibrary_SetModfilePlatforms final
{
public:
	struct FModioCreateModFileParams              In;                                                // 0x0000(0x0078)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<EModioModfilePlatform>                 Platforms;                                         // 0x0078(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCreateModLibrary_SetModfilePlatforms) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetModfilePlatforms");
static_assert(sizeof(ModioCreateModLibrary_SetModfilePlatforms) == 0x000088, "Wrong size on ModioCreateModLibrary_SetModfilePlatforms");
static_assert(offsetof(ModioCreateModLibrary_SetModfilePlatforms, In) == 0x000000, "Member 'ModioCreateModLibrary_SetModfilePlatforms::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetModfilePlatforms, Platforms) == 0x000078, "Member 'ModioCreateModLibrary_SetModfilePlatforms::Platforms' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetTags
// 0x00D8 (0x00D8 - 0x0000)
struct ModioCreateModLibrary_SetTags final
{
public:
	struct FModioCreateModParams                  In;                                                // 0x0000(0x00C8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         Tags;                                              // 0x00C8(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCreateModLibrary_SetTags) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetTags");
static_assert(sizeof(ModioCreateModLibrary_SetTags) == 0x0000D8, "Wrong size on ModioCreateModLibrary_SetTags");
static_assert(offsetof(ModioCreateModLibrary_SetTags, In) == 0x000000, "Member 'ModioCreateModLibrary_SetTags::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetTags, Tags) == 0x0000C8, "Member 'ModioCreateModLibrary_SetTags::Tags' has a wrong offset!");

// Function Modio.ModioCreateModLibrary.SetVersionString
// 0x0088 (0x0088 - 0x0000)
struct ModioCreateModLibrary_SetVersionString final
{
public:
	struct FModioCreateModFileParams              In;                                                // 0x0000(0x0078)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Version;                                           // 0x0078(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioCreateModLibrary_SetVersionString) == 0x000008, "Wrong alignment on ModioCreateModLibrary_SetVersionString");
static_assert(sizeof(ModioCreateModLibrary_SetVersionString) == 0x000088, "Wrong size on ModioCreateModLibrary_SetVersionString");
static_assert(offsetof(ModioCreateModLibrary_SetVersionString, In) == 0x000000, "Member 'ModioCreateModLibrary_SetVersionString::In' has a wrong offset!");
static_assert(offsetof(ModioCreateModLibrary_SetVersionString, Version) == 0x000078, "Member 'ModioCreateModLibrary_SetVersionString::Version' has a wrong offset!");

// Function Modio.ModioEditModLibrary.SetDescription
// 0x00B0 (0x00B0 - 0x0000)
struct ModioEditModLibrary_SetDescription final
{
public:
	struct FModioEditModParams                    In;                                                // 0x0000(0x00A0)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x00A0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEditModLibrary_SetDescription) == 0x000008, "Wrong alignment on ModioEditModLibrary_SetDescription");
static_assert(sizeof(ModioEditModLibrary_SetDescription) == 0x0000B0, "Wrong size on ModioEditModLibrary_SetDescription");
static_assert(offsetof(ModioEditModLibrary_SetDescription, In) == 0x000000, "Member 'ModioEditModLibrary_SetDescription::In' has a wrong offset!");
static_assert(offsetof(ModioEditModLibrary_SetDescription, Description) == 0x0000A0, "Member 'ModioEditModLibrary_SetDescription::Description' has a wrong offset!");

// Function Modio.ModioEditModLibrary.SetHomepageURL
// 0x00B0 (0x00B0 - 0x0000)
struct ModioEditModLibrary_SetHomepageURL final
{
public:
	struct FModioEditModParams                    In;                                                // 0x0000(0x00A0)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 HomepageURL;                                       // 0x00A0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEditModLibrary_SetHomepageURL) == 0x000008, "Wrong alignment on ModioEditModLibrary_SetHomepageURL");
static_assert(sizeof(ModioEditModLibrary_SetHomepageURL) == 0x0000B0, "Wrong size on ModioEditModLibrary_SetHomepageURL");
static_assert(offsetof(ModioEditModLibrary_SetHomepageURL, In) == 0x000000, "Member 'ModioEditModLibrary_SetHomepageURL::In' has a wrong offset!");
static_assert(offsetof(ModioEditModLibrary_SetHomepageURL, HomepageURL) == 0x0000A0, "Member 'ModioEditModLibrary_SetHomepageURL::HomepageURL' has a wrong offset!");

// Function Modio.ModioEditModLibrary.SetMaturityFlags
// 0x00A8 (0x00A8 - 0x0000)
struct ModioEditModLibrary_SetMaturityFlags final
{
public:
	struct FModioEditModParams                    In;                                                // 0x0000(0x00A0)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EModioMaturityFlags                           MaturityFlags;                                     // 0x00A0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108E[0x7];                                     // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioEditModLibrary_SetMaturityFlags) == 0x000008, "Wrong alignment on ModioEditModLibrary_SetMaturityFlags");
static_assert(sizeof(ModioEditModLibrary_SetMaturityFlags) == 0x0000A8, "Wrong size on ModioEditModLibrary_SetMaturityFlags");
static_assert(offsetof(ModioEditModLibrary_SetMaturityFlags, In) == 0x000000, "Member 'ModioEditModLibrary_SetMaturityFlags::In' has a wrong offset!");
static_assert(offsetof(ModioEditModLibrary_SetMaturityFlags, MaturityFlags) == 0x0000A0, "Member 'ModioEditModLibrary_SetMaturityFlags::MaturityFlags' has a wrong offset!");

// Function Modio.ModioEditModLibrary.SetMetadataBlob
// 0x00B0 (0x00B0 - 0x0000)
struct ModioEditModLibrary_SetMetadataBlob final
{
public:
	struct FModioEditModParams                    In;                                                // 0x0000(0x00A0)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 MetadataBlob;                                      // 0x00A0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEditModLibrary_SetMetadataBlob) == 0x000008, "Wrong alignment on ModioEditModLibrary_SetMetadataBlob");
static_assert(sizeof(ModioEditModLibrary_SetMetadataBlob) == 0x0000B0, "Wrong size on ModioEditModLibrary_SetMetadataBlob");
static_assert(offsetof(ModioEditModLibrary_SetMetadataBlob, In) == 0x000000, "Member 'ModioEditModLibrary_SetMetadataBlob::In' has a wrong offset!");
static_assert(offsetof(ModioEditModLibrary_SetMetadataBlob, MetadataBlob) == 0x0000A0, "Member 'ModioEditModLibrary_SetMetadataBlob::MetadataBlob' has a wrong offset!");

// Function Modio.ModioEditModLibrary.SetName
// 0x00B0 (0x00B0 - 0x0000)
struct ModioEditModLibrary_SetName final
{
public:
	struct FModioEditModParams                    In;                                                // 0x0000(0x00A0)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Param_Name;                                        // 0x00A0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEditModLibrary_SetName) == 0x000008, "Wrong alignment on ModioEditModLibrary_SetName");
static_assert(sizeof(ModioEditModLibrary_SetName) == 0x0000B0, "Wrong size on ModioEditModLibrary_SetName");
static_assert(offsetof(ModioEditModLibrary_SetName, In) == 0x000000, "Member 'ModioEditModLibrary_SetName::In' has a wrong offset!");
static_assert(offsetof(ModioEditModLibrary_SetName, Param_Name) == 0x0000A0, "Member 'ModioEditModLibrary_SetName::Param_Name' has a wrong offset!");

// Function Modio.ModioEditModLibrary.SetNamePath
// 0x00B0 (0x00B0 - 0x0000)
struct ModioEditModLibrary_SetNamePath final
{
public:
	struct FModioEditModParams                    In;                                                // 0x0000(0x00A0)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 NamePath;                                          // 0x00A0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEditModLibrary_SetNamePath) == 0x000008, "Wrong alignment on ModioEditModLibrary_SetNamePath");
static_assert(sizeof(ModioEditModLibrary_SetNamePath) == 0x0000B0, "Wrong size on ModioEditModLibrary_SetNamePath");
static_assert(offsetof(ModioEditModLibrary_SetNamePath, In) == 0x000000, "Member 'ModioEditModLibrary_SetNamePath::In' has a wrong offset!");
static_assert(offsetof(ModioEditModLibrary_SetNamePath, NamePath) == 0x0000A0, "Member 'ModioEditModLibrary_SetNamePath::NamePath' has a wrong offset!");

// Function Modio.ModioEditModLibrary.SetSummary
// 0x00B0 (0x00B0 - 0x0000)
struct ModioEditModLibrary_SetSummary final
{
public:
	struct FModioEditModParams                    In;                                                // 0x0000(0x00A0)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Summary;                                           // 0x00A0(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioEditModLibrary_SetSummary) == 0x000008, "Wrong alignment on ModioEditModLibrary_SetSummary");
static_assert(sizeof(ModioEditModLibrary_SetSummary) == 0x0000B0, "Wrong size on ModioEditModLibrary_SetSummary");
static_assert(offsetof(ModioEditModLibrary_SetSummary, In) == 0x000000, "Member 'ModioEditModLibrary_SetSummary::In' has a wrong offset!");
static_assert(offsetof(ModioEditModLibrary_SetSummary, Summary) == 0x0000A0, "Member 'ModioEditModLibrary_SetSummary::Summary' has a wrong offset!");

// Function Modio.ModioEditModLibrary.SetVisibility
// 0x00A8 (0x00A8 - 0x0000)
struct ModioEditModLibrary_SetVisibility final
{
public:
	struct FModioEditModParams                    In;                                                // 0x0000(0x00A0)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Visibility;                                        // 0x00A0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_108F[0x7];                                     // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioEditModLibrary_SetVisibility) == 0x000008, "Wrong alignment on ModioEditModLibrary_SetVisibility");
static_assert(sizeof(ModioEditModLibrary_SetVisibility) == 0x0000A8, "Wrong size on ModioEditModLibrary_SetVisibility");
static_assert(offsetof(ModioEditModLibrary_SetVisibility, In) == 0x000000, "Member 'ModioEditModLibrary_SetVisibility::In' has a wrong offset!");
static_assert(offsetof(ModioEditModLibrary_SetVisibility, Visibility) == 0x0000A0, "Member 'ModioEditModLibrary_SetVisibility::Visibility' has a wrong offset!");

// Function Modio.ModioErrorCodeLibrary.GetMessage
// 0x0018 (0x0018 - 0x0000)
struct ModioErrorCodeLibrary_GetMessage final
{
public:
	struct FModioErrorCode                        Error;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioErrorCodeLibrary_GetMessage) == 0x000008, "Wrong alignment on ModioErrorCodeLibrary_GetMessage");
static_assert(sizeof(ModioErrorCodeLibrary_GetMessage) == 0x000018, "Wrong size on ModioErrorCodeLibrary_GetMessage");
static_assert(offsetof(ModioErrorCodeLibrary_GetMessage, Error) == 0x000000, "Member 'ModioErrorCodeLibrary_GetMessage::Error' has a wrong offset!");
static_assert(offsetof(ModioErrorCodeLibrary_GetMessage, ReturnValue) == 0x000008, "Member 'ModioErrorCodeLibrary_GetMessage::ReturnValue' has a wrong offset!");

// Function Modio.ModioErrorCodeLibrary.GetValue
// 0x0010 (0x0010 - 0x0000)
struct ModioErrorCodeLibrary_GetValue final
{
public:
	struct FModioErrorCode                        Error;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1090[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioErrorCodeLibrary_GetValue) == 0x000008, "Wrong alignment on ModioErrorCodeLibrary_GetValue");
static_assert(sizeof(ModioErrorCodeLibrary_GetValue) == 0x000010, "Wrong size on ModioErrorCodeLibrary_GetValue");
static_assert(offsetof(ModioErrorCodeLibrary_GetValue, Error) == 0x000000, "Member 'ModioErrorCodeLibrary_GetValue::Error' has a wrong offset!");
static_assert(offsetof(ModioErrorCodeLibrary_GetValue, ReturnValue) == 0x000008, "Member 'ModioErrorCodeLibrary_GetValue::ReturnValue' has a wrong offset!");

// Function Modio.ModioErrorCodeLibrary.IsError
// 0x0010 (0x0010 - 0x0000)
struct ModioErrorCodeLibrary_IsError final
{
public:
	struct FModioErrorCode                        Error;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1091[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioErrorCodeLibrary_IsError) == 0x000008, "Wrong alignment on ModioErrorCodeLibrary_IsError");
static_assert(sizeof(ModioErrorCodeLibrary_IsError) == 0x000010, "Wrong size on ModioErrorCodeLibrary_IsError");
static_assert(offsetof(ModioErrorCodeLibrary_IsError, Error) == 0x000000, "Member 'ModioErrorCodeLibrary_IsError::Error' has a wrong offset!");
static_assert(offsetof(ModioErrorCodeLibrary_IsError, ReturnValue) == 0x000008, "Member 'ModioErrorCodeLibrary_IsError::ReturnValue' has a wrong offset!");

// Function Modio.ModioErrorConditionLibrary.ErrorCodeMatches
// 0x0010 (0x0010 - 0x0000)
struct ModioErrorConditionLibrary_ErrorCodeMatches final
{
public:
	struct FModioErrorCode                        ErrorCode;                                         // 0x0000(0x0008)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioErrorCondition                          Condition;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1092[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioErrorConditionLibrary_ErrorCodeMatches) == 0x000008, "Wrong alignment on ModioErrorConditionLibrary_ErrorCodeMatches");
static_assert(sizeof(ModioErrorConditionLibrary_ErrorCodeMatches) == 0x000010, "Wrong size on ModioErrorConditionLibrary_ErrorCodeMatches");
static_assert(offsetof(ModioErrorConditionLibrary_ErrorCodeMatches, ErrorCode) == 0x000000, "Member 'ModioErrorConditionLibrary_ErrorCodeMatches::ErrorCode' has a wrong offset!");
static_assert(offsetof(ModioErrorConditionLibrary_ErrorCodeMatches, Condition) == 0x000008, "Member 'ModioErrorConditionLibrary_ErrorCodeMatches::Condition' has a wrong offset!");
static_assert(offsetof(ModioErrorConditionLibrary_ErrorCodeMatches, ReturnValue) == 0x000009, "Member 'ModioErrorConditionLibrary_ErrorCodeMatches::ReturnValue' has a wrong offset!");

// Function Modio.ModioExampleLibrary.GetAvatarThumbnailSize
// 0x0001 (0x0001 - 0x0000)
struct ModioExampleLibrary_GetAvatarThumbnailSize final
{
public:
	EModioAvatarSize                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioExampleLibrary_GetAvatarThumbnailSize) == 0x000001, "Wrong alignment on ModioExampleLibrary_GetAvatarThumbnailSize");
static_assert(sizeof(ModioExampleLibrary_GetAvatarThumbnailSize) == 0x000001, "Wrong size on ModioExampleLibrary_GetAvatarThumbnailSize");
static_assert(offsetof(ModioExampleLibrary_GetAvatarThumbnailSize, ReturnValue) == 0x000000, "Member 'ModioExampleLibrary_GetAvatarThumbnailSize::ReturnValue' has a wrong offset!");

// Function Modio.ModioExampleLibrary.GetLogoFullSize
// 0x0001 (0x0001 - 0x0000)
struct ModioExampleLibrary_GetLogoFullSize final
{
public:
	EModioLogoSize                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioExampleLibrary_GetLogoFullSize) == 0x000001, "Wrong alignment on ModioExampleLibrary_GetLogoFullSize");
static_assert(sizeof(ModioExampleLibrary_GetLogoFullSize) == 0x000001, "Wrong size on ModioExampleLibrary_GetLogoFullSize");
static_assert(offsetof(ModioExampleLibrary_GetLogoFullSize, ReturnValue) == 0x000000, "Member 'ModioExampleLibrary_GetLogoFullSize::ReturnValue' has a wrong offset!");

// Function Modio.ModioExampleLibrary.GetLogoThumbnailSize
// 0x0001 (0x0001 - 0x0000)
struct ModioExampleLibrary_GetLogoThumbnailSize final
{
public:
	EModioLogoSize                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioExampleLibrary_GetLogoThumbnailSize) == 0x000001, "Wrong alignment on ModioExampleLibrary_GetLogoThumbnailSize");
static_assert(sizeof(ModioExampleLibrary_GetLogoThumbnailSize) == 0x000001, "Wrong size on ModioExampleLibrary_GetLogoThumbnailSize");
static_assert(offsetof(ModioExampleLibrary_GetLogoThumbnailSize, ReturnValue) == 0x000000, "Member 'ModioExampleLibrary_GetLogoThumbnailSize::ReturnValue' has a wrong offset!");

// Function Modio.ModioExampleLibrary.ListUserSubscriptionAsync
// 0x00B8 (0x00B8 - 0x0000)
struct ModioExampleLibrary_ListUserSubscriptionAsync final
{
public:
	struct FModioFilterParams                     FilterParams;                                      // 0x0000(0x00A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModInfoList& Result)> Callback;                                          // 0x00A8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioExampleLibrary_ListUserSubscriptionAsync) == 0x000008, "Wrong alignment on ModioExampleLibrary_ListUserSubscriptionAsync");
static_assert(sizeof(ModioExampleLibrary_ListUserSubscriptionAsync) == 0x0000B8, "Wrong size on ModioExampleLibrary_ListUserSubscriptionAsync");
static_assert(offsetof(ModioExampleLibrary_ListUserSubscriptionAsync, FilterParams) == 0x000000, "Member 'ModioExampleLibrary_ListUserSubscriptionAsync::FilterParams' has a wrong offset!");
static_assert(offsetof(ModioExampleLibrary_ListUserSubscriptionAsync, Callback) == 0x0000A8, "Member 'ModioExampleLibrary_ListUserSubscriptionAsync::Callback' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.ExcludingIDs
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_ExcludingIDs final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FModioModID>                    IDs;                                               // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_ExcludingIDs) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_ExcludingIDs");
static_assert(sizeof(ModioFilterParamsLibrary_ExcludingIDs) == 0x000160, "Wrong size on ModioFilterParamsLibrary_ExcludingIDs");
static_assert(offsetof(ModioFilterParamsLibrary_ExcludingIDs, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_ExcludingIDs::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_ExcludingIDs, IDs) == 0x0000A8, "Member 'ModioFilterParamsLibrary_ExcludingIDs::IDs' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_ExcludingIDs, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_ExcludingIDs::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.IndexedResults
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_IndexedResults final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int64                                         StartIndex;                                        // 0x00A8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ResultCount;                                       // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_IndexedResults) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_IndexedResults");
static_assert(sizeof(ModioFilterParamsLibrary_IndexedResults) == 0x000160, "Wrong size on ModioFilterParamsLibrary_IndexedResults");
static_assert(offsetof(ModioFilterParamsLibrary_IndexedResults, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_IndexedResults::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_IndexedResults, StartIndex) == 0x0000A8, "Member 'ModioFilterParamsLibrary_IndexedResults::StartIndex' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_IndexedResults, ResultCount) == 0x0000B0, "Member 'ModioFilterParamsLibrary_IndexedResults::ResultCount' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_IndexedResults, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_IndexedResults::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.MarkedLiveAfter
// 0x0158 (0x0158 - 0x0000)
struct ModioFilterParamsLibrary_MarkedLiveAfter final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDateTime                              LiveAfter;                                         // 0x00A8(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B0(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_MarkedLiveAfter) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_MarkedLiveAfter");
static_assert(sizeof(ModioFilterParamsLibrary_MarkedLiveAfter) == 0x000158, "Wrong size on ModioFilterParamsLibrary_MarkedLiveAfter");
static_assert(offsetof(ModioFilterParamsLibrary_MarkedLiveAfter, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_MarkedLiveAfter::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_MarkedLiveAfter, LiveAfter) == 0x0000A8, "Member 'ModioFilterParamsLibrary_MarkedLiveAfter::LiveAfter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_MarkedLiveAfter, ReturnValue) == 0x0000B0, "Member 'ModioFilterParamsLibrary_MarkedLiveAfter::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.MarkedLiveBefore
// 0x0158 (0x0158 - 0x0000)
struct ModioFilterParamsLibrary_MarkedLiveBefore final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FDateTime                              LiveBefore;                                        // 0x00A8(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B0(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_MarkedLiveBefore) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_MarkedLiveBefore");
static_assert(sizeof(ModioFilterParamsLibrary_MarkedLiveBefore) == 0x000158, "Wrong size on ModioFilterParamsLibrary_MarkedLiveBefore");
static_assert(offsetof(ModioFilterParamsLibrary_MarkedLiveBefore, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_MarkedLiveBefore::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_MarkedLiveBefore, LiveBefore) == 0x0000A8, "Member 'ModioFilterParamsLibrary_MarkedLiveBefore::LiveBefore' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_MarkedLiveBefore, ReturnValue) == 0x0000B0, "Member 'ModioFilterParamsLibrary_MarkedLiveBefore::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.MatchingIDs
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_MatchingIDs final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FModioModID>                    IDs;                                               // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_MatchingIDs) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_MatchingIDs");
static_assert(sizeof(ModioFilterParamsLibrary_MatchingIDs) == 0x000160, "Wrong size on ModioFilterParamsLibrary_MatchingIDs");
static_assert(offsetof(ModioFilterParamsLibrary_MatchingIDs, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_MatchingIDs::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_MatchingIDs, IDs) == 0x0000A8, "Member 'ModioFilterParamsLibrary_MatchingIDs::IDs' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_MatchingIDs, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_MatchingIDs::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.MetadataLike
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_MetadataLike final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 SearchString;                                      // 0x00A8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_MetadataLike) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_MetadataLike");
static_assert(sizeof(ModioFilterParamsLibrary_MetadataLike) == 0x000160, "Wrong size on ModioFilterParamsLibrary_MetadataLike");
static_assert(offsetof(ModioFilterParamsLibrary_MetadataLike, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_MetadataLike::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_MetadataLike, SearchString) == 0x0000A8, "Member 'ModioFilterParamsLibrary_MetadataLike::SearchString' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_MetadataLike, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_MetadataLike::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.NameContains
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_NameContains final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 SearchString;                                      // 0x00A8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_NameContains) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_NameContains");
static_assert(sizeof(ModioFilterParamsLibrary_NameContains) == 0x000160, "Wrong size on ModioFilterParamsLibrary_NameContains");
static_assert(offsetof(ModioFilterParamsLibrary_NameContains, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_NameContains::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_NameContains, SearchString) == 0x0000A8, "Member 'ModioFilterParamsLibrary_NameContains::SearchString' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_NameContains, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_NameContains::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.NameContainsStrings
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_NameContainsStrings final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         SearchStrings;                                     // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_NameContainsStrings) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_NameContainsStrings");
static_assert(sizeof(ModioFilterParamsLibrary_NameContainsStrings) == 0x000160, "Wrong size on ModioFilterParamsLibrary_NameContainsStrings");
static_assert(offsetof(ModioFilterParamsLibrary_NameContainsStrings, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_NameContainsStrings::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_NameContainsStrings, SearchStrings) == 0x0000A8, "Member 'ModioFilterParamsLibrary_NameContainsStrings::SearchStrings' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_NameContainsStrings, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_NameContainsStrings::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.PagedResults
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_PagedResults final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int64                                         PageNumber;                                        // 0x00A8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         PageSize;                                          // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_PagedResults) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_PagedResults");
static_assert(sizeof(ModioFilterParamsLibrary_PagedResults) == 0x000160, "Wrong size on ModioFilterParamsLibrary_PagedResults");
static_assert(offsetof(ModioFilterParamsLibrary_PagedResults, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_PagedResults::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_PagedResults, PageNumber) == 0x0000A8, "Member 'ModioFilterParamsLibrary_PagedResults::PageNumber' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_PagedResults, PageSize) == 0x0000B0, "Member 'ModioFilterParamsLibrary_PagedResults::PageSize' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_PagedResults, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_PagedResults::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.SortBy
// 0x0158 (0x0158 - 0x0000)
struct ModioFilterParamsLibrary_SortBy final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EModioSortFieldType                           ByField;                                           // 0x00A8(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioSortDirection                           ByDirection;                                       // 0x00A9(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1093[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B0(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_SortBy) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_SortBy");
static_assert(sizeof(ModioFilterParamsLibrary_SortBy) == 0x000158, "Wrong size on ModioFilterParamsLibrary_SortBy");
static_assert(offsetof(ModioFilterParamsLibrary_SortBy, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_SortBy::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_SortBy, ByField) == 0x0000A8, "Member 'ModioFilterParamsLibrary_SortBy::ByField' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_SortBy, ByDirection) == 0x0000A9, "Member 'ModioFilterParamsLibrary_SortBy::ByDirection' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_SortBy, ReturnValue) == 0x0000B0, "Member 'ModioFilterParamsLibrary_SortBy::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.WithoutTag
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_WithoutTag final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Tag;                                               // 0x00A8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_WithoutTag) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_WithoutTag");
static_assert(sizeof(ModioFilterParamsLibrary_WithoutTag) == 0x000160, "Wrong size on ModioFilterParamsLibrary_WithoutTag");
static_assert(offsetof(ModioFilterParamsLibrary_WithoutTag, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_WithoutTag::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_WithoutTag, Tag) == 0x0000A8, "Member 'ModioFilterParamsLibrary_WithoutTag::Tag' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_WithoutTag, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_WithoutTag::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.WithoutTags
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_WithoutTags final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         NewTags;                                           // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_WithoutTags) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_WithoutTags");
static_assert(sizeof(ModioFilterParamsLibrary_WithoutTags) == 0x000160, "Wrong size on ModioFilterParamsLibrary_WithoutTags");
static_assert(offsetof(ModioFilterParamsLibrary_WithoutTags, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_WithoutTags::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_WithoutTags, NewTags) == 0x0000A8, "Member 'ModioFilterParamsLibrary_WithoutTags::NewTags' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_WithoutTags, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_WithoutTags::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.WithTag
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_WithTag final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Tag;                                               // 0x00A8(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_WithTag) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_WithTag");
static_assert(sizeof(ModioFilterParamsLibrary_WithTag) == 0x000160, "Wrong size on ModioFilterParamsLibrary_WithTag");
static_assert(offsetof(ModioFilterParamsLibrary_WithTag, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_WithTag::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_WithTag, Tag) == 0x0000A8, "Member 'ModioFilterParamsLibrary_WithTag::Tag' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_WithTag, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_WithTag::ReturnValue' has a wrong offset!");

// Function Modio.ModioFilterParamsLibrary.WithTags
// 0x0160 (0x0160 - 0x0000)
struct ModioFilterParamsLibrary_WithTags final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         NewTags;                                           // 0x00A8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioFilterParams                     ReturnValue;                                       // 0x00B8(0x00A8)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioFilterParamsLibrary_WithTags) == 0x000008, "Wrong alignment on ModioFilterParamsLibrary_WithTags");
static_assert(sizeof(ModioFilterParamsLibrary_WithTags) == 0x000160, "Wrong size on ModioFilterParamsLibrary_WithTags");
static_assert(offsetof(ModioFilterParamsLibrary_WithTags, Filter) == 0x000000, "Member 'ModioFilterParamsLibrary_WithTags::Filter' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_WithTags, NewTags) == 0x0000A8, "Member 'ModioFilterParamsLibrary_WithTags::NewTags' has a wrong offset!");
static_assert(offsetof(ModioFilterParamsLibrary_WithTags, ReturnValue) == 0x0000B8, "Member 'ModioFilterParamsLibrary_WithTags::ReturnValue' has a wrong offset!");

// Function Modio.ModioImageLibrary.GetAvatarSize
// 0x0018 (0x0018 - 0x0000)
struct ModioImageLibrary_GetAvatarSize final
{
public:
	class UTexture*                               Avatar;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioAvatarSize                              AvatarSize;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1094[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1095[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioImageLibrary_GetAvatarSize) == 0x000008, "Wrong alignment on ModioImageLibrary_GetAvatarSize");
static_assert(sizeof(ModioImageLibrary_GetAvatarSize) == 0x000018, "Wrong size on ModioImageLibrary_GetAvatarSize");
static_assert(offsetof(ModioImageLibrary_GetAvatarSize, Avatar) == 0x000000, "Member 'ModioImageLibrary_GetAvatarSize::Avatar' has a wrong offset!");
static_assert(offsetof(ModioImageLibrary_GetAvatarSize, AvatarSize) == 0x000008, "Member 'ModioImageLibrary_GetAvatarSize::AvatarSize' has a wrong offset!");
static_assert(offsetof(ModioImageLibrary_GetAvatarSize, ReturnValue) == 0x00000C, "Member 'ModioImageLibrary_GetAvatarSize::ReturnValue' has a wrong offset!");

// Function Modio.ModioImageLibrary.GetGallerySize
// 0x0018 (0x0018 - 0x0000)
struct ModioImageLibrary_GetGallerySize final
{
public:
	class UTexture*                               GalleryImage;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioGallerySize                             GallerySize;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1096[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1097[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioImageLibrary_GetGallerySize) == 0x000008, "Wrong alignment on ModioImageLibrary_GetGallerySize");
static_assert(sizeof(ModioImageLibrary_GetGallerySize) == 0x000018, "Wrong size on ModioImageLibrary_GetGallerySize");
static_assert(offsetof(ModioImageLibrary_GetGallerySize, GalleryImage) == 0x000000, "Member 'ModioImageLibrary_GetGallerySize::GalleryImage' has a wrong offset!");
static_assert(offsetof(ModioImageLibrary_GetGallerySize, GallerySize) == 0x000008, "Member 'ModioImageLibrary_GetGallerySize::GallerySize' has a wrong offset!");
static_assert(offsetof(ModioImageLibrary_GetGallerySize, ReturnValue) == 0x00000C, "Member 'ModioImageLibrary_GetGallerySize::ReturnValue' has a wrong offset!");

// Function Modio.ModioImageLibrary.GetLogoSize
// 0x0018 (0x0018 - 0x0000)
struct ModioImageLibrary_GetLogoSize final
{
public:
	class UTexture*                               Logo;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioLogoSize                                LogoSize;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1098[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1099[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioImageLibrary_GetLogoSize) == 0x000008, "Wrong alignment on ModioImageLibrary_GetLogoSize");
static_assert(sizeof(ModioImageLibrary_GetLogoSize) == 0x000018, "Wrong size on ModioImageLibrary_GetLogoSize");
static_assert(offsetof(ModioImageLibrary_GetLogoSize, Logo) == 0x000000, "Member 'ModioImageLibrary_GetLogoSize::Logo' has a wrong offset!");
static_assert(offsetof(ModioImageLibrary_GetLogoSize, LogoSize) == 0x000008, "Member 'ModioImageLibrary_GetLogoSize::LogoSize' has a wrong offset!");
static_assert(offsetof(ModioImageLibrary_GetLogoSize, ReturnValue) == 0x00000C, "Member 'ModioImageLibrary_GetLogoSize::ReturnValue' has a wrong offset!");

// Function Modio.ModioImageLibrary.GetState
// 0x0018 (0x0018 - 0x0000)
struct ModioImageLibrary_GetState final
{
public:
	struct FModioImageWrapper                     Image;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EModioImageState                              ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109A[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioImageLibrary_GetState) == 0x000008, "Wrong alignment on ModioImageLibrary_GetState");
static_assert(sizeof(ModioImageLibrary_GetState) == 0x000018, "Wrong size on ModioImageLibrary_GetState");
static_assert(offsetof(ModioImageLibrary_GetState, Image) == 0x000000, "Member 'ModioImageLibrary_GetState::Image' has a wrong offset!");
static_assert(offsetof(ModioImageLibrary_GetState, ReturnValue) == 0x000010, "Member 'ModioImageLibrary_GetState::ReturnValue' has a wrong offset!");

// Function Modio.ModioImageLibrary.GetTexture
// 0x0018 (0x0018 - 0x0000)
struct ModioImageLibrary_GetTexture final
{
public:
	struct FModioImageWrapper                     Image;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UTexture2DDynamic*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImageLibrary_GetTexture) == 0x000008, "Wrong alignment on ModioImageLibrary_GetTexture");
static_assert(sizeof(ModioImageLibrary_GetTexture) == 0x000018, "Wrong size on ModioImageLibrary_GetTexture");
static_assert(offsetof(ModioImageLibrary_GetTexture, Image) == 0x000000, "Member 'ModioImageLibrary_GetTexture::Image' has a wrong offset!");
static_assert(offsetof(ModioImageLibrary_GetTexture, ReturnValue) == 0x000010, "Member 'ModioImageLibrary_GetTexture::ReturnValue' has a wrong offset!");

// Function Modio.ModioImageLibrary.LoadAsync
// 0x0020 (0x0020 - 0x0000)
struct ModioImageLibrary_LoadAsync final
{
public:
	struct FModioImageWrapper                     Image;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(class UTexture2DDynamic* Texture)> OnImageLoaded;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioImageLibrary_LoadAsync) == 0x000008, "Wrong alignment on ModioImageLibrary_LoadAsync");
static_assert(sizeof(ModioImageLibrary_LoadAsync) == 0x000020, "Wrong size on ModioImageLibrary_LoadAsync");
static_assert(offsetof(ModioImageLibrary_LoadAsync, Image) == 0x000000, "Member 'ModioImageLibrary_LoadAsync::Image' has a wrong offset!");
static_assert(offsetof(ModioImageLibrary_LoadAsync, OnImageLoaded) == 0x000010, "Member 'ModioImageLibrary_LoadAsync::OnImageLoaded' has a wrong offset!");

// Function Modio.ModioModCollectionLibrary.GetID
// 0x01F8 (0x01F8 - 0x0000)
struct ModioModCollectionLibrary_GetID final
{
public:
	struct FModioModCollectionEntry               Entry;                                             // 0x0000(0x01F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioModID                            ReturnValue;                                       // 0x01F0(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModCollectionLibrary_GetID) == 0x000008, "Wrong alignment on ModioModCollectionLibrary_GetID");
static_assert(sizeof(ModioModCollectionLibrary_GetID) == 0x0001F8, "Wrong size on ModioModCollectionLibrary_GetID");
static_assert(offsetof(ModioModCollectionLibrary_GetID, Entry) == 0x000000, "Member 'ModioModCollectionLibrary_GetID::Entry' has a wrong offset!");
static_assert(offsetof(ModioModCollectionLibrary_GetID, ReturnValue) == 0x0001F0, "Member 'ModioModCollectionLibrary_GetID::ReturnValue' has a wrong offset!");

// Function Modio.ModioModCollectionLibrary.GetModProfile
// 0x03B0 (0x03B0 - 0x0000)
struct ModioModCollectionLibrary_GetModProfile final
{
public:
	struct FModioModCollectionEntry               Entry;                                             // 0x0000(0x01F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioModInfo                          ReturnValue;                                       // 0x01F0(0x01C0)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModCollectionLibrary_GetModProfile) == 0x000008, "Wrong alignment on ModioModCollectionLibrary_GetModProfile");
static_assert(sizeof(ModioModCollectionLibrary_GetModProfile) == 0x0003B0, "Wrong size on ModioModCollectionLibrary_GetModProfile");
static_assert(offsetof(ModioModCollectionLibrary_GetModProfile, Entry) == 0x000000, "Member 'ModioModCollectionLibrary_GetModProfile::Entry' has a wrong offset!");
static_assert(offsetof(ModioModCollectionLibrary_GetModProfile, ReturnValue) == 0x0001F0, "Member 'ModioModCollectionLibrary_GetModProfile::ReturnValue' has a wrong offset!");

// Function Modio.ModioModCollectionLibrary.GetModState
// 0x01F8 (0x01F8 - 0x0000)
struct ModioModCollectionLibrary_GetModState final
{
public:
	struct FModioModCollectionEntry               Entry;                                             // 0x0000(0x01F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EModioModState                                ReturnValue;                                       // 0x01F0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109B[0x7];                                     // 0x01F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModCollectionLibrary_GetModState) == 0x000008, "Wrong alignment on ModioModCollectionLibrary_GetModState");
static_assert(sizeof(ModioModCollectionLibrary_GetModState) == 0x0001F8, "Wrong size on ModioModCollectionLibrary_GetModState");
static_assert(offsetof(ModioModCollectionLibrary_GetModState, Entry) == 0x000000, "Member 'ModioModCollectionLibrary_GetModState::Entry' has a wrong offset!");
static_assert(offsetof(ModioModCollectionLibrary_GetModState, ReturnValue) == 0x0001F0, "Member 'ModioModCollectionLibrary_GetModState::ReturnValue' has a wrong offset!");

// Function Modio.ModioModCollectionLibrary.GetPath
// 0x0200 (0x0200 - 0x0000)
struct ModioModCollectionLibrary_GetPath final
{
public:
	struct FModioModCollectionEntry               Entry;                                             // 0x0000(0x01F0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x01F0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModCollectionLibrary_GetPath) == 0x000008, "Wrong alignment on ModioModCollectionLibrary_GetPath");
static_assert(sizeof(ModioModCollectionLibrary_GetPath) == 0x000200, "Wrong size on ModioModCollectionLibrary_GetPath");
static_assert(offsetof(ModioModCollectionLibrary_GetPath, Entry) == 0x000000, "Member 'ModioModCollectionLibrary_GetPath::Entry' has a wrong offset!");
static_assert(offsetof(ModioModCollectionLibrary_GetPath, ReturnValue) == 0x0001F0, "Member 'ModioModCollectionLibrary_GetPath::ReturnValue' has a wrong offset!");

// Function Modio.ModioModDependenciesLibrary.GetDependencies
// 0x0038 (0x0038 - 0x0000)
struct ModioModDependenciesLibrary_GetDependencies final
{
public:
	struct FModioModDependencyList                ModTags;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FModioModDependency>            ReturnValue;                                       // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModDependenciesLibrary_GetDependencies) == 0x000008, "Wrong alignment on ModioModDependenciesLibrary_GetDependencies");
static_assert(sizeof(ModioModDependenciesLibrary_GetDependencies) == 0x000038, "Wrong size on ModioModDependenciesLibrary_GetDependencies");
static_assert(offsetof(ModioModDependenciesLibrary_GetDependencies, ModTags) == 0x000000, "Member 'ModioModDependenciesLibrary_GetDependencies::ModTags' has a wrong offset!");
static_assert(offsetof(ModioModDependenciesLibrary_GetDependencies, ReturnValue) == 0x000028, "Member 'ModioModDependenciesLibrary_GetDependencies::ReturnValue' has a wrong offset!");

// Function Modio.ModioModDependenciesLibrary.GetPagedResult
// 0x0040 (0x0040 - 0x0000)
struct ModioModDependenciesLibrary_GetPagedResult final
{
public:
	struct FModioModDependencyList                ModTags;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioPagedResult                      ReturnValue;                                       // 0x0028(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_109C[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModDependenciesLibrary_GetPagedResult) == 0x000008, "Wrong alignment on ModioModDependenciesLibrary_GetPagedResult");
static_assert(sizeof(ModioModDependenciesLibrary_GetPagedResult) == 0x000040, "Wrong size on ModioModDependenciesLibrary_GetPagedResult");
static_assert(offsetof(ModioModDependenciesLibrary_GetPagedResult, ModTags) == 0x000000, "Member 'ModioModDependenciesLibrary_GetPagedResult::ModTags' has a wrong offset!");
static_assert(offsetof(ModioModDependenciesLibrary_GetPagedResult, ReturnValue) == 0x000028, "Member 'ModioModDependenciesLibrary_GetPagedResult::ReturnValue' has a wrong offset!");

// Function Modio.ModioModInfoListLibrary.GetMods
// 0x0038 (0x0038 - 0x0000)
struct ModioModInfoListLibrary_GetMods final
{
public:
	struct FModioModInfoList                      ModInfoList;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FModioModInfo>                  ReturnValue;                                       // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModInfoListLibrary_GetMods) == 0x000008, "Wrong alignment on ModioModInfoListLibrary_GetMods");
static_assert(sizeof(ModioModInfoListLibrary_GetMods) == 0x000038, "Wrong size on ModioModInfoListLibrary_GetMods");
static_assert(offsetof(ModioModInfoListLibrary_GetMods, ModInfoList) == 0x000000, "Member 'ModioModInfoListLibrary_GetMods::ModInfoList' has a wrong offset!");
static_assert(offsetof(ModioModInfoListLibrary_GetMods, ReturnValue) == 0x000028, "Member 'ModioModInfoListLibrary_GetMods::ReturnValue' has a wrong offset!");

// Function Modio.ModioModInfoListLibrary.GetPagedResult
// 0x0040 (0x0040 - 0x0000)
struct ModioModInfoListLibrary_GetPagedResult final
{
public:
	struct FModioModInfoList                      ModInfoList;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioPagedResult                      ReturnValue;                                       // 0x0028(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_109D[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModInfoListLibrary_GetPagedResult) == 0x000008, "Wrong alignment on ModioModInfoListLibrary_GetPagedResult");
static_assert(sizeof(ModioModInfoListLibrary_GetPagedResult) == 0x000040, "Wrong size on ModioModInfoListLibrary_GetPagedResult");
static_assert(offsetof(ModioModInfoListLibrary_GetPagedResult, ModInfoList) == 0x000000, "Member 'ModioModInfoListLibrary_GetPagedResult::ModInfoList' has a wrong offset!");
static_assert(offsetof(ModioModInfoListLibrary_GetPagedResult, ReturnValue) == 0x000028, "Member 'ModioModInfoListLibrary_GetPagedResult::ReturnValue' has a wrong offset!");

// Function Modio.ModioModTagOptionsLibrary.GetPagedResult
// 0x0040 (0x0040 - 0x0000)
struct ModioModTagOptionsLibrary_GetPagedResult final
{
public:
	struct FModioModTagOptions                    ModTags;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioPagedResult                      ReturnValue;                                       // 0x0028(0x0014)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_109E[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioModTagOptionsLibrary_GetPagedResult) == 0x000008, "Wrong alignment on ModioModTagOptionsLibrary_GetPagedResult");
static_assert(sizeof(ModioModTagOptionsLibrary_GetPagedResult) == 0x000040, "Wrong size on ModioModTagOptionsLibrary_GetPagedResult");
static_assert(offsetof(ModioModTagOptionsLibrary_GetPagedResult, ModTags) == 0x000000, "Member 'ModioModTagOptionsLibrary_GetPagedResult::ModTags' has a wrong offset!");
static_assert(offsetof(ModioModTagOptionsLibrary_GetPagedResult, ReturnValue) == 0x000028, "Member 'ModioModTagOptionsLibrary_GetPagedResult::ReturnValue' has a wrong offset!");

// Function Modio.ModioModTagOptionsLibrary.GetTags
// 0x0038 (0x0038 - 0x0000)
struct ModioModTagOptionsLibrary_GetTags final
{
public:
	struct FModioModTagOptions                    ModTags;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FModioModTagInfo>               ReturnValue;                                       // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioModTagOptionsLibrary_GetTags) == 0x000008, "Wrong alignment on ModioModTagOptionsLibrary_GetTags");
static_assert(sizeof(ModioModTagOptionsLibrary_GetTags) == 0x000038, "Wrong size on ModioModTagOptionsLibrary_GetTags");
static_assert(offsetof(ModioModTagOptionsLibrary_GetTags, ModTags) == 0x000000, "Member 'ModioModTagOptionsLibrary_GetTags::ModTags' has a wrong offset!");
static_assert(offsetof(ModioModTagOptionsLibrary_GetTags, ReturnValue) == 0x000028, "Member 'ModioModTagOptionsLibrary_GetTags::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.GetValue_ModioOptionalImage
// 0x0030 (0x0030 - 0x0000)
struct ModioOptionalLibrary_GetValue_ModioOptionalImage final
{
public:
	struct FModioOptionalImage                    OptionalImage;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioImageWrapper                     Image;                                             // 0x0018(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_109F[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_GetValue_ModioOptionalImage) == 0x000008, "Wrong alignment on ModioOptionalLibrary_GetValue_ModioOptionalImage");
static_assert(sizeof(ModioOptionalLibrary_GetValue_ModioOptionalImage) == 0x000030, "Wrong size on ModioOptionalLibrary_GetValue_ModioOptionalImage");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalImage, OptionalImage) == 0x000000, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalImage::OptionalImage' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalImage, Image) == 0x000018, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalImage::Image' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalImage, ReturnValue) == 0x000028, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalImage::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.GetValue_ModioOptionalModDependencyList
// 0x0060 (0x0060 - 0x0000)
struct ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList final
{
public:
	struct FModioOptionalModDependencyList        OptionalDependencyList;                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioModDependencyList                DependencyList;                                    // 0x0030(0x0028)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A0[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList) == 0x000008, "Wrong alignment on ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList");
static_assert(sizeof(ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList) == 0x000060, "Wrong size on ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList, OptionalDependencyList) == 0x000000, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList::OptionalDependencyList' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList, DependencyList) == 0x000030, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList::DependencyList' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList, ReturnValue) == 0x000058, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModDependencyList::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.GetValue_ModioOptionalModID
// 0x0020 (0x0020 - 0x0000)
struct ModioOptionalLibrary_GetValue_ModioOptionalModID final
{
public:
	struct FModioOptionalModID                    OptionalID;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioModID                            ID;                                                // 0x0010(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A1[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_GetValue_ModioOptionalModID) == 0x000008, "Wrong alignment on ModioOptionalLibrary_GetValue_ModioOptionalModID");
static_assert(sizeof(ModioOptionalLibrary_GetValue_ModioOptionalModID) == 0x000020, "Wrong size on ModioOptionalLibrary_GetValue_ModioOptionalModID");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModID, OptionalID) == 0x000000, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModID::OptionalID' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModID, ID) == 0x000010, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModID::ID' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModID, ReturnValue) == 0x000018, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModID::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.GetValue_ModioOptionalModInfo
// 0x0390 (0x0390 - 0x0000)
struct ModioOptionalLibrary_GetValue_ModioOptionalModInfo final
{
public:
	struct FModioOptionalModInfo                  OptionalModInfo;                                   // 0x0000(0x01C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioModInfo                          ModInfo;                                           // 0x01C8(0x01C0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0388(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A2[0x7];                                     // 0x0389(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_GetValue_ModioOptionalModInfo) == 0x000008, "Wrong alignment on ModioOptionalLibrary_GetValue_ModioOptionalModInfo");
static_assert(sizeof(ModioOptionalLibrary_GetValue_ModioOptionalModInfo) == 0x000390, "Wrong size on ModioOptionalLibrary_GetValue_ModioOptionalModInfo");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModInfo, OptionalModInfo) == 0x000000, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModInfo::OptionalModInfo' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModInfo, ModInfo) == 0x0001C8, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModInfo::ModInfo' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModInfo, ReturnValue) == 0x000388, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModInfo::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.GetValue_ModioOptionalModInfoList
// 0x0060 (0x0060 - 0x0000)
struct ModioOptionalLibrary_GetValue_ModioOptionalModInfoList final
{
public:
	struct FModioOptionalModInfoList              OptionalModInfoList;                               // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioModInfoList                      ModInfoList;                                       // 0x0030(0x0028)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A3[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_GetValue_ModioOptionalModInfoList) == 0x000008, "Wrong alignment on ModioOptionalLibrary_GetValue_ModioOptionalModInfoList");
static_assert(sizeof(ModioOptionalLibrary_GetValue_ModioOptionalModInfoList) == 0x000060, "Wrong size on ModioOptionalLibrary_GetValue_ModioOptionalModInfoList");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModInfoList, OptionalModInfoList) == 0x000000, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModInfoList::OptionalModInfoList' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModInfoList, ModInfoList) == 0x000030, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModInfoList::ModInfoList' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModInfoList, ReturnValue) == 0x000058, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModInfoList::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.GetValue_ModioOptionalModProgressInfo
// 0x0060 (0x0060 - 0x0000)
struct ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo final
{
public:
	struct FModioOptionalModProgressInfo          OptionalModProgressInfo;                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioModProgressInfo                  ModProgressInfo;                                   // 0x0030(0x0028)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A4[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo) == 0x000008, "Wrong alignment on ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo");
static_assert(sizeof(ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo) == 0x000060, "Wrong size on ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo, OptionalModProgressInfo) == 0x000000, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo::OptionalModProgressInfo' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo, ModProgressInfo) == 0x000030, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo::ModProgressInfo' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo, ReturnValue) == 0x000058, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModProgressInfo::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.GetValue_ModioOptionalModTagOptions
// 0x0060 (0x0060 - 0x0000)
struct ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions final
{
public:
	struct FModioOptionalModTagOptions            OptionalModTagOptions;                             // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioModTagOptions                    ModTagOptions;                                     // 0x0030(0x0028)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A5[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions) == 0x000008, "Wrong alignment on ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions");
static_assert(sizeof(ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions) == 0x000060, "Wrong size on ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions, OptionalModTagOptions) == 0x000000, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions::OptionalModTagOptions' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions, ModTagOptions) == 0x000030, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions::ModTagOptions' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions, ReturnValue) == 0x000058, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalModTagOptions::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.GetValue_ModioOptionalTerms
// 0x01B0 (0x01B0 - 0x0000)
struct ModioOptionalLibrary_GetValue_ModioOptionalTerms final
{
public:
	struct FModioOptionalTerms                    OptionalTerms;                                     // 0x0000(0x00D8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioTerms                            Terms;                                             // 0x00D8(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x01A8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A6[0x7];                                     // 0x01A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_GetValue_ModioOptionalTerms) == 0x000008, "Wrong alignment on ModioOptionalLibrary_GetValue_ModioOptionalTerms");
static_assert(sizeof(ModioOptionalLibrary_GetValue_ModioOptionalTerms) == 0x0001B0, "Wrong size on ModioOptionalLibrary_GetValue_ModioOptionalTerms");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalTerms, OptionalTerms) == 0x000000, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalTerms::OptionalTerms' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalTerms, Terms) == 0x0000D8, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalTerms::Terms' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalTerms, ReturnValue) == 0x0001A8, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalTerms::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.GetValue_ModioOptionalUser
// 0x0070 (0x0070 - 0x0000)
struct ModioOptionalLibrary_GetValue_ModioOptionalUser final
{
public:
	struct FModioOptionalUser                     OptionalUser;                                      // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FModioUser                             User;                                              // 0x0038(0x0030)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A7[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_GetValue_ModioOptionalUser) == 0x000008, "Wrong alignment on ModioOptionalLibrary_GetValue_ModioOptionalUser");
static_assert(sizeof(ModioOptionalLibrary_GetValue_ModioOptionalUser) == 0x000070, "Wrong size on ModioOptionalLibrary_GetValue_ModioOptionalUser");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalUser, OptionalUser) == 0x000000, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalUser::OptionalUser' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalUser, User) == 0x000038, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalUser::User' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_GetValue_ModioOptionalUser, ReturnValue) == 0x000068, "Member 'ModioOptionalLibrary_GetValue_ModioOptionalUser::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.IsSet_ModioOptionalImage
// 0x0020 (0x0020 - 0x0000)
struct ModioOptionalLibrary_IsSet_ModioOptionalImage final
{
public:
	struct FModioOptionalImage                    OptionalImage;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A8[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_IsSet_ModioOptionalImage) == 0x000008, "Wrong alignment on ModioOptionalLibrary_IsSet_ModioOptionalImage");
static_assert(sizeof(ModioOptionalLibrary_IsSet_ModioOptionalImage) == 0x000020, "Wrong size on ModioOptionalLibrary_IsSet_ModioOptionalImage");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalImage, OptionalImage) == 0x000000, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalImage::OptionalImage' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalImage, ReturnValue) == 0x000018, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalImage::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.IsSet_ModioOptionalModDependencyList
// 0x0038 (0x0038 - 0x0000)
struct ModioOptionalLibrary_IsSet_ModioOptionalModDependencyList final
{
public:
	struct FModioOptionalModDependencyList        OptionalDependencyList;                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10A9[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_IsSet_ModioOptionalModDependencyList) == 0x000008, "Wrong alignment on ModioOptionalLibrary_IsSet_ModioOptionalModDependencyList");
static_assert(sizeof(ModioOptionalLibrary_IsSet_ModioOptionalModDependencyList) == 0x000038, "Wrong size on ModioOptionalLibrary_IsSet_ModioOptionalModDependencyList");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModDependencyList, OptionalDependencyList) == 0x000000, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModDependencyList::OptionalDependencyList' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModDependencyList, ReturnValue) == 0x000030, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModDependencyList::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.IsSet_ModioOptionalModID
// 0x0018 (0x0018 - 0x0000)
struct ModioOptionalLibrary_IsSet_ModioOptionalModID final
{
public:
	struct FModioOptionalModID                    OptionalID;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10AA[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_IsSet_ModioOptionalModID) == 0x000008, "Wrong alignment on ModioOptionalLibrary_IsSet_ModioOptionalModID");
static_assert(sizeof(ModioOptionalLibrary_IsSet_ModioOptionalModID) == 0x000018, "Wrong size on ModioOptionalLibrary_IsSet_ModioOptionalModID");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModID, OptionalID) == 0x000000, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModID::OptionalID' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModID, ReturnValue) == 0x000010, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModID::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.IsSet_ModioOptionalModInfo
// 0x01D0 (0x01D0 - 0x0000)
struct ModioOptionalLibrary_IsSet_ModioOptionalModInfo final
{
public:
	struct FModioOptionalModInfo                  OptionalModInfo;                                   // 0x0000(0x01C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x01C8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10AB[0x7];                                     // 0x01C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_IsSet_ModioOptionalModInfo) == 0x000008, "Wrong alignment on ModioOptionalLibrary_IsSet_ModioOptionalModInfo");
static_assert(sizeof(ModioOptionalLibrary_IsSet_ModioOptionalModInfo) == 0x0001D0, "Wrong size on ModioOptionalLibrary_IsSet_ModioOptionalModInfo");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModInfo, OptionalModInfo) == 0x000000, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModInfo::OptionalModInfo' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModInfo, ReturnValue) == 0x0001C8, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModInfo::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.IsSet_ModioOptionalModInfoList
// 0x0038 (0x0038 - 0x0000)
struct ModioOptionalLibrary_IsSet_ModioOptionalModInfoList final
{
public:
	struct FModioOptionalModInfoList              OptionalModInfoList;                               // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10AC[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_IsSet_ModioOptionalModInfoList) == 0x000008, "Wrong alignment on ModioOptionalLibrary_IsSet_ModioOptionalModInfoList");
static_assert(sizeof(ModioOptionalLibrary_IsSet_ModioOptionalModInfoList) == 0x000038, "Wrong size on ModioOptionalLibrary_IsSet_ModioOptionalModInfoList");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModInfoList, OptionalModInfoList) == 0x000000, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModInfoList::OptionalModInfoList' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModInfoList, ReturnValue) == 0x000030, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModInfoList::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.IsSet_ModioOptionalModProgressInfo
// 0x0038 (0x0038 - 0x0000)
struct ModioOptionalLibrary_IsSet_ModioOptionalModProgressInfo final
{
public:
	struct FModioOptionalModProgressInfo          OptionalModProgressInfo;                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10AD[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_IsSet_ModioOptionalModProgressInfo) == 0x000008, "Wrong alignment on ModioOptionalLibrary_IsSet_ModioOptionalModProgressInfo");
static_assert(sizeof(ModioOptionalLibrary_IsSet_ModioOptionalModProgressInfo) == 0x000038, "Wrong size on ModioOptionalLibrary_IsSet_ModioOptionalModProgressInfo");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModProgressInfo, OptionalModProgressInfo) == 0x000000, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModProgressInfo::OptionalModProgressInfo' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModProgressInfo, ReturnValue) == 0x000030, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModProgressInfo::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.IsSet_ModioOptionalModTagOptions
// 0x0038 (0x0038 - 0x0000)
struct ModioOptionalLibrary_IsSet_ModioOptionalModTagOptions final
{
public:
	struct FModioOptionalModTagOptions            OptionalModTagOptions;                             // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10AE[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_IsSet_ModioOptionalModTagOptions) == 0x000008, "Wrong alignment on ModioOptionalLibrary_IsSet_ModioOptionalModTagOptions");
static_assert(sizeof(ModioOptionalLibrary_IsSet_ModioOptionalModTagOptions) == 0x000038, "Wrong size on ModioOptionalLibrary_IsSet_ModioOptionalModTagOptions");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModTagOptions, OptionalModTagOptions) == 0x000000, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModTagOptions::OptionalModTagOptions' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalModTagOptions, ReturnValue) == 0x000030, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalModTagOptions::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.IsSet_ModioOptionalTerms
// 0x00E0 (0x00E0 - 0x0000)
struct ModioOptionalLibrary_IsSet_ModioOptionalTerms final
{
public:
	struct FModioOptionalTerms                    OptionalTerms;                                     // 0x0000(0x00D8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10AF[0x7];                                     // 0x00D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_IsSet_ModioOptionalTerms) == 0x000008, "Wrong alignment on ModioOptionalLibrary_IsSet_ModioOptionalTerms");
static_assert(sizeof(ModioOptionalLibrary_IsSet_ModioOptionalTerms) == 0x0000E0, "Wrong size on ModioOptionalLibrary_IsSet_ModioOptionalTerms");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalTerms, OptionalTerms) == 0x000000, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalTerms::OptionalTerms' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalTerms, ReturnValue) == 0x0000D8, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalTerms::ReturnValue' has a wrong offset!");

// Function Modio.ModioOptionalLibrary.IsSet_ModioOptionalUser
// 0x0040 (0x0040 - 0x0000)
struct ModioOptionalLibrary_IsSet_ModioOptionalUser final
{
public:
	struct FModioOptionalUser                     OptionalUser;                                      // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B0[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioOptionalLibrary_IsSet_ModioOptionalUser) == 0x000008, "Wrong alignment on ModioOptionalLibrary_IsSet_ModioOptionalUser");
static_assert(sizeof(ModioOptionalLibrary_IsSet_ModioOptionalUser) == 0x000040, "Wrong size on ModioOptionalLibrary_IsSet_ModioOptionalUser");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalUser, OptionalUser) == 0x000000, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalUser::OptionalUser' has a wrong offset!");
static_assert(offsetof(ModioOptionalLibrary_IsSet_ModioOptionalUser, ReturnValue) == 0x000038, "Member 'ModioOptionalLibrary_IsSet_ModioOptionalUser::ReturnValue' has a wrong offset!");

// Function Modio.ModioPopupContainer.PopPopup
// 0x0010 (0x0010 - 0x0000)
struct ModioPopupContainer_PopPopup final
{
public:
	TSubclassOf<class UModioPopupBase>            PopupClass;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioPopupBase*                        ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioPopupContainer_PopPopup) == 0x000008, "Wrong alignment on ModioPopupContainer_PopPopup");
static_assert(sizeof(ModioPopupContainer_PopPopup) == 0x000010, "Wrong size on ModioPopupContainer_PopPopup");
static_assert(offsetof(ModioPopupContainer_PopPopup, PopupClass) == 0x000000, "Member 'ModioPopupContainer_PopPopup::PopupClass' has a wrong offset!");
static_assert(offsetof(ModioPopupContainer_PopPopup, ReturnValue) == 0x000008, "Member 'ModioPopupContainer_PopPopup::ReturnValue' has a wrong offset!");

// Function Modio.ModioPopupContainer.PushPopup
// 0x0010 (0x0010 - 0x0000)
struct ModioPopupContainer_PushPopup final
{
public:
	TSubclassOf<class UModioPopupBase>            PopupClass;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UModioPopupBase*                        ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioPopupContainer_PushPopup) == 0x000008, "Wrong alignment on ModioPopupContainer_PushPopup");
static_assert(sizeof(ModioPopupContainer_PushPopup) == 0x000010, "Wrong size on ModioPopupContainer_PushPopup");
static_assert(offsetof(ModioPopupContainer_PushPopup, PopupClass) == 0x000000, "Member 'ModioPopupContainer_PushPopup::PopupClass' has a wrong offset!");
static_assert(offsetof(ModioPopupContainer_PushPopup, ReturnValue) == 0x000008, "Member 'ModioPopupContainer_PushPopup::ReturnValue' has a wrong offset!");

// Function Modio.ModioReportLibrary.MakeReportForGame
// 0x0098 (0x0098 - 0x0000)
struct ModioReportLibrary_MakeReportForGame final
{
public:
	struct FModioGameID                           Game;                                              // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioReportType                              Type;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReportDescription;                                 // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReporterName;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReporterContact;                                   // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioReportParams                     ReturnValue;                                       // 0x0040(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioReportLibrary_MakeReportForGame) == 0x000008, "Wrong alignment on ModioReportLibrary_MakeReportForGame");
static_assert(sizeof(ModioReportLibrary_MakeReportForGame) == 0x000098, "Wrong size on ModioReportLibrary_MakeReportForGame");
static_assert(offsetof(ModioReportLibrary_MakeReportForGame, Game) == 0x000000, "Member 'ModioReportLibrary_MakeReportForGame::Game' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForGame, Type) == 0x000008, "Member 'ModioReportLibrary_MakeReportForGame::Type' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForGame, ReportDescription) == 0x000010, "Member 'ModioReportLibrary_MakeReportForGame::ReportDescription' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForGame, ReporterName) == 0x000020, "Member 'ModioReportLibrary_MakeReportForGame::ReporterName' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForGame, ReporterContact) == 0x000030, "Member 'ModioReportLibrary_MakeReportForGame::ReporterContact' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForGame, ReturnValue) == 0x000040, "Member 'ModioReportLibrary_MakeReportForGame::ReturnValue' has a wrong offset!");

// Function Modio.ModioReportLibrary.MakeReportForMod
// 0x0098 (0x0098 - 0x0000)
struct ModioReportLibrary_MakeReportForMod final
{
public:
	struct FModioModID                            Mod;                                               // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioReportType                              Type;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReportDescription;                                 // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReporterName;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReporterContact;                                   // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioReportParams                     ReturnValue;                                       // 0x0040(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioReportLibrary_MakeReportForMod) == 0x000008, "Wrong alignment on ModioReportLibrary_MakeReportForMod");
static_assert(sizeof(ModioReportLibrary_MakeReportForMod) == 0x000098, "Wrong size on ModioReportLibrary_MakeReportForMod");
static_assert(offsetof(ModioReportLibrary_MakeReportForMod, Mod) == 0x000000, "Member 'ModioReportLibrary_MakeReportForMod::Mod' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForMod, Type) == 0x000008, "Member 'ModioReportLibrary_MakeReportForMod::Type' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForMod, ReportDescription) == 0x000010, "Member 'ModioReportLibrary_MakeReportForMod::ReportDescription' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForMod, ReporterName) == 0x000020, "Member 'ModioReportLibrary_MakeReportForMod::ReporterName' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForMod, ReporterContact) == 0x000030, "Member 'ModioReportLibrary_MakeReportForMod::ReporterContact' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForMod, ReturnValue) == 0x000040, "Member 'ModioReportLibrary_MakeReportForMod::ReturnValue' has a wrong offset!");

// Function Modio.ModioReportLibrary.MakeReportForUser
// 0x0098 (0x0098 - 0x0000)
struct ModioReportLibrary_MakeReportForUser final
{
public:
	struct FModioUserID                           User;                                              // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioReportType                              Type;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B3[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReportDescription;                                 // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReporterName;                                      // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReporterContact;                                   // 0x0030(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioReportParams                     ReturnValue;                                       // 0x0040(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioReportLibrary_MakeReportForUser) == 0x000008, "Wrong alignment on ModioReportLibrary_MakeReportForUser");
static_assert(sizeof(ModioReportLibrary_MakeReportForUser) == 0x000098, "Wrong size on ModioReportLibrary_MakeReportForUser");
static_assert(offsetof(ModioReportLibrary_MakeReportForUser, User) == 0x000000, "Member 'ModioReportLibrary_MakeReportForUser::User' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForUser, Type) == 0x000008, "Member 'ModioReportLibrary_MakeReportForUser::Type' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForUser, ReportDescription) == 0x000010, "Member 'ModioReportLibrary_MakeReportForUser::ReportDescription' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForUser, ReporterName) == 0x000020, "Member 'ModioReportLibrary_MakeReportForUser::ReporterName' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForUser, ReporterContact) == 0x000030, "Member 'ModioReportLibrary_MakeReportForUser::ReporterContact' has a wrong offset!");
static_assert(offsetof(ModioReportLibrary_MakeReportForUser, ReturnValue) == 0x000040, "Member 'ModioReportLibrary_MakeReportForUser::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.Conv_Int64ToString
// 0x0018 (0x0018 - 0x0000)
struct ModioSDKLibrary_Conv_Int64ToString final
{
public:
	int64                                         InInt;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSDKLibrary_Conv_Int64ToString) == 0x000008, "Wrong alignment on ModioSDKLibrary_Conv_Int64ToString");
static_assert(sizeof(ModioSDKLibrary_Conv_Int64ToString) == 0x000018, "Wrong size on ModioSDKLibrary_Conv_Int64ToString");
static_assert(offsetof(ModioSDKLibrary_Conv_Int64ToString, InInt) == 0x000000, "Member 'ModioSDKLibrary_Conv_Int64ToString::InInt' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Conv_Int64ToString, ReturnValue) == 0x000008, "Member 'ModioSDKLibrary_Conv_Int64ToString::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.Conv_Int64ToText
// 0x0030 (0x0030 - 0x0000)
struct ModioSDKLibrary_Conv_Int64ToText final
{
public:
	int64                                         Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlwaysSign;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseGrouping;                                      // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B4[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MinimumIntegralDigits;                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaximumIntegralDigits;                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B5[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0018(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSDKLibrary_Conv_Int64ToText) == 0x000008, "Wrong alignment on ModioSDKLibrary_Conv_Int64ToText");
static_assert(sizeof(ModioSDKLibrary_Conv_Int64ToText) == 0x000030, "Wrong size on ModioSDKLibrary_Conv_Int64ToText");
static_assert(offsetof(ModioSDKLibrary_Conv_Int64ToText, Value) == 0x000000, "Member 'ModioSDKLibrary_Conv_Int64ToText::Value' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Conv_Int64ToText, bAlwaysSign) == 0x000008, "Member 'ModioSDKLibrary_Conv_Int64ToText::bAlwaysSign' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Conv_Int64ToText, bUseGrouping) == 0x000009, "Member 'ModioSDKLibrary_Conv_Int64ToText::bUseGrouping' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Conv_Int64ToText, MinimumIntegralDigits) == 0x00000C, "Member 'ModioSDKLibrary_Conv_Int64ToText::MinimumIntegralDigits' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Conv_Int64ToText, MaximumIntegralDigits) == 0x000010, "Member 'ModioSDKLibrary_Conv_Int64ToText::MaximumIntegralDigits' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Conv_Int64ToText, ReturnValue) == 0x000018, "Member 'ModioSDKLibrary_Conv_Int64ToText::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.Filesize_ToString
// 0x0028 (0x0028 - 0x0000)
struct ModioSDKLibrary_Filesize_ToString final
{
public:
	int64                                         Filesize;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxDecimals;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFileSizeUnit                                 Unit;                                              // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B6[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSDKLibrary_Filesize_ToString) == 0x000008, "Wrong alignment on ModioSDKLibrary_Filesize_ToString");
static_assert(sizeof(ModioSDKLibrary_Filesize_ToString) == 0x000028, "Wrong size on ModioSDKLibrary_Filesize_ToString");
static_assert(offsetof(ModioSDKLibrary_Filesize_ToString, Filesize) == 0x000000, "Member 'ModioSDKLibrary_Filesize_ToString::Filesize' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Filesize_ToString, MaxDecimals) == 0x000008, "Member 'ModioSDKLibrary_Filesize_ToString::MaxDecimals' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Filesize_ToString, Unit) == 0x00000C, "Member 'ModioSDKLibrary_Filesize_ToString::Unit' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Filesize_ToString, ReturnValue) == 0x000010, "Member 'ModioSDKLibrary_Filesize_ToString::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.GetProjectApiKey
// 0x0010 (0x0010 - 0x0000)
struct ModioSDKLibrary_GetProjectApiKey final
{
public:
	struct FModioApiKey                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSDKLibrary_GetProjectApiKey) == 0x000008, "Wrong alignment on ModioSDKLibrary_GetProjectApiKey");
static_assert(sizeof(ModioSDKLibrary_GetProjectApiKey) == 0x000010, "Wrong size on ModioSDKLibrary_GetProjectApiKey");
static_assert(offsetof(ModioSDKLibrary_GetProjectApiKey, ReturnValue) == 0x000000, "Member 'ModioSDKLibrary_GetProjectApiKey::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.GetProjectEnvironment
// 0x0001 (0x0001 - 0x0000)
struct ModioSDKLibrary_GetProjectEnvironment final
{
public:
	EModioEnvironment                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSDKLibrary_GetProjectEnvironment) == 0x000001, "Wrong alignment on ModioSDKLibrary_GetProjectEnvironment");
static_assert(sizeof(ModioSDKLibrary_GetProjectEnvironment) == 0x000001, "Wrong size on ModioSDKLibrary_GetProjectEnvironment");
static_assert(offsetof(ModioSDKLibrary_GetProjectEnvironment, ReturnValue) == 0x000000, "Member 'ModioSDKLibrary_GetProjectEnvironment::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.GetProjectGameId
// 0x0008 (0x0008 - 0x0000)
struct ModioSDKLibrary_GetProjectGameId final
{
public:
	struct FModioGameID                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSDKLibrary_GetProjectGameId) == 0x000008, "Wrong alignment on ModioSDKLibrary_GetProjectGameId");
static_assert(sizeof(ModioSDKLibrary_GetProjectGameId) == 0x000008, "Wrong size on ModioSDKLibrary_GetProjectGameId");
static_assert(offsetof(ModioSDKLibrary_GetProjectGameId, ReturnValue) == 0x000000, "Member 'ModioSDKLibrary_GetProjectGameId::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.GetProjectInitializeOptions
// 0x0038 (0x0038 - 0x0000)
struct ModioSDKLibrary_GetProjectInitializeOptions final
{
public:
	struct FModioInitializeOptions                ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSDKLibrary_GetProjectInitializeOptions) == 0x000008, "Wrong alignment on ModioSDKLibrary_GetProjectInitializeOptions");
static_assert(sizeof(ModioSDKLibrary_GetProjectInitializeOptions) == 0x000038, "Wrong size on ModioSDKLibrary_GetProjectInitializeOptions");
static_assert(offsetof(ModioSDKLibrary_GetProjectInitializeOptions, ReturnValue) == 0x000000, "Member 'ModioSDKLibrary_GetProjectInitializeOptions::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.GetProjectInitializeOptionsForSessionId
// 0x0048 (0x0048 - 0x0000)
struct ModioSDKLibrary_GetProjectInitializeOptionsForSessionId final
{
public:
	class FString                                 SessionId;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioInitializeOptions                ReturnValue;                                       // 0x0010(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSDKLibrary_GetProjectInitializeOptionsForSessionId) == 0x000008, "Wrong alignment on ModioSDKLibrary_GetProjectInitializeOptionsForSessionId");
static_assert(sizeof(ModioSDKLibrary_GetProjectInitializeOptionsForSessionId) == 0x000048, "Wrong size on ModioSDKLibrary_GetProjectInitializeOptionsForSessionId");
static_assert(offsetof(ModioSDKLibrary_GetProjectInitializeOptionsForSessionId, SessionId) == 0x000000, "Member 'ModioSDKLibrary_GetProjectInitializeOptionsForSessionId::SessionId' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_GetProjectInitializeOptionsForSessionId, ReturnValue) == 0x000010, "Member 'ModioSDKLibrary_GetProjectInitializeOptionsForSessionId::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.IsValidEmailAddressFormat
// 0x0018 (0x0018 - 0x0000)
struct ModioSDKLibrary_IsValidEmailAddressFormat final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B7[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioSDKLibrary_IsValidEmailAddressFormat) == 0x000008, "Wrong alignment on ModioSDKLibrary_IsValidEmailAddressFormat");
static_assert(sizeof(ModioSDKLibrary_IsValidEmailAddressFormat) == 0x000018, "Wrong size on ModioSDKLibrary_IsValidEmailAddressFormat");
static_assert(offsetof(ModioSDKLibrary_IsValidEmailAddressFormat, String) == 0x000000, "Member 'ModioSDKLibrary_IsValidEmailAddressFormat::String' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_IsValidEmailAddressFormat, ReturnValue) == 0x000010, "Member 'ModioSDKLibrary_IsValidEmailAddressFormat::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.IsValidSecurityCodeFormat
// 0x0018 (0x0018 - 0x0000)
struct ModioSDKLibrary_IsValidSecurityCodeFormat final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B8[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioSDKLibrary_IsValidSecurityCodeFormat) == 0x000008, "Wrong alignment on ModioSDKLibrary_IsValidSecurityCodeFormat");
static_assert(sizeof(ModioSDKLibrary_IsValidSecurityCodeFormat) == 0x000018, "Wrong size on ModioSDKLibrary_IsValidSecurityCodeFormat");
static_assert(offsetof(ModioSDKLibrary_IsValidSecurityCodeFormat, String) == 0x000000, "Member 'ModioSDKLibrary_IsValidSecurityCodeFormat::String' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_IsValidSecurityCodeFormat, ReturnValue) == 0x000010, "Member 'ModioSDKLibrary_IsValidSecurityCodeFormat::ReturnValue' has a wrong offset!");

// Function Modio.ModioSDKLibrary.Pct_Int64Int64
// 0x0018 (0x0018 - 0x0000)
struct ModioSDKLibrary_Pct_Int64Int64 final
{
public:
	int64                                         Dividend;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Divisor;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10B9[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioSDKLibrary_Pct_Int64Int64) == 0x000008, "Wrong alignment on ModioSDKLibrary_Pct_Int64Int64");
static_assert(sizeof(ModioSDKLibrary_Pct_Int64Int64) == 0x000018, "Wrong size on ModioSDKLibrary_Pct_Int64Int64");
static_assert(offsetof(ModioSDKLibrary_Pct_Int64Int64, Dividend) == 0x000000, "Member 'ModioSDKLibrary_Pct_Int64Int64::Dividend' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Pct_Int64Int64, Divisor) == 0x000008, "Member 'ModioSDKLibrary_Pct_Int64Int64::Divisor' has a wrong offset!");
static_assert(offsetof(ModioSDKLibrary_Pct_Int64Int64, ReturnValue) == 0x000010, "Member 'ModioSDKLibrary_Pct_Int64Int64::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.GetLastValidationError
// 0x0010 (0x0010 - 0x0000)
struct ModioSubsystem_GetLastValidationError final
{
public:
	TArray<struct FModioValidationError>          ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_GetLastValidationError) == 0x000008, "Wrong alignment on ModioSubsystem_GetLastValidationError");
static_assert(sizeof(ModioSubsystem_GetLastValidationError) == 0x000010, "Wrong size on ModioSubsystem_GetLastValidationError");
static_assert(offsetof(ModioSubsystem_GetLastValidationError, ReturnValue) == 0x000000, "Member 'ModioSubsystem_GetLastValidationError::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.IsModManagementBusy
// 0x0001 (0x0001 - 0x0000)
struct ModioSubsystem_IsModManagementBusy final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_IsModManagementBusy) == 0x000001, "Wrong alignment on ModioSubsystem_IsModManagementBusy");
static_assert(sizeof(ModioSubsystem_IsModManagementBusy) == 0x000001, "Wrong size on ModioSubsystem_IsModManagementBusy");
static_assert(offsetof(ModioSubsystem_IsModManagementBusy, ReturnValue) == 0x000000, "Member 'ModioSubsystem_IsModManagementBusy::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_ArchiveModAsync
// 0x0018 (0x0018 - 0x0000)
struct ModioSubsystem_K2_ArchiveModAsync final
{
public:
	struct FModioModID                            Mod;                                               // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_ArchiveModAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_ArchiveModAsync");
static_assert(sizeof(ModioSubsystem_K2_ArchiveModAsync) == 0x000018, "Wrong size on ModioSubsystem_K2_ArchiveModAsync");
static_assert(offsetof(ModioSubsystem_K2_ArchiveModAsync, Mod) == 0x000000, "Member 'ModioSubsystem_K2_ArchiveModAsync::Mod' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_ArchiveModAsync, Callback) == 0x000008, "Member 'ModioSubsystem_K2_ArchiveModAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_AuthenticateUserEmailAsync
// 0x0020 (0x0020 - 0x0000)
struct ModioSubsystem_K2_AuthenticateUserEmailAsync final
{
public:
	struct FModioEmailAuthCode                    AuthenticationCode;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_AuthenticateUserEmailAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_AuthenticateUserEmailAsync");
static_assert(sizeof(ModioSubsystem_K2_AuthenticateUserEmailAsync) == 0x000020, "Wrong size on ModioSubsystem_K2_AuthenticateUserEmailAsync");
static_assert(offsetof(ModioSubsystem_K2_AuthenticateUserEmailAsync, AuthenticationCode) == 0x000000, "Member 'ModioSubsystem_K2_AuthenticateUserEmailAsync::AuthenticationCode' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_AuthenticateUserEmailAsync, Callback) == 0x000010, "Member 'ModioSubsystem_K2_AuthenticateUserEmailAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_AuthenticateUserExternalAsync
// 0x0040 (0x0040 - 0x0000)
struct ModioSubsystem_K2_AuthenticateUserExternalAsync final
{
public:
	struct FModioAuthenticationParams             User;                                              // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EModioAuthenticationProvider                  Provider;                                          // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10BC[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                                          // 0x002C(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_10BD[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioSubsystem_K2_AuthenticateUserExternalAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_AuthenticateUserExternalAsync");
static_assert(sizeof(ModioSubsystem_K2_AuthenticateUserExternalAsync) == 0x000040, "Wrong size on ModioSubsystem_K2_AuthenticateUserExternalAsync");
static_assert(offsetof(ModioSubsystem_K2_AuthenticateUserExternalAsync, User) == 0x000000, "Member 'ModioSubsystem_K2_AuthenticateUserExternalAsync::User' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_AuthenticateUserExternalAsync, Provider) == 0x000028, "Member 'ModioSubsystem_K2_AuthenticateUserExternalAsync::Provider' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_AuthenticateUserExternalAsync, Callback) == 0x00002C, "Member 'ModioSubsystem_K2_AuthenticateUserExternalAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_ClearUserDataAsync
// 0x0010 (0x0010 - 0x0000)
struct ModioSubsystem_K2_ClearUserDataAsync final
{
public:
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_ClearUserDataAsync) == 0x000004, "Wrong alignment on ModioSubsystem_K2_ClearUserDataAsync");
static_assert(sizeof(ModioSubsystem_K2_ClearUserDataAsync) == 0x000010, "Wrong size on ModioSubsystem_K2_ClearUserDataAsync");
static_assert(offsetof(ModioSubsystem_K2_ClearUserDataAsync, Callback) == 0x000000, "Member 'ModioSubsystem_K2_ClearUserDataAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_EnableModManagement
// 0x0018 (0x0018 - 0x0000)
struct ModioSubsystem_K2_EnableModManagement final
{
public:
	TDelegate<void(const struct FModioModManagementEvent& Event)> Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioErrorCode                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_EnableModManagement) == 0x000008, "Wrong alignment on ModioSubsystem_K2_EnableModManagement");
static_assert(sizeof(ModioSubsystem_K2_EnableModManagement) == 0x000018, "Wrong size on ModioSubsystem_K2_EnableModManagement");
static_assert(offsetof(ModioSubsystem_K2_EnableModManagement, Callback) == 0x000000, "Member 'ModioSubsystem_K2_EnableModManagement::Callback' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_EnableModManagement, ReturnValue) == 0x000010, "Member 'ModioSubsystem_K2_EnableModManagement::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_FetchExternalUpdatesAsync
// 0x0010 (0x0010 - 0x0000)
struct ModioSubsystem_K2_FetchExternalUpdatesAsync final
{
public:
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> OnFetchDone;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_FetchExternalUpdatesAsync) == 0x000004, "Wrong alignment on ModioSubsystem_K2_FetchExternalUpdatesAsync");
static_assert(sizeof(ModioSubsystem_K2_FetchExternalUpdatesAsync) == 0x000010, "Wrong size on ModioSubsystem_K2_FetchExternalUpdatesAsync");
static_assert(offsetof(ModioSubsystem_K2_FetchExternalUpdatesAsync, OnFetchDone) == 0x000000, "Member 'ModioSubsystem_K2_FetchExternalUpdatesAsync::OnFetchDone' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_ForceUninstallModAsync
// 0x0018 (0x0018 - 0x0000)
struct ModioSubsystem_K2_ForceUninstallModAsync final
{
public:
	struct FModioModID                            ModToRemove;                                       // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_ForceUninstallModAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_ForceUninstallModAsync");
static_assert(sizeof(ModioSubsystem_K2_ForceUninstallModAsync) == 0x000018, "Wrong size on ModioSubsystem_K2_ForceUninstallModAsync");
static_assert(offsetof(ModioSubsystem_K2_ForceUninstallModAsync, ModToRemove) == 0x000000, "Member 'ModioSubsystem_K2_ForceUninstallModAsync::ModToRemove' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_ForceUninstallModAsync, Callback) == 0x000008, "Member 'ModioSubsystem_K2_ForceUninstallModAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_GetModCreationHandle
// 0x0008 (0x0008 - 0x0000)
struct ModioSubsystem_K2_GetModCreationHandle final
{
public:
	struct FModioModCreationHandle                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_GetModCreationHandle) == 0x000008, "Wrong alignment on ModioSubsystem_K2_GetModCreationHandle");
static_assert(sizeof(ModioSubsystem_K2_GetModCreationHandle) == 0x000008, "Wrong size on ModioSubsystem_K2_GetModCreationHandle");
static_assert(offsetof(ModioSubsystem_K2_GetModCreationHandle, ReturnValue) == 0x000000, "Member 'ModioSubsystem_K2_GetModCreationHandle::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_GetModDependenciesAsync
// 0x0018 (0x0018 - 0x0000)
struct ModioSubsystem_K2_GetModDependenciesAsync final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModDependencyList& Dependencies)> Callback;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_GetModDependenciesAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_GetModDependenciesAsync");
static_assert(sizeof(ModioSubsystem_K2_GetModDependenciesAsync) == 0x000018, "Wrong size on ModioSubsystem_K2_GetModDependenciesAsync");
static_assert(offsetof(ModioSubsystem_K2_GetModDependenciesAsync, ModId) == 0x000000, "Member 'ModioSubsystem_K2_GetModDependenciesAsync::ModId' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetModDependenciesAsync, Callback) == 0x000008, "Member 'ModioSubsystem_K2_GetModDependenciesAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_GetModInfoAsync
// 0x0018 (0x0018 - 0x0000)
struct ModioSubsystem_K2_GetModInfoAsync final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModInfo& ModInfo)> Callback;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_GetModInfoAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_GetModInfoAsync");
static_assert(sizeof(ModioSubsystem_K2_GetModInfoAsync) == 0x000018, "Wrong size on ModioSubsystem_K2_GetModInfoAsync");
static_assert(offsetof(ModioSubsystem_K2_GetModInfoAsync, ModId) == 0x000000, "Member 'ModioSubsystem_K2_GetModInfoAsync::ModId' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetModInfoAsync, Callback) == 0x000008, "Member 'ModioSubsystem_K2_GetModInfoAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_GetModMediaAvatarAsync
// 0x0020 (0x0020 - 0x0000)
struct ModioSubsystem_K2_GetModMediaAvatarAsync final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioAvatarSize                              AvatarSize;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10BE[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalImage& Path)> Callback;                                          // 0x000C(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_10BF[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioSubsystem_K2_GetModMediaAvatarAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_GetModMediaAvatarAsync");
static_assert(sizeof(ModioSubsystem_K2_GetModMediaAvatarAsync) == 0x000020, "Wrong size on ModioSubsystem_K2_GetModMediaAvatarAsync");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaAvatarAsync, ModId) == 0x000000, "Member 'ModioSubsystem_K2_GetModMediaAvatarAsync::ModId' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaAvatarAsync, AvatarSize) == 0x000008, "Member 'ModioSubsystem_K2_GetModMediaAvatarAsync::AvatarSize' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaAvatarAsync, Callback) == 0x00000C, "Member 'ModioSubsystem_K2_GetModMediaAvatarAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_GetModMediaGalleryImageAsync
// 0x0020 (0x0020 - 0x0000)
struct ModioSubsystem_K2_GetModMediaGalleryImageAsync final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioGallerySize                             GallerySize;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C0[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalImage& Path)> Callback;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_GetModMediaGalleryImageAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_GetModMediaGalleryImageAsync");
static_assert(sizeof(ModioSubsystem_K2_GetModMediaGalleryImageAsync) == 0x000020, "Wrong size on ModioSubsystem_K2_GetModMediaGalleryImageAsync");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaGalleryImageAsync, ModId) == 0x000000, "Member 'ModioSubsystem_K2_GetModMediaGalleryImageAsync::ModId' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaGalleryImageAsync, GallerySize) == 0x000008, "Member 'ModioSubsystem_K2_GetModMediaGalleryImageAsync::GallerySize' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaGalleryImageAsync, Param_Index) == 0x00000C, "Member 'ModioSubsystem_K2_GetModMediaGalleryImageAsync::Param_Index' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaGalleryImageAsync, Callback) == 0x000010, "Member 'ModioSubsystem_K2_GetModMediaGalleryImageAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_GetModMediaLogoAsync
// 0x0020 (0x0020 - 0x0000)
struct ModioSubsystem_K2_GetModMediaLogoAsync final
{
public:
	struct FModioModID                            ModId;                                             // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioLogoSize                                LogoSize;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C1[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalImage& Path)> Callback;                                          // 0x000C(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C2[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioSubsystem_K2_GetModMediaLogoAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_GetModMediaLogoAsync");
static_assert(sizeof(ModioSubsystem_K2_GetModMediaLogoAsync) == 0x000020, "Wrong size on ModioSubsystem_K2_GetModMediaLogoAsync");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaLogoAsync, ModId) == 0x000000, "Member 'ModioSubsystem_K2_GetModMediaLogoAsync::ModId' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaLogoAsync, LogoSize) == 0x000008, "Member 'ModioSubsystem_K2_GetModMediaLogoAsync::LogoSize' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetModMediaLogoAsync, Callback) == 0x00000C, "Member 'ModioSubsystem_K2_GetModMediaLogoAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_GetModTagOptionsAsync
// 0x0010 (0x0010 - 0x0000)
struct ModioSubsystem_K2_GetModTagOptionsAsync final
{
public:
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModTagOptions& ModTagOptions)> Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_GetModTagOptionsAsync) == 0x000004, "Wrong alignment on ModioSubsystem_K2_GetModTagOptionsAsync");
static_assert(sizeof(ModioSubsystem_K2_GetModTagOptionsAsync) == 0x000010, "Wrong size on ModioSubsystem_K2_GetModTagOptionsAsync");
static_assert(offsetof(ModioSubsystem_K2_GetModTagOptionsAsync, Callback) == 0x000000, "Member 'ModioSubsystem_K2_GetModTagOptionsAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_GetTermsOfUseAsync
// 0x0014 (0x0014 - 0x0000)
struct ModioSubsystem_K2_GetTermsOfUseAsync final
{
public:
	EModioAuthenticationProvider                  Provider;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioLanguage                                Locale;                                            // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C3[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalTerms& Terms)> Callback;                                          // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_GetTermsOfUseAsync) == 0x000004, "Wrong alignment on ModioSubsystem_K2_GetTermsOfUseAsync");
static_assert(sizeof(ModioSubsystem_K2_GetTermsOfUseAsync) == 0x000014, "Wrong size on ModioSubsystem_K2_GetTermsOfUseAsync");
static_assert(offsetof(ModioSubsystem_K2_GetTermsOfUseAsync, Provider) == 0x000000, "Member 'ModioSubsystem_K2_GetTermsOfUseAsync::Provider' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetTermsOfUseAsync, Locale) == 0x000001, "Member 'ModioSubsystem_K2_GetTermsOfUseAsync::Locale' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetTermsOfUseAsync, Callback) == 0x000004, "Member 'ModioSubsystem_K2_GetTermsOfUseAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_GetUserMediaAvatarAsync
// 0x0014 (0x0014 - 0x0000)
struct ModioSubsystem_K2_GetUserMediaAvatarAsync final
{
public:
	EModioAvatarSize                              AvatarSize;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalImage& Path)> Callback;                                          // 0x0004(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_GetUserMediaAvatarAsync) == 0x000004, "Wrong alignment on ModioSubsystem_K2_GetUserMediaAvatarAsync");
static_assert(sizeof(ModioSubsystem_K2_GetUserMediaAvatarAsync) == 0x000014, "Wrong size on ModioSubsystem_K2_GetUserMediaAvatarAsync");
static_assert(offsetof(ModioSubsystem_K2_GetUserMediaAvatarAsync, AvatarSize) == 0x000000, "Member 'ModioSubsystem_K2_GetUserMediaAvatarAsync::AvatarSize' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_GetUserMediaAvatarAsync, Callback) == 0x000004, "Member 'ModioSubsystem_K2_GetUserMediaAvatarAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_InitializeAsync
// 0x0048 (0x0048 - 0x0000)
struct ModioSubsystem_K2_InitializeAsync final
{
public:
	struct FModioInitializeOptions                InitializeOptions;                                 // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> OnInitComplete;                                    // 0x0038(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_InitializeAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_InitializeAsync");
static_assert(sizeof(ModioSubsystem_K2_InitializeAsync) == 0x000048, "Wrong size on ModioSubsystem_K2_InitializeAsync");
static_assert(offsetof(ModioSubsystem_K2_InitializeAsync, InitializeOptions) == 0x000000, "Member 'ModioSubsystem_K2_InitializeAsync::InitializeOptions' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_InitializeAsync, OnInitComplete) == 0x000038, "Member 'ModioSubsystem_K2_InitializeAsync::OnInitComplete' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_ListAllModsAsync
// 0x00B8 (0x00B8 - 0x0000)
struct ModioSubsystem_K2_ListAllModsAsync final
{
public:
	struct FModioFilterParams                     Filter;                                            // 0x0000(0x00A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModInfoList& Result)> Callback;                                          // 0x00A8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_ListAllModsAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_ListAllModsAsync");
static_assert(sizeof(ModioSubsystem_K2_ListAllModsAsync) == 0x0000B8, "Wrong size on ModioSubsystem_K2_ListAllModsAsync");
static_assert(offsetof(ModioSubsystem_K2_ListAllModsAsync, Filter) == 0x000000, "Member 'ModioSubsystem_K2_ListAllModsAsync::Filter' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_ListAllModsAsync, Callback) == 0x0000A8, "Member 'ModioSubsystem_K2_ListAllModsAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_QueryCurrentModUpdate
// 0x0030 (0x0030 - 0x0000)
struct ModioSubsystem_K2_QueryCurrentModUpdate final
{
public:
	struct FModioOptionalModProgressInfo          ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_QueryCurrentModUpdate) == 0x000008, "Wrong alignment on ModioSubsystem_K2_QueryCurrentModUpdate");
static_assert(sizeof(ModioSubsystem_K2_QueryCurrentModUpdate) == 0x000030, "Wrong size on ModioSubsystem_K2_QueryCurrentModUpdate");
static_assert(offsetof(ModioSubsystem_K2_QueryCurrentModUpdate, ReturnValue) == 0x000000, "Member 'ModioSubsystem_K2_QueryCurrentModUpdate::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_QueryUserProfile
// 0x0038 (0x0038 - 0x0000)
struct ModioSubsystem_K2_QueryUserProfile final
{
public:
	struct FModioOptionalUser                     ReturnValue;                                       // 0x0000(0x0038)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_QueryUserProfile) == 0x000008, "Wrong alignment on ModioSubsystem_K2_QueryUserProfile");
static_assert(sizeof(ModioSubsystem_K2_QueryUserProfile) == 0x000038, "Wrong size on ModioSubsystem_K2_QueryUserProfile");
static_assert(offsetof(ModioSubsystem_K2_QueryUserProfile, ReturnValue) == 0x000000, "Member 'ModioSubsystem_K2_QueryUserProfile::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_ReportContentAsync
// 0x0068 (0x0068 - 0x0000)
struct ModioSubsystem_K2_ReportContentAsync final
{
public:
	struct FModioReportParams                     Report;                                            // 0x0000(0x0058)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                                          // 0x0058(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_ReportContentAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_ReportContentAsync");
static_assert(sizeof(ModioSubsystem_K2_ReportContentAsync) == 0x000068, "Wrong size on ModioSubsystem_K2_ReportContentAsync");
static_assert(offsetof(ModioSubsystem_K2_ReportContentAsync, Report) == 0x000000, "Member 'ModioSubsystem_K2_ReportContentAsync::Report' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_ReportContentAsync, Callback) == 0x000058, "Member 'ModioSubsystem_K2_ReportContentAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_RequestEmailAuthCodeAsync
// 0x0020 (0x0020 - 0x0000)
struct ModioSubsystem_K2_RequestEmailAuthCodeAsync final
{
public:
	struct FModioEmailAddress                     EmailAddress;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_RequestEmailAuthCodeAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_RequestEmailAuthCodeAsync");
static_assert(sizeof(ModioSubsystem_K2_RequestEmailAuthCodeAsync) == 0x000020, "Wrong size on ModioSubsystem_K2_RequestEmailAuthCodeAsync");
static_assert(offsetof(ModioSubsystem_K2_RequestEmailAuthCodeAsync, EmailAddress) == 0x000000, "Member 'ModioSubsystem_K2_RequestEmailAuthCodeAsync::EmailAddress' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_RequestEmailAuthCodeAsync, Callback) == 0x000010, "Member 'ModioSubsystem_K2_RequestEmailAuthCodeAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_ShutdownAsync
// 0x0010 (0x0010 - 0x0000)
struct ModioSubsystem_K2_ShutdownAsync final
{
public:
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> OnShutdownComplete;                                // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_ShutdownAsync) == 0x000004, "Wrong alignment on ModioSubsystem_K2_ShutdownAsync");
static_assert(sizeof(ModioSubsystem_K2_ShutdownAsync) == 0x000010, "Wrong size on ModioSubsystem_K2_ShutdownAsync");
static_assert(offsetof(ModioSubsystem_K2_ShutdownAsync, OnShutdownComplete) == 0x000000, "Member 'ModioSubsystem_K2_ShutdownAsync::OnShutdownComplete' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_SubmitModChangesAsync
// 0x00B8 (0x00B8 - 0x0000)
struct ModioSubsystem_K2_SubmitModChangesAsync final
{
public:
	struct FModioModID                            Mod;                                               // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioEditModParams                    Params_0;                                          // 0x0008(0x00A0)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModInfo& ModInfo)> Callback;                                          // 0x00A8(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_SubmitModChangesAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_SubmitModChangesAsync");
static_assert(sizeof(ModioSubsystem_K2_SubmitModChangesAsync) == 0x0000B8, "Wrong size on ModioSubsystem_K2_SubmitModChangesAsync");
static_assert(offsetof(ModioSubsystem_K2_SubmitModChangesAsync, Mod) == 0x000000, "Member 'ModioSubsystem_K2_SubmitModChangesAsync::Mod' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_SubmitModChangesAsync, Params_0) == 0x000008, "Member 'ModioSubsystem_K2_SubmitModChangesAsync::Params_0' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_SubmitModChangesAsync, Callback) == 0x0000A8, "Member 'ModioSubsystem_K2_SubmitModChangesAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_SubmitModRatingAsync
// 0x0020 (0x0020 - 0x0000)
struct ModioSubsystem_K2_SubmitModRatingAsync final
{
public:
	struct FModioModID                            Mod;                                               // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EModioRating                                  Rating;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C5[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                                          // 0x000C(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C6[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioSubsystem_K2_SubmitModRatingAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_SubmitModRatingAsync");
static_assert(sizeof(ModioSubsystem_K2_SubmitModRatingAsync) == 0x000020, "Wrong size on ModioSubsystem_K2_SubmitModRatingAsync");
static_assert(offsetof(ModioSubsystem_K2_SubmitModRatingAsync, Mod) == 0x000000, "Member 'ModioSubsystem_K2_SubmitModRatingAsync::Mod' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_SubmitModRatingAsync, Rating) == 0x000008, "Member 'ModioSubsystem_K2_SubmitModRatingAsync::Rating' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_SubmitModRatingAsync, Callback) == 0x00000C, "Member 'ModioSubsystem_K2_SubmitModRatingAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_SubmitNewModAsync
// 0x00E0 (0x00E0 - 0x0000)
struct ModioSubsystem_K2_SubmitNewModAsync final
{
public:
	struct FModioModCreationHandle                Handle;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioCreateModParams                  Params_0;                                          // 0x0008(0x00C8)(Parm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode, const struct FModioOptionalModID& NewModID)> Callback;                                          // 0x00D0(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_SubmitNewModAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_SubmitNewModAsync");
static_assert(sizeof(ModioSubsystem_K2_SubmitNewModAsync) == 0x0000E0, "Wrong size on ModioSubsystem_K2_SubmitNewModAsync");
static_assert(offsetof(ModioSubsystem_K2_SubmitNewModAsync, Handle) == 0x000000, "Member 'ModioSubsystem_K2_SubmitNewModAsync::Handle' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_SubmitNewModAsync, Params_0) == 0x000008, "Member 'ModioSubsystem_K2_SubmitNewModAsync::Params_0' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_SubmitNewModAsync, Callback) == 0x0000D0, "Member 'ModioSubsystem_K2_SubmitNewModAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_SubmitNewModFileForMod
// 0x0080 (0x0080 - 0x0000)
struct ModioSubsystem_K2_SubmitNewModFileForMod final
{
public:
	struct FModioModID                            Mod;                                               // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioCreateModFileParams              Params_0;                                          // 0x0008(0x0078)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_SubmitNewModFileForMod) == 0x000008, "Wrong alignment on ModioSubsystem_K2_SubmitNewModFileForMod");
static_assert(sizeof(ModioSubsystem_K2_SubmitNewModFileForMod) == 0x000080, "Wrong size on ModioSubsystem_K2_SubmitNewModFileForMod");
static_assert(offsetof(ModioSubsystem_K2_SubmitNewModFileForMod, Mod) == 0x000000, "Member 'ModioSubsystem_K2_SubmitNewModFileForMod::Mod' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_SubmitNewModFileForMod, Params_0) == 0x000008, "Member 'ModioSubsystem_K2_SubmitNewModFileForMod::Params_0' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_SubscribeToModAsync
// 0x0018 (0x0018 - 0x0000)
struct ModioSubsystem_K2_SubscribeToModAsync final
{
public:
	struct FModioModID                            ModToSubscribeTo;                                  // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> OnSubscribeComplete;                               // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_SubscribeToModAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_SubscribeToModAsync");
static_assert(sizeof(ModioSubsystem_K2_SubscribeToModAsync) == 0x000018, "Wrong size on ModioSubsystem_K2_SubscribeToModAsync");
static_assert(offsetof(ModioSubsystem_K2_SubscribeToModAsync, ModToSubscribeTo) == 0x000000, "Member 'ModioSubsystem_K2_SubscribeToModAsync::ModToSubscribeTo' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_SubscribeToModAsync, OnSubscribeComplete) == 0x000008, "Member 'ModioSubsystem_K2_SubscribeToModAsync::OnSubscribeComplete' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_UnsubscribeFromModAsync
// 0x0018 (0x0018 - 0x0000)
struct ModioSubsystem_K2_UnsubscribeFromModAsync final
{
public:
	struct FModioModID                            ModToUnsubscribeFrom;                              // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> OnUnsubscribeComplete;                             // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_UnsubscribeFromModAsync) == 0x000008, "Wrong alignment on ModioSubsystem_K2_UnsubscribeFromModAsync");
static_assert(sizeof(ModioSubsystem_K2_UnsubscribeFromModAsync) == 0x000018, "Wrong size on ModioSubsystem_K2_UnsubscribeFromModAsync");
static_assert(offsetof(ModioSubsystem_K2_UnsubscribeFromModAsync, ModToUnsubscribeFrom) == 0x000000, "Member 'ModioSubsystem_K2_UnsubscribeFromModAsync::ModToUnsubscribeFrom' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_K2_UnsubscribeFromModAsync, OnUnsubscribeComplete) == 0x000008, "Member 'ModioSubsystem_K2_UnsubscribeFromModAsync::OnUnsubscribeComplete' has a wrong offset!");

// Function Modio.ModioSubsystem.K2_VerifyUserAuthenticationAsync
// 0x0010 (0x0010 - 0x0000)
struct ModioSubsystem_K2_VerifyUserAuthenticationAsync final
{
public:
	TDelegate<void(const struct FModioErrorCode& ErrorCode)> Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_K2_VerifyUserAuthenticationAsync) == 0x000004, "Wrong alignment on ModioSubsystem_K2_VerifyUserAuthenticationAsync");
static_assert(sizeof(ModioSubsystem_K2_VerifyUserAuthenticationAsync) == 0x000010, "Wrong size on ModioSubsystem_K2_VerifyUserAuthenticationAsync");
static_assert(offsetof(ModioSubsystem_K2_VerifyUserAuthenticationAsync, Callback) == 0x000000, "Member 'ModioSubsystem_K2_VerifyUserAuthenticationAsync::Callback' has a wrong offset!");

// Function Modio.ModioSubsystem.PrioritizeTransferForMod
// 0x0010 (0x0010 - 0x0000)
struct ModioSubsystem_PrioritizeTransferForMod final
{
public:
	struct FModioModID                            ModToPrioritize;                                   // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioErrorCode                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_PrioritizeTransferForMod) == 0x000008, "Wrong alignment on ModioSubsystem_PrioritizeTransferForMod");
static_assert(sizeof(ModioSubsystem_PrioritizeTransferForMod) == 0x000010, "Wrong size on ModioSubsystem_PrioritizeTransferForMod");
static_assert(offsetof(ModioSubsystem_PrioritizeTransferForMod, ModToPrioritize) == 0x000000, "Member 'ModioSubsystem_PrioritizeTransferForMod::ModToPrioritize' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_PrioritizeTransferForMod, ReturnValue) == 0x000008, "Member 'ModioSubsystem_PrioritizeTransferForMod::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.QuerySystemInstallations
// 0x0050 (0x0050 - 0x0000)
struct ModioSubsystem_QuerySystemInstallations final
{
public:
	TMap<struct FModioModID, struct FModioModCollectionEntry> ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_QuerySystemInstallations) == 0x000008, "Wrong alignment on ModioSubsystem_QuerySystemInstallations");
static_assert(sizeof(ModioSubsystem_QuerySystemInstallations) == 0x000050, "Wrong size on ModioSubsystem_QuerySystemInstallations");
static_assert(offsetof(ModioSubsystem_QuerySystemInstallations, ReturnValue) == 0x000000, "Member 'ModioSubsystem_QuerySystemInstallations::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.QueryUserInstallations
// 0x0058 (0x0058 - 0x0000)
struct ModioSubsystem_QueryUserInstallations final
{
public:
	bool                                          bIncludeOutdatedMods;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FModioModID, struct FModioModCollectionEntry> ReturnValue;                                       // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_QueryUserInstallations) == 0x000008, "Wrong alignment on ModioSubsystem_QueryUserInstallations");
static_assert(sizeof(ModioSubsystem_QueryUserInstallations) == 0x000058, "Wrong size on ModioSubsystem_QueryUserInstallations");
static_assert(offsetof(ModioSubsystem_QueryUserInstallations, bIncludeOutdatedMods) == 0x000000, "Member 'ModioSubsystem_QueryUserInstallations::bIncludeOutdatedMods' has a wrong offset!");
static_assert(offsetof(ModioSubsystem_QueryUserInstallations, ReturnValue) == 0x000008, "Member 'ModioSubsystem_QueryUserInstallations::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.QueryUserSubscriptions
// 0x0050 (0x0050 - 0x0000)
struct ModioSubsystem_QueryUserSubscriptions final
{
public:
	TMap<struct FModioModID, struct FModioModCollectionEntry> ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_QueryUserSubscriptions) == 0x000008, "Wrong alignment on ModioSubsystem_QueryUserSubscriptions");
static_assert(sizeof(ModioSubsystem_QueryUserSubscriptions) == 0x000050, "Wrong size on ModioSubsystem_QueryUserSubscriptions");
static_assert(offsetof(ModioSubsystem_QueryUserSubscriptions, ReturnValue) == 0x000000, "Member 'ModioSubsystem_QueryUserSubscriptions::ReturnValue' has a wrong offset!");

// Function Modio.ModioSubsystem.SetLogLevel
// 0x0001 (0x0001 - 0x0000)
struct ModioSubsystem_SetLogLevel final
{
public:
	EModioLogLevel                                UnrealLogLevel;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioSubsystem_SetLogLevel) == 0x000001, "Wrong alignment on ModioSubsystem_SetLogLevel");
static_assert(sizeof(ModioSubsystem_SetLogLevel) == 0x000001, "Wrong size on ModioSubsystem_SetLogLevel");
static_assert(offsetof(ModioSubsystem_SetLogLevel, UnrealLogLevel) == 0x000000, "Member 'ModioSubsystem_SetLogLevel::UnrealLogLevel' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.Add
// 0x0018 (0x0018 - 0x0000)
struct ModioUnsigned64Library_Add final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       RHS;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUnsigned64Library_Add) == 0x000008, "Wrong alignment on ModioUnsigned64Library_Add");
static_assert(sizeof(ModioUnsigned64Library_Add) == 0x000018, "Wrong size on ModioUnsigned64Library_Add");
static_assert(offsetof(ModioUnsigned64Library_Add, LHS) == 0x000000, "Member 'ModioUnsigned64Library_Add::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_Add, RHS) == 0x000008, "Member 'ModioUnsigned64Library_Add::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_Add, ReturnValue) == 0x000010, "Member 'ModioUnsigned64Library_Add::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.BreakToComponents
// 0x0010 (0x0010 - 0x0000)
struct ModioUnsigned64Library_BreakToComponents final
{
public:
	struct FModioUnsigned64                       In;                                                // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         High;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Low;                                               // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUnsigned64Library_BreakToComponents) == 0x000008, "Wrong alignment on ModioUnsigned64Library_BreakToComponents");
static_assert(sizeof(ModioUnsigned64Library_BreakToComponents) == 0x000010, "Wrong size on ModioUnsigned64Library_BreakToComponents");
static_assert(offsetof(ModioUnsigned64Library_BreakToComponents, In) == 0x000000, "Member 'ModioUnsigned64Library_BreakToComponents::In' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_BreakToComponents, High) == 0x000008, "Member 'ModioUnsigned64Library_BreakToComponents::High' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_BreakToComponents, Low) == 0x00000C, "Member 'ModioUnsigned64Library_BreakToComponents::Low' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.Conv_FModioUnsigned64ToFloat
// 0x0010 (0x0010 - 0x0000)
struct ModioUnsigned64Library_Conv_FModioUnsigned64ToFloat final
{
public:
	struct FModioUnsigned64                       In;                                                // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C8[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUnsigned64Library_Conv_FModioUnsigned64ToFloat) == 0x000008, "Wrong alignment on ModioUnsigned64Library_Conv_FModioUnsigned64ToFloat");
static_assert(sizeof(ModioUnsigned64Library_Conv_FModioUnsigned64ToFloat) == 0x000010, "Wrong size on ModioUnsigned64Library_Conv_FModioUnsigned64ToFloat");
static_assert(offsetof(ModioUnsigned64Library_Conv_FModioUnsigned64ToFloat, In) == 0x000000, "Member 'ModioUnsigned64Library_Conv_FModioUnsigned64ToFloat::In' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_Conv_FModioUnsigned64ToFloat, ReturnValue) == 0x000008, "Member 'ModioUnsigned64Library_Conv_FModioUnsigned64ToFloat::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.Divide
// 0x0018 (0x0018 - 0x0000)
struct ModioUnsigned64Library_Divide final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       RHS;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUnsigned64Library_Divide) == 0x000008, "Wrong alignment on ModioUnsigned64Library_Divide");
static_assert(sizeof(ModioUnsigned64Library_Divide) == 0x000018, "Wrong size on ModioUnsigned64Library_Divide");
static_assert(offsetof(ModioUnsigned64Library_Divide, LHS) == 0x000000, "Member 'ModioUnsigned64Library_Divide::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_Divide, RHS) == 0x000008, "Member 'ModioUnsigned64Library_Divide::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_Divide, ReturnValue) == 0x000010, "Member 'ModioUnsigned64Library_Divide::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.DivideFloat
// 0x0010 (0x0010 - 0x0000)
struct ModioUnsigned64Library_DivideFloat final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         RHS;                                               // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUnsigned64Library_DivideFloat) == 0x000008, "Wrong alignment on ModioUnsigned64Library_DivideFloat");
static_assert(sizeof(ModioUnsigned64Library_DivideFloat) == 0x000010, "Wrong size on ModioUnsigned64Library_DivideFloat");
static_assert(offsetof(ModioUnsigned64Library_DivideFloat, LHS) == 0x000000, "Member 'ModioUnsigned64Library_DivideFloat::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_DivideFloat, RHS) == 0x000008, "Member 'ModioUnsigned64Library_DivideFloat::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_DivideFloat, ReturnValue) == 0x00000C, "Member 'ModioUnsigned64Library_DivideFloat::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.DivideToFloat
// 0x0018 (0x0018 - 0x0000)
struct ModioUnsigned64Library_DivideToFloat final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       RHS;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10C9[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUnsigned64Library_DivideToFloat) == 0x000008, "Wrong alignment on ModioUnsigned64Library_DivideToFloat");
static_assert(sizeof(ModioUnsigned64Library_DivideToFloat) == 0x000018, "Wrong size on ModioUnsigned64Library_DivideToFloat");
static_assert(offsetof(ModioUnsigned64Library_DivideToFloat, LHS) == 0x000000, "Member 'ModioUnsigned64Library_DivideToFloat::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_DivideToFloat, RHS) == 0x000008, "Member 'ModioUnsigned64Library_DivideToFloat::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_DivideToFloat, ReturnValue) == 0x000010, "Member 'ModioUnsigned64Library_DivideToFloat::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.EqualTo
// 0x0018 (0x0018 - 0x0000)
struct ModioUnsigned64Library_EqualTo final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       RHS;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10CA[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUnsigned64Library_EqualTo) == 0x000008, "Wrong alignment on ModioUnsigned64Library_EqualTo");
static_assert(sizeof(ModioUnsigned64Library_EqualTo) == 0x000018, "Wrong size on ModioUnsigned64Library_EqualTo");
static_assert(offsetof(ModioUnsigned64Library_EqualTo, LHS) == 0x000000, "Member 'ModioUnsigned64Library_EqualTo::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_EqualTo, RHS) == 0x000008, "Member 'ModioUnsigned64Library_EqualTo::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_EqualTo, ReturnValue) == 0x000010, "Member 'ModioUnsigned64Library_EqualTo::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.GreaterThan
// 0x0018 (0x0018 - 0x0000)
struct ModioUnsigned64Library_GreaterThan final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       RHS;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10CB[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUnsigned64Library_GreaterThan) == 0x000008, "Wrong alignment on ModioUnsigned64Library_GreaterThan");
static_assert(sizeof(ModioUnsigned64Library_GreaterThan) == 0x000018, "Wrong size on ModioUnsigned64Library_GreaterThan");
static_assert(offsetof(ModioUnsigned64Library_GreaterThan, LHS) == 0x000000, "Member 'ModioUnsigned64Library_GreaterThan::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_GreaterThan, RHS) == 0x000008, "Member 'ModioUnsigned64Library_GreaterThan::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_GreaterThan, ReturnValue) == 0x000010, "Member 'ModioUnsigned64Library_GreaterThan::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.LessThan
// 0x0018 (0x0018 - 0x0000)
struct ModioUnsigned64Library_LessThan final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       RHS;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10CC[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUnsigned64Library_LessThan) == 0x000008, "Wrong alignment on ModioUnsigned64Library_LessThan");
static_assert(sizeof(ModioUnsigned64Library_LessThan) == 0x000018, "Wrong size on ModioUnsigned64Library_LessThan");
static_assert(offsetof(ModioUnsigned64Library_LessThan, LHS) == 0x000000, "Member 'ModioUnsigned64Library_LessThan::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_LessThan, RHS) == 0x000008, "Member 'ModioUnsigned64Library_LessThan::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_LessThan, ReturnValue) == 0x000010, "Member 'ModioUnsigned64Library_LessThan::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.MakeFromComponents
// 0x0010 (0x0010 - 0x0000)
struct ModioUnsigned64Library_MakeFromComponents final
{
public:
	int32                                         High;                                              // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Low;                                               // 0x0004(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUnsigned64Library_MakeFromComponents) == 0x000008, "Wrong alignment on ModioUnsigned64Library_MakeFromComponents");
static_assert(sizeof(ModioUnsigned64Library_MakeFromComponents) == 0x000010, "Wrong size on ModioUnsigned64Library_MakeFromComponents");
static_assert(offsetof(ModioUnsigned64Library_MakeFromComponents, High) == 0x000000, "Member 'ModioUnsigned64Library_MakeFromComponents::High' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_MakeFromComponents, Low) == 0x000004, "Member 'ModioUnsigned64Library_MakeFromComponents::Low' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_MakeFromComponents, ReturnValue) == 0x000008, "Member 'ModioUnsigned64Library_MakeFromComponents::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.NotEqualTo
// 0x0018 (0x0018 - 0x0000)
struct ModioUnsigned64Library_NotEqualTo final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       RHS;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10CD[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUnsigned64Library_NotEqualTo) == 0x000008, "Wrong alignment on ModioUnsigned64Library_NotEqualTo");
static_assert(sizeof(ModioUnsigned64Library_NotEqualTo) == 0x000018, "Wrong size on ModioUnsigned64Library_NotEqualTo");
static_assert(offsetof(ModioUnsigned64Library_NotEqualTo, LHS) == 0x000000, "Member 'ModioUnsigned64Library_NotEqualTo::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_NotEqualTo, RHS) == 0x000008, "Member 'ModioUnsigned64Library_NotEqualTo::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_NotEqualTo, ReturnValue) == 0x000010, "Member 'ModioUnsigned64Library_NotEqualTo::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.Percentage_Unsigned64
// 0x0018 (0x0018 - 0x0000)
struct ModioUnsigned64Library_Percentage_Unsigned64 final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       RHS;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10CE[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ModioUnsigned64Library_Percentage_Unsigned64) == 0x000008, "Wrong alignment on ModioUnsigned64Library_Percentage_Unsigned64");
static_assert(sizeof(ModioUnsigned64Library_Percentage_Unsigned64) == 0x000018, "Wrong size on ModioUnsigned64Library_Percentage_Unsigned64");
static_assert(offsetof(ModioUnsigned64Library_Percentage_Unsigned64, LHS) == 0x000000, "Member 'ModioUnsigned64Library_Percentage_Unsigned64::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_Percentage_Unsigned64, RHS) == 0x000008, "Member 'ModioUnsigned64Library_Percentage_Unsigned64::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_Percentage_Unsigned64, ReturnValue) == 0x000010, "Member 'ModioUnsigned64Library_Percentage_Unsigned64::ReturnValue' has a wrong offset!");

// Function Modio.ModioUnsigned64Library.Subtract
// 0x0018 (0x0018 - 0x0000)
struct ModioUnsigned64Library_Subtract final
{
public:
	struct FModioUnsigned64                       LHS;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       RHS;                                               // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FModioUnsigned64                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ModioUnsigned64Library_Subtract) == 0x000008, "Wrong alignment on ModioUnsigned64Library_Subtract");
static_assert(sizeof(ModioUnsigned64Library_Subtract) == 0x000018, "Wrong size on ModioUnsigned64Library_Subtract");
static_assert(offsetof(ModioUnsigned64Library_Subtract, LHS) == 0x000000, "Member 'ModioUnsigned64Library_Subtract::LHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_Subtract, RHS) == 0x000008, "Member 'ModioUnsigned64Library_Subtract::RHS' has a wrong offset!");
static_assert(offsetof(ModioUnsigned64Library_Subtract, ReturnValue) == 0x000010, "Member 'ModioUnsigned64Library_Subtract::ReturnValue' has a wrong offset!");

}

