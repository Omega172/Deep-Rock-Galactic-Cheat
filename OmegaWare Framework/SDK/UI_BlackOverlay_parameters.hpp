#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BlackOverlay

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function UI_BlackOverlay.UI_BlackOverlay_C.ExecuteUbergraph_UI_BlackOverlay
// 0x0018 (0x0018 - 0x0000)
struct UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_fade;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_toSpaceRig;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Event_loadingImage;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay) == 0x000008, "Wrong alignment on UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay");
static_assert(sizeof(UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay) == 0x000018, "Wrong size on UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay");
static_assert(offsetof(UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay, EntryPoint) == 0x000000, "Member 'UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay, K2Node_Event_fade) == 0x000008, "Member 'UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay::K2Node_Event_fade' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay, K2Node_Event_toSpaceRig) == 0x00000C, "Member 'UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay::K2Node_Event_toSpaceRig' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay, K2Node_Event_loadingImage) == 0x000010, "Member 'UI_BlackOverlay_C_ExecuteUbergraph_UI_BlackOverlay::K2Node_Event_loadingImage' has a wrong offset!");

// Function UI_BlackOverlay.UI_BlackOverlay_C.SetFadeProgress
// 0x0010 (0x0010 - 0x0000)
struct UI_BlackOverlay_C_SetFadeProgress final
{
public:
	float                                         Param_Fade;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_ToSpaceRig;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Param_LoadingImage;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BlackOverlay_C_SetFadeProgress) == 0x000008, "Wrong alignment on UI_BlackOverlay_C_SetFadeProgress");
static_assert(sizeof(UI_BlackOverlay_C_SetFadeProgress) == 0x000010, "Wrong size on UI_BlackOverlay_C_SetFadeProgress");
static_assert(offsetof(UI_BlackOverlay_C_SetFadeProgress, Param_Fade) == 0x000000, "Member 'UI_BlackOverlay_C_SetFadeProgress::Param_Fade' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetFadeProgress, Param_ToSpaceRig) == 0x000004, "Member 'UI_BlackOverlay_C_SetFadeProgress::Param_ToSpaceRig' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetFadeProgress, Param_LoadingImage) == 0x000008, "Member 'UI_BlackOverlay_C_SetFadeProgress::Param_LoadingImage' has a wrong offset!");

// Function UI_BlackOverlay.UI_BlackOverlay_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BlackOverlay_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BlackOverlay_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BlackOverlay_C_PreConstruct");
static_assert(sizeof(UI_BlackOverlay_C_PreConstruct) == 0x000001, "Wrong size on UI_BlackOverlay_C_PreConstruct");
static_assert(offsetof(UI_BlackOverlay_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BlackOverlay_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BlackOverlay.UI_BlackOverlay_C.SetProgress
// 0x0078 (0x0078 - 0x0000)
struct UI_BlackOverlay_C_SetProgress final
{
public:
	float                                         InFade;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InToSpacerig;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               InLoadingImage;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C0E[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C0F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C10[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_BlackOverlay_C_SetProgress) == 0x000008, "Wrong alignment on UI_BlackOverlay_C_SetProgress");
static_assert(sizeof(UI_BlackOverlay_C_SetProgress) == 0x000078, "Wrong size on UI_BlackOverlay_C_SetProgress");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, InFade) == 0x000000, "Member 'UI_BlackOverlay_C_SetProgress::InFade' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, InToSpacerig) == 0x000004, "Member 'UI_BlackOverlay_C_SetProgress::InToSpacerig' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, InLoadingImage) == 0x000008, "Member 'UI_BlackOverlay_C_SetProgress::InLoadingImage' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, Temp_bool_Variable) == 0x000010, "Member 'UI_BlackOverlay_C_SetProgress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, Temp_byte_Variable) == 0x000011, "Member 'UI_BlackOverlay_C_SetProgress::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, Temp_byte_Variable_1) == 0x000012, "Member 'UI_BlackOverlay_C_SetProgress::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, CallFunc_MapRangeClamped_ReturnValue) == 0x000014, "Member 'UI_BlackOverlay_C_SetProgress::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'UI_BlackOverlay_C_SetProgress::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, CallFunc_GetRenderOpacity_ReturnValue) == 0x000028, "Member 'UI_BlackOverlay_C_SetProgress::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, K2Node_DynamicCast_AsTexture_2D) == 0x000030, "Member 'UI_BlackOverlay_C_SetProgress::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_BlackOverlay_C_SetProgress::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, K2Node_MakeStruct_LinearColor_1) == 0x00003C, "Member 'UI_BlackOverlay_C_SetProgress::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'UI_BlackOverlay_C_SetProgress::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'UI_BlackOverlay_C_SetProgress::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, CallFunc_FClamp_ReturnValue) == 0x000054, "Member 'UI_BlackOverlay_C_SetProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000058, "Member 'UI_BlackOverlay_C_SetProgress::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, K2Node_MakeStruct_LinearColor_2) == 0x00005C, "Member 'UI_BlackOverlay_C_SetProgress::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, CallFunc_FClamp_ReturnValue_1) == 0x00006C, "Member 'UI_BlackOverlay_C_SetProgress::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, K2Node_Select_Default) == 0x000070, "Member 'UI_BlackOverlay_C_SetProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'UI_BlackOverlay_C_SetProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BlackOverlay_C_SetProgress, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'UI_BlackOverlay_C_SetProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

