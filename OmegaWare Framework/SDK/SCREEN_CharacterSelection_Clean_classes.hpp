#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SCREEN_CharacterSelection_Clean

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SCREEN_CharacterSelection_Base_classes.hpp"
#include "FSD_structs.hpp"
#include "UMG_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass SCREEN_CharacterSelection_Clean.SCREEN_CharacterSelection_Clean_C
// 0x00B8 (0x0370 - 0x02B8)
class USCREEN_CharacterSelection_Clean_C final : public USCREEN_CharacterSelection_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_SCREEN_CharacterSelection_Clean_C;  // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNamedSlot*                             ButtonsGoHere;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharSelect_HeroSelect_Clean_C*         CharSelect_HeroSelect;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ClassDescription;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ButtonScalable2_C*               CloseButton;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_AdvancedLabel_C*                    Controller_Left;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_AdvancedLabel_C*                    Controller_Right;                                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Menu_SmallWindowWithHeader_C*    DescriptionWindow;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITEM_CharacterSelectMovie_C*           ITEM_CharacterSelectMovie;                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_Challenge_InfoBox_C*               ITM_Challenge_InfoBox;                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_DragRotateCharacter_C*             ITM_DragRotateCharacter;                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_LoadoutSelectorBar_C*              ITM_LoadoutSelectorBar;                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULobby_BarTop_Countdown_C*              Lobby_BarTop_Countdown;                            // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              PlatformSafeZone;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScreen_CharacterInfo_C*                Screen_CharacterInfo;                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SelectionBox_Active;                               // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_AdvancedLabel_C*                    SelectionBox_Text;                                 // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             CharacterSelected;                                 // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AFSDPlayerState*                        PlayerState;                                       // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoSelectedShouts;                                  // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          DoMovie;                                           // 0x0359(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AllowBack;                                         // 0x035A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD5[0x5];                                     // 0x035B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     InitialCharacterClassOnShow;                       // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBeingClosed;                                     // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OnCloseMenuHasBeenHandled;                         // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void CharacterSelected__DelegateSignature();
	void ExecuteUbergraph_SCREEN_CharacterSelection_Clean(int32 EntryPoint);
	void BndEvt__CharSelect_HeroSelect_K2Node_ComponentBoundEvent_1_OnCharacterSelected__DelegateSignature(class UPlayerCharacterID* Character);
	void BndEvt__CharSelect_HeroSelect_K2Node_ComponentBoundEvent_4_OnCharacterHovered__DelegateSignature(class UPlayerCharacterID* Character);
	void Show();
	void OnNewLoadout();
	void ReceiveCloseCommand();
	void BndEvt__CloseButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void StopMovie();
	void CreateMovie();
	void OnClosed();
	void OnShown();
	void ReceiveNewVisibility(ESlateVisibility NewVisibility);
	void UpdateCharacterDescription(class UPlayerCharacterID* CharacterClass);
	void PreConstruct(bool IsDesignTime);
	void OnSelectedCharacterChanged_Event(TSubclassOf<class APlayerCharacter> NewCharacter);
	void OnInputSourceChanged(EFSDInputSource InputSource);
	void BackPressed();
	void Construct();
	void OnSuccess_0D1BB19C4CA8D7117BC6A688077A0BDE();
	void OnFailure_0D1BB19C4CA8D7117BC6A688077A0BDE();
	class UPlayerCharacterID* GetSelectedClass();
	void OnCloseMenuReleased(bool* Handled);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void HighlightClassChallenges(TArray<class UObject*>& AssetReferences, bool ShouldHighlight, class USeasonChallenge* Challenge);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SCREEN_CharacterSelection_Clean_C">();
	}
	static class USCREEN_CharacterSelection_Clean_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCREEN_CharacterSelection_Clean_C>();
	}
};
static_assert(alignof(USCREEN_CharacterSelection_Clean_C) == 0x000008, "Wrong alignment on USCREEN_CharacterSelection_Clean_C");
static_assert(sizeof(USCREEN_CharacterSelection_Clean_C) == 0x000370, "Wrong size on USCREEN_CharacterSelection_Clean_C");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, UberGraphFrame_SCREEN_CharacterSelection_Clean_C) == 0x0002B8, "Member 'USCREEN_CharacterSelection_Clean_C::UberGraphFrame_SCREEN_CharacterSelection_Clean_C' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, ButtonsGoHere) == 0x0002C0, "Member 'USCREEN_CharacterSelection_Clean_C::ButtonsGoHere' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, CharSelect_HeroSelect) == 0x0002C8, "Member 'USCREEN_CharacterSelection_Clean_C::CharSelect_HeroSelect' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, ClassDescription) == 0x0002D0, "Member 'USCREEN_CharacterSelection_Clean_C::ClassDescription' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, CloseButton) == 0x0002D8, "Member 'USCREEN_CharacterSelection_Clean_C::CloseButton' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, Controller_Left) == 0x0002E0, "Member 'USCREEN_CharacterSelection_Clean_C::Controller_Left' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, Controller_Right) == 0x0002E8, "Member 'USCREEN_CharacterSelection_Clean_C::Controller_Right' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, DescriptionWindow) == 0x0002F0, "Member 'USCREEN_CharacterSelection_Clean_C::DescriptionWindow' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, ITEM_CharacterSelectMovie) == 0x0002F8, "Member 'USCREEN_CharacterSelection_Clean_C::ITEM_CharacterSelectMovie' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, ITM_Challenge_InfoBox) == 0x000300, "Member 'USCREEN_CharacterSelection_Clean_C::ITM_Challenge_InfoBox' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, ITM_DragRotateCharacter) == 0x000308, "Member 'USCREEN_CharacterSelection_Clean_C::ITM_DragRotateCharacter' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, ITM_LoadoutSelectorBar) == 0x000310, "Member 'USCREEN_CharacterSelection_Clean_C::ITM_LoadoutSelectorBar' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, Lobby_BarTop_Countdown) == 0x000318, "Member 'USCREEN_CharacterSelection_Clean_C::Lobby_BarTop_Countdown' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, PlatformSafeZone) == 0x000320, "Member 'USCREEN_CharacterSelection_Clean_C::PlatformSafeZone' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, Screen_CharacterInfo) == 0x000328, "Member 'USCREEN_CharacterSelection_Clean_C::Screen_CharacterInfo' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, SelectionBox_Active) == 0x000330, "Member 'USCREEN_CharacterSelection_Clean_C::SelectionBox_Active' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, SelectionBox_Text) == 0x000338, "Member 'USCREEN_CharacterSelection_Clean_C::SelectionBox_Text' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, CharacterSelected) == 0x000340, "Member 'USCREEN_CharacterSelection_Clean_C::CharacterSelected' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, PlayerState) == 0x000350, "Member 'USCREEN_CharacterSelection_Clean_C::PlayerState' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, DoSelectedShouts) == 0x000358, "Member 'USCREEN_CharacterSelection_Clean_C::DoSelectedShouts' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, DoMovie) == 0x000359, "Member 'USCREEN_CharacterSelection_Clean_C::DoMovie' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, AllowBack) == 0x00035A, "Member 'USCREEN_CharacterSelection_Clean_C::AllowBack' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, InitialCharacterClassOnShow) == 0x000360, "Member 'USCREEN_CharacterSelection_Clean_C::InitialCharacterClassOnShow' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, IsBeingClosed) == 0x000368, "Member 'USCREEN_CharacterSelection_Clean_C::IsBeingClosed' has a wrong offset!");
static_assert(offsetof(USCREEN_CharacterSelection_Clean_C, OnCloseMenuHasBeenHandled) == 0x000369, "Member 'USCREEN_CharacterSelection_Clean_C::OnCloseMenuHasBeenHandled' has a wrong offset!");

}

