#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Cookable_Crosshair

#include "Basic.hpp"


namespace CG::Params
{

// Function HUD_Cookable_Crosshair.HUD_Cookable_Crosshair_C.ExecuteUbergraph_HUD_Cookable_Crosshair
// 0x0008 (0x0008 - 0x0000)
struct HUD_Cookable_Crosshair_C_ExecuteUbergraph_HUD_Cookable_Crosshair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Progress;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Cookable_Crosshair_C_ExecuteUbergraph_HUD_Cookable_Crosshair) == 0x000004, "Wrong alignment on HUD_Cookable_Crosshair_C_ExecuteUbergraph_HUD_Cookable_Crosshair");
static_assert(sizeof(HUD_Cookable_Crosshair_C_ExecuteUbergraph_HUD_Cookable_Crosshair) == 0x000008, "Wrong size on HUD_Cookable_Crosshair_C_ExecuteUbergraph_HUD_Cookable_Crosshair");
static_assert(offsetof(HUD_Cookable_Crosshair_C_ExecuteUbergraph_HUD_Cookable_Crosshair, EntryPoint) == 0x000000, "Member 'HUD_Cookable_Crosshair_C_ExecuteUbergraph_HUD_Cookable_Crosshair::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_Cookable_Crosshair_C_ExecuteUbergraph_HUD_Cookable_Crosshair, K2Node_CustomEvent_Progress) == 0x000004, "Member 'HUD_Cookable_Crosshair_C_ExecuteUbergraph_HUD_Cookable_Crosshair::K2Node_CustomEvent_Progress' has a wrong offset!");

// Function HUD_Cookable_Crosshair.HUD_Cookable_Crosshair_C.UpdateCookTime
// 0x0004 (0x0004 - 0x0000)
struct HUD_Cookable_Crosshair_C_UpdateCookTime final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Cookable_Crosshair_C_UpdateCookTime) == 0x000004, "Wrong alignment on HUD_Cookable_Crosshair_C_UpdateCookTime");
static_assert(sizeof(HUD_Cookable_Crosshair_C_UpdateCookTime) == 0x000004, "Wrong size on HUD_Cookable_Crosshair_C_UpdateCookTime");
static_assert(offsetof(HUD_Cookable_Crosshair_C_UpdateCookTime, Progress) == 0x000000, "Member 'HUD_Cookable_Crosshair_C_UpdateCookTime::Progress' has a wrong offset!");

}

