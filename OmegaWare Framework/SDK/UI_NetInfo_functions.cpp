#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_NetInfo

#include "Basic.hpp"

#include "UI_NetInfo_classes.hpp"
#include "UI_NetInfo_parameters.hpp"


namespace CG
{

// Function UI_NetInfo.UI_NetInfo_C.ExecuteUbergraph_UI_NetInfo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_NetInfo_C::ExecuteUbergraph_UI_NetInfo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NetInfo_C", "ExecuteUbergraph_UI_NetInfo");

	Params::UI_NetInfo_C_ExecuteUbergraph_UI_NetInfo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_NetInfo.UI_NetInfo_C.OnNetInfoLevelChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_NetInfo_C::OnNetInfoLevelChanged(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NetInfo_C", "OnNetInfoLevelChanged");

	Params::UI_NetInfo_C_OnNetInfoLevelChanged Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_NetInfo.UI_NetInfo_C.SlowTick
// (BlueprintCallable, BlueprintEvent)

void UUI_NetInfo_C::SlowTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NetInfo_C", "SlowTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_NetInfo.UI_NetInfo_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_NetInfo_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NetInfo_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_NetInfo.UI_NetInfo_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_NetInfo_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NetInfo_C", "PreConstruct");

	Params::UI_NetInfo_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_NetInfo.UI_NetInfo_C.GetPlayerName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AFSDPlayerController*             PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UUI_NetInfo_C::GetPlayerName(class AFSDPlayerController* PlayerController, class FString* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NetInfo_C", "GetPlayerName");

	Params::UI_NetInfo_C_GetPlayerName Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function UI_NetInfo.UI_NetInfo_C.GetPktLossString
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Names                                                  (Parm, OutParm)
// class FText                             PktLossIn                                              (Parm, OutParm)
// class FText                             PktLossOut                                             (Parm, OutParm)
// class FText                             Ping                                                   (Parm, OutParm)
// class FText                             Jitter                                                 (Parm, OutParm)
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_NetInfo_C::GetPktLossString(class FText* Names, class FText* PktLossIn, class FText* PktLossOut, class FText* Ping, class FText* Jitter, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_NetInfo_C", "GetPktLossString");

	Params::UI_NetInfo_C_GetPktLossString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Names != nullptr)
		*Names = std::move(Parms.Names);

	if (PktLossIn != nullptr)
		*PktLossIn = std::move(Parms.PktLossIn);

	if (PktLossOut != nullptr)
		*PktLossOut = std::move(Parms.PktLossOut);

	if (Ping != nullptr)
		*Ping = std::move(Parms.Ping);

	if (Jitter != nullptr)
		*Jitter = std::move(Parms.Jitter);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}

}

