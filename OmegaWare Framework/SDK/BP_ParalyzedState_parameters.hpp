#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ParalyzedState

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace CG::Params
{

// Function BP_ParalyzedState.BP_ParalyzedState_C.ExecuteUbergraph_BP_ParalyzedState
// 0x016C (0x016C - 0x0000)
struct BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32C2[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x00E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState) == 0x000004, "Wrong alignment on BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState");
static_assert(sizeof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState) == 0x00016C, "Wrong size on BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, EntryPoint) == 0x000000, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_IsLocallyControlled_ReturnValue) == 0x000004, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000005, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000014, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_BreakRotator_Roll_1) == 0x00002C, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_BreakRotator_Pitch_1) == 0x000030, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_BreakRotator_Yaw_1) == 0x000034, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_BreakRotator_Roll_2) == 0x000044, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_BreakRotator_Pitch_2) == 0x000048, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_BreakRotator_Yaw_2) == 0x00004C, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000050, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_MakeRotator_ReturnValue_1) == 0x0000D8, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0000E4, "Member 'BP_ParalyzedState_C_ExecuteUbergraph_BP_ParalyzedState::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

}

