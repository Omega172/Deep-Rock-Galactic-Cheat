#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Count_Randoms

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function BP_Count_Randoms.BP_Count_Randoms_C.ExecuteUbergraph_BP_Count_Randoms
// 0x0080 (0x0080 - 0x0000)
struct BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328E[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_328F[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3290[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3291[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Count_Randoms_Widget_C*             K2Node_DynamicCast_AsBP_Count_Randoms_Widget;      // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms) == 0x000008, "Wrong alignment on BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms");
static_assert(sizeof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms) == 0x000080, "Wrong size on BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, EntryPoint) == 0x000000, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_GetProceduralSetup_ReturnValue) == 0x000008, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_GetProceduralSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_BreakVector_Y) == 0x000024, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_BreakVector_X_1) == 0x00004C, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_BreakVector_Z_1) == 0x000054, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000060, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000068, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, K2Node_DynamicCast_AsBP_Count_Randoms_Widget) == 0x000070, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::K2Node_DynamicCast_AsBP_Count_Randoms_Widget' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_Count_Randoms_C_ExecuteUbergraph_BP_Count_Randoms::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Count_Randoms.BP_Count_Randoms_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Count_Randoms_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Count_Randoms_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Count_Randoms_C_ReceiveTick");
static_assert(sizeof(BP_Count_Randoms_C_ReceiveTick) == 0x000004, "Wrong size on BP_Count_Randoms_C_ReceiveTick");
static_assert(offsetof(BP_Count_Randoms_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Count_Randoms_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

