#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Flashlight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function HUD_Flashlight.HUD_Flashlight_C.ExecuteUbergraph_HUD_Flashlight
// 0x0058 (0x0058 - 0x0000)
struct HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3641[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsOn)>                    K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsOn;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3642[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight) == 0x000008, "Wrong alignment on HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight");
static_assert(sizeof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight) == 0x000058, "Wrong size on HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight");
static_assert(offsetof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight, EntryPoint) == 0x000000, "Member 'HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight, Temp_bool_Variable) == 0x000004, "Member 'HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight, K2Node_Event_IsDesignTime) == 0x000018, "Member 'HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight, K2Node_CustomEvent_IsOn) == 0x000019, "Member 'HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight::K2Node_CustomEvent_IsOn' has a wrong offset!");
static_assert(offsetof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight, K2Node_Select_Default) == 0x000020, "Member 'HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight, CallFunc_MenuColors_OutputColor) == 0x000028, "Member 'HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight, CallFunc_MenuColors_OutputColor_1) == 0x000038, "Member 'HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight, K2Node_MakeStruct_LinearColor) == 0x000048, "Member 'HUD_Flashlight_C_ExecuteUbergraph_HUD_Flashlight::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function HUD_Flashlight.HUD_Flashlight_C.OnHeadlightOnChanged
// 0x0001 (0x0001 - 0x0000)
struct HUD_Flashlight_C_OnHeadlightOnChanged final
{
public:
	bool                                          Param_IsOn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Flashlight_C_OnHeadlightOnChanged) == 0x000001, "Wrong alignment on HUD_Flashlight_C_OnHeadlightOnChanged");
static_assert(sizeof(HUD_Flashlight_C_OnHeadlightOnChanged) == 0x000001, "Wrong size on HUD_Flashlight_C_OnHeadlightOnChanged");
static_assert(offsetof(HUD_Flashlight_C_OnHeadlightOnChanged, Param_IsOn) == 0x000000, "Member 'HUD_Flashlight_C_OnHeadlightOnChanged::Param_IsOn' has a wrong offset!");

// Function HUD_Flashlight.HUD_Flashlight_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_Flashlight_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Flashlight_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_Flashlight_C_PreConstruct");
static_assert(sizeof(HUD_Flashlight_C_PreConstruct) == 0x000001, "Wrong size on HUD_Flashlight_C_PreConstruct");
static_assert(offsetof(HUD_Flashlight_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_Flashlight_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

