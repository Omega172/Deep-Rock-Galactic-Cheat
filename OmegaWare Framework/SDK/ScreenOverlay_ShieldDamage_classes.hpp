#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScreenOverlay_ShieldDamage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ScreenOverlay_ShieldDamage.ScreenOverlay_ShieldDamage_C
// 0x0040 (0x02A0 - 0x0260)
class UScreenOverlay_ShieldDamage_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 SplatImage;                                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           StartColor;                                        // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       Player;                                            // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ScreenOverlay_ShieldDamage(int32 EntryPoint);
	void OnCameraModeChanged(ECharacterCameraMode NewCameraMode, ECharacterCameraMode OldCameraMode);
	void End_Splat();
	void OnCharacterStateChanged(ECharacterState NewState);
	void Construct();
	void Begin_Splat(float Param_Duration, const struct FLinearColor& Param_Color);
	void OnArmorDamaged(float Amount);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ScreenOverlay_ShieldDamage_C">();
	}
	static class UScreenOverlay_ShieldDamage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScreenOverlay_ShieldDamage_C>();
	}
};
static_assert(alignof(UScreenOverlay_ShieldDamage_C) == 0x000008, "Wrong alignment on UScreenOverlay_ShieldDamage_C");
static_assert(sizeof(UScreenOverlay_ShieldDamage_C) == 0x0002A0, "Wrong size on UScreenOverlay_ShieldDamage_C");
static_assert(offsetof(UScreenOverlay_ShieldDamage_C, UberGraphFrame) == 0x000260, "Member 'UScreenOverlay_ShieldDamage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_ShieldDamage_C, SplatImage) == 0x000268, "Member 'UScreenOverlay_ShieldDamage_C::SplatImage' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_ShieldDamage_C, Duration) == 0x000270, "Member 'UScreenOverlay_ShieldDamage_C::Duration' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_ShieldDamage_C, Time) == 0x000274, "Member 'UScreenOverlay_ShieldDamage_C::Time' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_ShieldDamage_C, Color) == 0x000278, "Member 'UScreenOverlay_ShieldDamage_C::Color' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_ShieldDamage_C, StartColor) == 0x000288, "Member 'UScreenOverlay_ShieldDamage_C::StartColor' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_ShieldDamage_C, Player) == 0x000298, "Member 'UScreenOverlay_ShieldDamage_C::Player' has a wrong offset!");

}

