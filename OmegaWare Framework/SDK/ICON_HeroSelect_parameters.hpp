#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ICON_HeroSelect

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnCharacterSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ICON_HeroSelect_C_OnCharacterSelected__DelegateSignature final
{
public:
	class UPlayerCharacterID*                     Param_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_OnCharacterSelected__DelegateSignature) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnCharacterSelected__DelegateSignature");
static_assert(sizeof(ICON_HeroSelect_C_OnCharacterSelected__DelegateSignature) == 0x000008, "Wrong size on ICON_HeroSelect_C_OnCharacterSelected__DelegateSignature");
static_assert(offsetof(ICON_HeroSelect_C_OnCharacterSelected__DelegateSignature, Param_Character) == 0x000000, "Member 'ICON_HeroSelect_C_OnCharacterSelected__DelegateSignature::Param_Character' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ICON_HeroSelect_C_OnHovered__DelegateSignature final
{
public:
	class UPlayerCharacterID*                     Param_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnHovered__DelegateSignature");
static_assert(sizeof(ICON_HeroSelect_C_OnHovered__DelegateSignature) == 0x000008, "Wrong size on ICON_HeroSelect_C_OnHovered__DelegateSignature");
static_assert(offsetof(ICON_HeroSelect_C_OnHovered__DelegateSignature, Param_Character) == 0x000000, "Member 'ICON_HeroSelect_C_OnHovered__DelegateSignature::Param_Character' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnRetirementHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ICON_HeroSelect_C_OnRetirementHovered__DelegateSignature final
{
public:
	class UPlayerCharacterID*                     Param_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_OnRetirementHovered__DelegateSignature) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnRetirementHovered__DelegateSignature");
static_assert(sizeof(ICON_HeroSelect_C_OnRetirementHovered__DelegateSignature) == 0x000008, "Wrong size on ICON_HeroSelect_C_OnRetirementHovered__DelegateSignature");
static_assert(offsetof(ICON_HeroSelect_C_OnRetirementHovered__DelegateSignature, Param_Character) == 0x000000, "Member 'ICON_HeroSelect_C_OnRetirementHovered__DelegateSignature::Param_Character' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnRetirementUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ICON_HeroSelect_C_OnRetirementUnhovered__DelegateSignature final
{
public:
	class UPlayerCharacterID*                     Param_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_OnRetirementUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnRetirementUnhovered__DelegateSignature");
static_assert(sizeof(ICON_HeroSelect_C_OnRetirementUnhovered__DelegateSignature) == 0x000008, "Wrong size on ICON_HeroSelect_C_OnRetirementUnhovered__DelegateSignature");
static_assert(offsetof(ICON_HeroSelect_C_OnRetirementUnhovered__DelegateSignature, Param_Character) == 0x000000, "Member 'ICON_HeroSelect_C_OnRetirementUnhovered__DelegateSignature::Param_Character' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnRetireClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ICON_HeroSelect_C_OnRetireClicked__DelegateSignature final
{
public:
	class UPlayerCharacterID*                     Param_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_OnRetireClicked__DelegateSignature) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnRetireClicked__DelegateSignature");
static_assert(sizeof(ICON_HeroSelect_C_OnRetireClicked__DelegateSignature) == 0x000008, "Wrong size on ICON_HeroSelect_C_OnRetireClicked__DelegateSignature");
static_assert(offsetof(ICON_HeroSelect_C_OnRetireClicked__DelegateSignature, Param_Character) == 0x000000, "Member 'ICON_HeroSelect_C_OnRetireClicked__DelegateSignature::Param_Character' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ICON_HeroSelect_C_OnUnhovered__DelegateSignature final
{
public:
	class UPlayerCharacterID*                     Param_CharacterID;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnUnhovered__DelegateSignature");
static_assert(sizeof(ICON_HeroSelect_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on ICON_HeroSelect_C_OnUnhovered__DelegateSignature");
static_assert(offsetof(ICON_HeroSelect_C_OnUnhovered__DelegateSignature, Param_CharacterID) == 0x000000, "Member 'ICON_HeroSelect_C_OnUnhovered__DelegateSignature::Param_CharacterID' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.ExecuteUbergraph_ICON_HeroSelect
// 0x02A8 (0x02A8 - 0x0000)
struct ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFSDPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399D[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class APlayerCharacter> NewCharacter)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x0048(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0080(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00F0(0x0070)(ConstParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class APlayerCharacter>           K2Node_CustomEvent_NewCharacter;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_DynamicCast_AsFSDPlayer_State;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399E[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        K2Node_CustomEvent_PlayerState;                    // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     K2Node_CustomEvent_Character;                      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399F[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x019C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x01AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x01BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_3;                 // 0x01CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A0[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A1[0x3];                                     // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01F0(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A2[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_ToolTip_C*                       CallFunc_CreateBasicToolTip_ToolTipWidget;         // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A3[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        K2Node_DynamicCast_AsFSDPlayer_State_1;            // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A4[0x6];                                     // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue;       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A5[0x2];                                     // 0x0272(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A6[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InHovered;                      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A7[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_Icon;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEligibleForPromotion_ReturnValue;       // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect");
static_assert(sizeof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect) == 0x0002A8, "Wrong size on ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, EntryPoint) == 0x000000, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, Temp_bool_Variable) == 0x000004, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, Temp_float_Variable) == 0x000018, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, Temp_float_Variable_1) == 0x00001C, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, Temp_bool_Variable_1) == 0x000020, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, Temp_int_Variable) == 0x000024, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, Temp_int_Variable_1) == 0x000028, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_Event_MyGeometry_1) == 0x000048, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_Event_MouseEvent_1) == 0x000080, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_Event_MouseEvent) == 0x0000F0, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_GetOwningPlayer_ReturnValue) == 0x000160, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_CustomEvent_NewCharacter) == 0x000168, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_CustomEvent_NewCharacter' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_DynamicCast_AsFSDPlayer_State) == 0x000170, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_DynamicCast_AsFSDPlayer_State' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_CustomEvent_PlayerState) == 0x000180, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_GetFSDPlayerState_ReturnValue) == 0x000188, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_GetFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_CustomEvent_Character) == 0x000190, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_Event_IsDesignTime) == 0x000198, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_MenuColors_OutputColor) == 0x00019C, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_MenuColors_OutputColor_1) == 0x0001AC, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_MenuColors_OutputColor_2) == 0x0001BC, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_MenuColors_OutputColor_3) == 0x0001CC, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_MenuColors_OutputColor_3' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_GetGameState_ReturnValue) == 0x0001E0, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_Less_IntInt_ReturnValue) == 0x0001EC, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_Event_MyGeometry) == 0x0001F0, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_Event_InDeltaTime) == 0x000228, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_CreateBasicToolTip_ToolTipWidget) == 0x000230, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_CreateBasicToolTip_ToolTipWidget' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_GetFSDGameState_ReturnValue) == 0x000238, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000240, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_Array_Get_Item) == 0x000248, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_Array_Length_ReturnValue_1) == 0x000250, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_DynamicCast_AsFSDPlayer_State_1) == 0x000258, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_DynamicCast_AsFSDPlayer_State_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_DynamicCast_bSuccess_1) == 0x000260, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_Less_IntInt_ReturnValue_1) == 0x000261, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_GetSelectedCharacterID_ReturnValue) == 0x000268, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_GetSelectedCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000270, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000271, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_Select_Default) == 0x000274, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_BooleanAND_ReturnValue) == 0x000278, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_Select_Default_1) == 0x00027C, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_CustomEvent_InHovered) == 0x000280, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_CustomEvent_InHovered' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_CustomEvent_Icon) == 0x000288, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, K2Node_CustomEvent_Color) == 0x000290, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_IsEligibleForPromotion_ReturnValue) == 0x0002A0, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_IsEligibleForPromotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_SelectVisibility_IsVisible) == 0x0002A1, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_SelectVisibility_VisibilityChanged) == 0x0002A2, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect, CallFunc_SelectVisibility_New_Visibility) == 0x0002A3, "Member 'ICON_HeroSelect_C_ExecuteUbergraph_ICON_HeroSelect::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.SetChallengeIcon
// 0x0020 (0x0020 - 0x0000)
struct ICON_HeroSelect_C_SetChallengeIcon final
{
public:
	bool                                          InHovered;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_SetChallengeIcon) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_SetChallengeIcon");
static_assert(sizeof(ICON_HeroSelect_C_SetChallengeIcon) == 0x000020, "Wrong size on ICON_HeroSelect_C_SetChallengeIcon");
static_assert(offsetof(ICON_HeroSelect_C_SetChallengeIcon, InHovered) == 0x000000, "Member 'ICON_HeroSelect_C_SetChallengeIcon::InHovered' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_SetChallengeIcon, Icon) == 0x000008, "Member 'ICON_HeroSelect_C_SetChallengeIcon::Icon' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_SetChallengeIcon, Color) == 0x000010, "Member 'ICON_HeroSelect_C_SetChallengeIcon::Color' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.Tick
// 0x003C (0x003C - 0x0000)
struct ICON_HeroSelect_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_Tick) == 0x000004, "Wrong alignment on ICON_HeroSelect_C_Tick");
static_assert(sizeof(ICON_HeroSelect_C_Tick) == 0x00003C, "Wrong size on ICON_HeroSelect_C_Tick");
static_assert(offsetof(ICON_HeroSelect_C_Tick, MyGeometry) == 0x000000, "Member 'ICON_HeroSelect_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_Tick, InDeltaTime) == 0x000038, "Member 'ICON_HeroSelect_C_Tick::InDeltaTime' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ICON_HeroSelect_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ICON_HeroSelect_C_PreConstruct) == 0x000001, "Wrong alignment on ICON_HeroSelect_C_PreConstruct");
static_assert(sizeof(ICON_HeroSelect_C_PreConstruct) == 0x000001, "Wrong size on ICON_HeroSelect_C_PreConstruct");
static_assert(offsetof(ICON_HeroSelect_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ICON_HeroSelect_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.Init
// 0x0008 (0x0008 - 0x0000)
struct ICON_HeroSelect_C_Init final
{
public:
	class UPlayerCharacterID*                     Param_Character;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_Init) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_Init");
static_assert(sizeof(ICON_HeroSelect_C_Init) == 0x000008, "Wrong size on ICON_HeroSelect_C_Init");
static_assert(offsetof(ICON_HeroSelect_C_Init, Param_Character) == 0x000000, "Member 'ICON_HeroSelect_C_Init::Param_Character' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnCharacterStatsChanged_Event
// 0x0008 (0x0008 - 0x0000)
struct ICON_HeroSelect_C_OnCharacterStatsChanged_Event final
{
public:
	class AFSDPlayerState*                        Param_PlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_OnCharacterStatsChanged_Event) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnCharacterStatsChanged_Event");
static_assert(sizeof(ICON_HeroSelect_C_OnCharacterStatsChanged_Event) == 0x000008, "Wrong size on ICON_HeroSelect_C_OnCharacterStatsChanged_Event");
static_assert(offsetof(ICON_HeroSelect_C_OnCharacterStatsChanged_Event, Param_PlayerState) == 0x000000, "Member 'ICON_HeroSelect_C_OnCharacterStatsChanged_Event::Param_PlayerState' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.SelectedCharacterChanged
// 0x0008 (0x0008 - 0x0000)
struct ICON_HeroSelect_C_SelectedCharacterChanged final
{
public:
	TSubclassOf<class APlayerCharacter>           NewCharacter;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_SelectedCharacterChanged) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_SelectedCharacterChanged");
static_assert(sizeof(ICON_HeroSelect_C_SelectedCharacterChanged) == 0x000008, "Wrong size on ICON_HeroSelect_C_SelectedCharacterChanged");
static_assert(offsetof(ICON_HeroSelect_C_SelectedCharacterChanged, NewCharacter) == 0x000000, "Member 'ICON_HeroSelect_C_SelectedCharacterChanged::NewCharacter' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct ICON_HeroSelect_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ICON_HeroSelect_C_OnMouseLeave) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnMouseLeave");
static_assert(sizeof(ICON_HeroSelect_C_OnMouseLeave) == 0x000070, "Wrong size on ICON_HeroSelect_C_OnMouseLeave");
static_assert(offsetof(ICON_HeroSelect_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'ICON_HeroSelect_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct ICON_HeroSelect_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ICON_HeroSelect_C_OnMouseEnter) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnMouseEnter");
static_assert(sizeof(ICON_HeroSelect_C_OnMouseEnter) == 0x0000A8, "Wrong size on ICON_HeroSelect_C_OnMouseEnter");
static_assert(offsetof(ICON_HeroSelect_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'ICON_HeroSelect_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'ICON_HeroSelect_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.SetCharacterClass
// 0x0050 (0x0050 - 0x0000)
struct ICON_HeroSelect_C_SetCharacterClass final
{
public:
	class UPlayerCharacterID*                     Param_Class;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterData*                   CallFunc_GetCharacterData_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetIcon_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetName_ReturnValue;                      // 0x0018(0x0018)(ConstParm)
	int32                                         CallFunc_GetHeroLevel_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A9[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
};
static_assert(alignof(ICON_HeroSelect_C_SetCharacterClass) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_SetCharacterClass");
static_assert(sizeof(ICON_HeroSelect_C_SetCharacterClass) == 0x000050, "Wrong size on ICON_HeroSelect_C_SetCharacterClass");
static_assert(offsetof(ICON_HeroSelect_C_SetCharacterClass, Param_Class) == 0x000000, "Member 'ICON_HeroSelect_C_SetCharacterClass::Param_Class' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_SetCharacterClass, CallFunc_GetCharacterData_ReturnValue) == 0x000008, "Member 'ICON_HeroSelect_C_SetCharacterClass::CallFunc_GetCharacterData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_SetCharacterClass, CallFunc_GetIcon_ReturnValue) == 0x000010, "Member 'ICON_HeroSelect_C_SetCharacterClass::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_SetCharacterClass, CallFunc_GetName_ReturnValue) == 0x000018, "Member 'ICON_HeroSelect_C_SetCharacterClass::CallFunc_GetName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_SetCharacterClass, CallFunc_GetHeroLevel_ReturnValue) == 0x000030, "Member 'ICON_HeroSelect_C_SetCharacterClass::CallFunc_GetHeroLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_SetCharacterClass, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'ICON_HeroSelect_C_SetCharacterClass::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.IsSelected
// 0x0018 (0x0018 - 0x0000)
struct ICON_HeroSelect_C_IsSelected final
{
public:
	bool                                          Param_IsSelected;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_GetSelectedClass_DesiredCharacterClass;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ICON_HeroSelect_C_IsSelected) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_IsSelected");
static_assert(sizeof(ICON_HeroSelect_C_IsSelected) == 0x000018, "Wrong size on ICON_HeroSelect_C_IsSelected");
static_assert(offsetof(ICON_HeroSelect_C_IsSelected, Param_IsSelected) == 0x000000, "Member 'ICON_HeroSelect_C_IsSelected::Param_IsSelected' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_IsSelected, CallFunc_GetSelectedClass_DesiredCharacterClass) == 0x000008, "Member 'ICON_HeroSelect_C_IsSelected::CallFunc_GetSelectedClass_DesiredCharacterClass' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_IsSelected, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'ICON_HeroSelect_C_IsSelected::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_IsSelected, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'ICON_HeroSelect_C_IsSelected::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_IsSelected, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'ICON_HeroSelect_C_IsSelected::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_IsSelected, CallFunc_BooleanAND_ReturnValue_1) == 0x000013, "Member 'ICON_HeroSelect_C_IsSelected::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.UpdateSelected
// 0x0024 (0x0024 - 0x0000)
struct ICON_HeroSelect_C_UpdateSelected final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AC[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelected_IsSelected;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelected_IsSelected_1;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AD[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_UpdateSelected) == 0x000004, "Wrong alignment on ICON_HeroSelect_C_UpdateSelected");
static_assert(sizeof(ICON_HeroSelect_C_UpdateSelected) == 0x000024, "Wrong size on ICON_HeroSelect_C_UpdateSelected");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, Temp_bool_Variable) == 0x000000, "Member 'ICON_HeroSelect_C_UpdateSelected::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, Temp_float_Variable) == 0x000004, "Member 'ICON_HeroSelect_C_UpdateSelected::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, Temp_float_Variable_1) == 0x000008, "Member 'ICON_HeroSelect_C_UpdateSelected::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, Temp_bool_Variable_1) == 0x00000C, "Member 'ICON_HeroSelect_C_UpdateSelected::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, Temp_float_Variable_2) == 0x000010, "Member 'ICON_HeroSelect_C_UpdateSelected::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, Temp_float_Variable_3) == 0x000014, "Member 'ICON_HeroSelect_C_UpdateSelected::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, K2Node_Select_Default) == 0x000018, "Member 'ICON_HeroSelect_C_UpdateSelected::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, CallFunc_IsSelected_IsSelected) == 0x00001C, "Member 'ICON_HeroSelect_C_UpdateSelected::CallFunc_IsSelected_IsSelected' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, CallFunc_IsSelected_IsSelected_1) == 0x00001D, "Member 'ICON_HeroSelect_C_UpdateSelected::CallFunc_IsSelected_IsSelected_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_UpdateSelected, K2Node_Select_Default_1) == 0x000020, "Member 'ICON_HeroSelect_C_UpdateSelected::K2Node_Select_Default_1' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.SetScale
// 0x000C (0x000C - 0x0000)
struct ICON_HeroSelect_C_SetScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_SetScale) == 0x000004, "Wrong alignment on ICON_HeroSelect_C_SetScale");
static_assert(sizeof(ICON_HeroSelect_C_SetScale) == 0x00000C, "Wrong size on ICON_HeroSelect_C_SetScale");
static_assert(offsetof(ICON_HeroSelect_C_SetScale, Scale) == 0x000000, "Member 'ICON_HeroSelect_C_SetScale::Scale' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_SetScale, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'ICON_HeroSelect_C_SetScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.OnMouseButtonUp
// 0x0218 (0x0218 - 0x0000)
struct ICON_HeroSelect_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(ICON_HeroSelect_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_OnMouseButtonUp");
static_assert(sizeof(ICON_HeroSelect_C_OnMouseButtonUp) == 0x000218, "Wrong size on ICON_HeroSelect_C_OnMouseButtonUp");
static_assert(offsetof(ICON_HeroSelect_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'ICON_HeroSelect_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'ICON_HeroSelect_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'ICON_HeroSelect_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'ICON_HeroSelect_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.GetSelectedClass
// 0x0018 (0x0018 - 0x0000)
struct ICON_HeroSelect_C_GetSelectedClass final
{
public:
	class UPlayerCharacterID*                     DesiredCharacterClass;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetFSDPlayerState_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ICON_HeroSelect_C_GetSelectedClass) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_GetSelectedClass");
static_assert(sizeof(ICON_HeroSelect_C_GetSelectedClass) == 0x000018, "Wrong size on ICON_HeroSelect_C_GetSelectedClass");
static_assert(offsetof(ICON_HeroSelect_C_GetSelectedClass, DesiredCharacterClass) == 0x000000, "Member 'ICON_HeroSelect_C_GetSelectedClass::DesiredCharacterClass' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_GetSelectedClass, CallFunc_GetFSDPlayerState_ReturnValue) == 0x000008, "Member 'ICON_HeroSelect_C_GetSelectedClass::CallFunc_GetFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_GetSelectedClass, CallFunc_GetSelectedCharacterID_ReturnValue) == 0x000010, "Member 'ICON_HeroSelect_C_GetSelectedClass::CallFunc_GetSelectedCharacterID_ReturnValue' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.IsEligibleForPromotion
// 0x0018 (0x0018 - 0x0000)
struct ICON_HeroSelect_C_IsEligibleForPromotion final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39AE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCharacterCompletedRetirementCampaign_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ICON_HeroSelect_C_IsEligibleForPromotion) == 0x000008, "Wrong alignment on ICON_HeroSelect_C_IsEligibleForPromotion");
static_assert(sizeof(ICON_HeroSelect_C_IsEligibleForPromotion) == 0x000018, "Wrong size on ICON_HeroSelect_C_IsEligibleForPromotion");
static_assert(offsetof(ICON_HeroSelect_C_IsEligibleForPromotion, ReturnValue) == 0x000000, "Member 'ICON_HeroSelect_C_IsEligibleForPromotion::ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_IsEligibleForPromotion, CallFunc_GetFSDSaveGame_ReturnValue) == 0x000008, "Member 'ICON_HeroSelect_C_IsEligibleForPromotion::CallFunc_GetFSDSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_IsEligibleForPromotion, CallFunc_HasCharacterCompletedRetirementCampaign_ReturnValue) == 0x000010, "Member 'ICON_HeroSelect_C_IsEligibleForPromotion::CallFunc_HasCharacterCompletedRetirementCampaign_ReturnValue' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.InternalUpdateHovered
// 0x0006 (0x0006 - 0x0000)
struct ICON_HeroSelect_C_InternalUpdateHovered final
{
public:
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateBool_ValueChanged;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateBool_OutValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ICON_HeroSelect_C_InternalUpdateHovered) == 0x000001, "Wrong alignment on ICON_HeroSelect_C_InternalUpdateHovered");
static_assert(sizeof(ICON_HeroSelect_C_InternalUpdateHovered) == 0x000006, "Wrong size on ICON_HeroSelect_C_InternalUpdateHovered");
static_assert(offsetof(ICON_HeroSelect_C_InternalUpdateHovered, CallFunc_IsHovered_ReturnValue) == 0x000000, "Member 'ICON_HeroSelect_C_InternalUpdateHovered::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_InternalUpdateHovered, CallFunc_IsHovered_ReturnValue_1) == 0x000001, "Member 'ICON_HeroSelect_C_InternalUpdateHovered::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_InternalUpdateHovered, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'ICON_HeroSelect_C_InternalUpdateHovered::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_InternalUpdateHovered, CallFunc_UpdateBool_ValueChanged) == 0x000003, "Member 'ICON_HeroSelect_C_InternalUpdateHovered::CallFunc_UpdateBool_ValueChanged' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_InternalUpdateHovered, CallFunc_UpdateBool_OutValue) == 0x000004, "Member 'ICON_HeroSelect_C_InternalUpdateHovered::CallFunc_UpdateBool_OutValue' has a wrong offset!");
static_assert(offsetof(ICON_HeroSelect_C_InternalUpdateHovered, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'ICON_HeroSelect_C_InternalUpdateHovered::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ICON_HeroSelect.ICON_HeroSelect_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct ICON_HeroSelect_C_IsInteractable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ICON_HeroSelect_C_IsInteractable) == 0x000001, "Wrong alignment on ICON_HeroSelect_C_IsInteractable");
static_assert(sizeof(ICON_HeroSelect_C_IsInteractable) == 0x000001, "Wrong size on ICON_HeroSelect_C_IsInteractable");
static_assert(offsetof(ICON_HeroSelect_C_IsInteractable, ReturnValue) == 0x000000, "Member 'ICON_HeroSelect_C_IsInteractable::ReturnValue' has a wrong offset!");

}

