#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_BasicTutorialWindow

#include "Basic.hpp"

#include "ITM_BasicTutorialWindow_classes.hpp"
#include "ITM_BasicTutorialWindow_parameters.hpp"


namespace CG
{

// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.CompleteAnimationFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UITM_BasicTutorialWindow_C::CompleteAnimationFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "CompleteAnimationFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.RemoveAnimationFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UITM_BasicTutorialWindow_C::RemoveAnimationFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "RemoveAnimationFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.ExecuteUbergraph_ITM_BasicTutorialWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_BasicTutorialWindow_C::ExecuteUbergraph_ITM_BasicTutorialWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "ExecuteUbergraph_ITM_BasicTutorialWindow");

	Params::ITM_BasicTutorialWindow_C_ExecuteUbergraph_ITM_BasicTutorialWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UITM_BasicTutorialWindow_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.SetTaskCounter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Counter                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Denominator                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_BasicTutorialWindow_C::SetTaskCounter(int32 Counter, int32 Denominator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "SetTaskCounter");

	Params::ITM_BasicTutorialWindow_C_SetTaskCounter Parms{};

	Parms.Counter = Counter;
	Parms.Denominator = Denominator;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.PlayTaskProgress
// (BlueprintCallable, BlueprintEvent)

void UITM_BasicTutorialWindow_C::PlayTaskProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "PlayTaskProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.SetImage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITM_BasicTutorialWindow_C::SetImage(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "SetImage");

	Params::ITM_BasicTutorialWindow_C_SetImage Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.CompleteAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UITM_BasicTutorialWindow_C::CompleteAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "CompleteAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.PlayComplete
// (BlueprintCallable, BlueprintEvent)

void UITM_BasicTutorialWindow_C::PlayComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "PlayComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.PlayShow
// (BlueprintCallable, BlueprintEvent)

void UITM_BasicTutorialWindow_C::PlayShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "PlayShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.PlayRemove
// (BlueprintCallable, BlueprintEvent)

void UITM_BasicTutorialWindow_C::PlayRemove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "PlayRemove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_BasicTutorialWindow.ITM_BasicTutorialWindow_C.SetText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Header                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Param_MainText                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Param_TaskText                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void UITM_BasicTutorialWindow_C::SetText(const class FText& Header, const class FText& Param_MainText, const class FText& Param_TaskText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_BasicTutorialWindow_C", "SetText");

	Params::ITM_BasicTutorialWindow_C_SetText Parms{};

	Parms.Header = std::move(Header);
	Parms.Param_MainText = std::move(Param_MainText);
	Parms.Param_TaskText = std::move(Param_TaskText);

	UObject::ProcessEvent(Func, &Parms);
}

}

