#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DE_UnderhillDeluxe

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// BlueprintGeneratedClass DE_UnderhillDeluxe.DE_UnderhillDeluxe_C
// 0x0048 (0x0108 - 0x00C0)
class UDE_UnderhillDeluxe_C final : public UDrinkEffectComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         TargetScale;                                       // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C96[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       Character;                                         // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartScale;                                        // 0x00D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentScale;                                      // 0x00E0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         Scale_Check_Cooldown;                              // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsScalingActive;                                   // 0x00E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C97[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Previous_Progress;                                 // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartCameraOffset;                                 // 0x00F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetCameraOffset;                                // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentCameraOffset;                               // 0x00F8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          EffectEnabled;                                     // 0x00FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C98[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OriginalPitchValue;                                // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DE_UnderhillDeluxe(int32 EntryPoint);
	void Reset_Voice();
	void Handle_Scaling(float DeltaTime);
	void OnStopEffect();
	void OnStartEffect(class APlayerCharacter* Param_Character);
	void ReceiveTick(float DeltaSeconds);
	void TraceForScaledCollision(bool* IsNextScaleColliding);
	void OnRep_CurrentScale();
	void OnRep_CurrentCameraOffset();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DE_UnderhillDeluxe_C">();
	}
	static class UDE_UnderhillDeluxe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDE_UnderhillDeluxe_C>();
	}
};
static_assert(alignof(UDE_UnderhillDeluxe_C) == 0x000008, "Wrong alignment on UDE_UnderhillDeluxe_C");
static_assert(sizeof(UDE_UnderhillDeluxe_C) == 0x000108, "Wrong size on UDE_UnderhillDeluxe_C");
static_assert(offsetof(UDE_UnderhillDeluxe_C, UberGraphFrame) == 0x0000C0, "Member 'UDE_UnderhillDeluxe_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, TargetScale) == 0x0000C8, "Member 'UDE_UnderhillDeluxe_C::TargetScale' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, Character) == 0x0000D0, "Member 'UDE_UnderhillDeluxe_C::Character' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, StartScale) == 0x0000D8, "Member 'UDE_UnderhillDeluxe_C::StartScale' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, Progress) == 0x0000DC, "Member 'UDE_UnderhillDeluxe_C::Progress' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, CurrentScale) == 0x0000E0, "Member 'UDE_UnderhillDeluxe_C::CurrentScale' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, Scale_Check_Cooldown) == 0x0000E4, "Member 'UDE_UnderhillDeluxe_C::Scale_Check_Cooldown' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, IsScalingActive) == 0x0000E8, "Member 'UDE_UnderhillDeluxe_C::IsScalingActive' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, Previous_Progress) == 0x0000EC, "Member 'UDE_UnderhillDeluxe_C::Previous_Progress' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, StartCameraOffset) == 0x0000F0, "Member 'UDE_UnderhillDeluxe_C::StartCameraOffset' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, TargetCameraOffset) == 0x0000F4, "Member 'UDE_UnderhillDeluxe_C::TargetCameraOffset' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, CurrentCameraOffset) == 0x0000F8, "Member 'UDE_UnderhillDeluxe_C::CurrentCameraOffset' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, EffectEnabled) == 0x0000FC, "Member 'UDE_UnderhillDeluxe_C::EffectEnabled' has a wrong offset!");
static_assert(offsetof(UDE_UnderhillDeluxe_C, OriginalPitchValue) == 0x000100, "Member 'UDE_UnderhillDeluxe_C::OriginalPitchValue' has a wrong offset!");

}

