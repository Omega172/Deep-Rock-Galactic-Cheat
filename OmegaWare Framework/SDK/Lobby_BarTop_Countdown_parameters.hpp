#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby_BarTop_Countdown

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function Lobby_BarTop_Countdown.Lobby_BarTop_Countdown_C.ExecuteUbergraph_Lobby_BarTop_Countdown
// 0x0210 (0x0210 - 0x0000)
struct Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A45[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float NewTime)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsActive)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float NewTime)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isActive_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A46[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_SpaceRig_C*               K2Node_DynamicCast_AsBP_Game_State_Space_Rig;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A47[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_NewTime_1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isActive;                       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A48[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A49[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0070(0x0018)()
	class ABP_GameState_SpaceRig_C*               K2Node_DynamicCast_AsBP_Game_State_Space_Rig_1;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4A[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4B[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_NewTime;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue_2;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4C[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameState_SpaceRig_C*               K2Node_DynamicCast_AsBP_Game_State_Space_Rig_2;    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4D[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0128(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0140(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0180(0x0010)(ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4E[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0198(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A4F[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base;    // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A50[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base_1;  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A51[0x1];                                     // 0x01FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsActive)>                K2Node_CreateDelegate_OutputDelegate_3;            // 0x01FC(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown) == 0x000008, "Wrong alignment on Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown");
static_assert(sizeof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown) == 0x000210, "Wrong size on Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, EntryPoint) == 0x000000, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, Temp_byte_Variable) == 0x000004, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_GetFSDGameState_ReturnValue) == 0x000038, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_CustomEvent_isActive_1) == 0x000040, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_CustomEvent_isActive_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_AsBP_Game_State_Space_Rig) == 0x000048, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_AsBP_Game_State_Space_Rig' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_CustomEvent_NewTime_1) == 0x000054, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_CustomEvent_NewTime_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_FCeil_ReturnValue) == 0x000058, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_CustomEvent_isActive) == 0x00005C, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_CustomEvent_isActive' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_GetFSDGameState_ReturnValue_1) == 0x000068, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_GetFSDGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_Conv_FloatToText_ReturnValue) == 0x000070, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_AsBP_Game_State_Space_Rig_1) == 0x000088, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_AsBP_Game_State_Space_Rig_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_MakeArray_Array) == 0x0000D8, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_BooleanOR_ReturnValue) == 0x000100, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_CustomEvent_NewTime) == 0x000104, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_CustomEvent_NewTime' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_GetFSDGameState_ReturnValue_2) == 0x000108, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_GetFSDGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_FCeil_ReturnValue_1) == 0x000110, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_AsBP_Game_State_Space_Rig_2) == 0x000118, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_AsBP_Game_State_Space_Rig_2' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000124, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000128, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_MakeStruct_FormatArgumentData_1) == 0x000140, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_MakeArray_Array_1) == 0x000180, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, Temp_byte_Variable_1) == 0x000190, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_Format_ReturnValue_1) == 0x000198, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_Event_IsDesignTime) == 0x0001B0, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_PlayAnimation_ReturnValue) == 0x0001B8, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_MenuColors_OutputColor) == 0x0001C0, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001D0, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_AsBP_Player_Controller_Base) == 0x0001D8, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_AsBP_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_bSuccess_3) == 0x0001E0, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0001E8, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_AsBP_Player_Controller_Base_1) == 0x0001F0, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_AsBP_Player_Controller_Base_1' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_DynamicCast_bSuccess_4) == 0x0001F8, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, Temp_bool_Variable) == 0x0001F9, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_Select_Default) == 0x0001FA, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001FC, "Member 'Lobby_BarTop_Countdown_C_ExecuteUbergraph_Lobby_BarTop_Countdown::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function Lobby_BarTop_Countdown.Lobby_BarTop_Countdown_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Lobby_BarTop_Countdown_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_BarTop_Countdown_C_PreConstruct) == 0x000001, "Wrong alignment on Lobby_BarTop_Countdown_C_PreConstruct");
static_assert(sizeof(Lobby_BarTop_Countdown_C_PreConstruct) == 0x000001, "Wrong size on Lobby_BarTop_Countdown_C_PreConstruct");
static_assert(offsetof(Lobby_BarTop_Countdown_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Lobby_BarTop_Countdown_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Lobby_BarTop_Countdown.Lobby_BarTop_Countdown_C.CustomEvent
// 0x0004 (0x0004 - 0x0000)
struct Lobby_BarTop_Countdown_C_CustomEvent final
{
public:
	float                                         NewTime;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_BarTop_Countdown_C_CustomEvent) == 0x000004, "Wrong alignment on Lobby_BarTop_Countdown_C_CustomEvent");
static_assert(sizeof(Lobby_BarTop_Countdown_C_CustomEvent) == 0x000004, "Wrong size on Lobby_BarTop_Countdown_C_CustomEvent");
static_assert(offsetof(Lobby_BarTop_Countdown_C_CustomEvent, NewTime) == 0x000000, "Member 'Lobby_BarTop_Countdown_C_CustomEvent::NewTime' has a wrong offset!");

// Function Lobby_BarTop_Countdown.Lobby_BarTop_Countdown_C.HostCoundownChanged
// 0x0001 (0x0001 - 0x0000)
struct Lobby_BarTop_Countdown_C_HostCoundownChanged final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_BarTop_Countdown_C_HostCoundownChanged) == 0x000001, "Wrong alignment on Lobby_BarTop_Countdown_C_HostCoundownChanged");
static_assert(sizeof(Lobby_BarTop_Countdown_C_HostCoundownChanged) == 0x000001, "Wrong size on Lobby_BarTop_Countdown_C_HostCoundownChanged");
static_assert(offsetof(Lobby_BarTop_Countdown_C_HostCoundownChanged, IsActive) == 0x000000, "Member 'Lobby_BarTop_Countdown_C_HostCoundownChanged::IsActive' has a wrong offset!");

// Function Lobby_BarTop_Countdown.Lobby_BarTop_Countdown_C.TimerChanged
// 0x0004 (0x0004 - 0x0000)
struct Lobby_BarTop_Countdown_C_TimerChanged final
{
public:
	float                                         NewTime;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Lobby_BarTop_Countdown_C_TimerChanged) == 0x000004, "Wrong alignment on Lobby_BarTop_Countdown_C_TimerChanged");
static_assert(sizeof(Lobby_BarTop_Countdown_C_TimerChanged) == 0x000004, "Wrong size on Lobby_BarTop_Countdown_C_TimerChanged");
static_assert(offsetof(Lobby_BarTop_Countdown_C_TimerChanged, NewTime) == 0x000000, "Member 'Lobby_BarTop_Countdown_C_TimerChanged::NewTime' has a wrong offset!");

// Function Lobby_BarTop_Countdown.Lobby_BarTop_Countdown_C.CountDownChanged
// 0x0001 (0x0001 - 0x0000)
struct Lobby_BarTop_Countdown_C_CountDownChanged final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Lobby_BarTop_Countdown_C_CountDownChanged) == 0x000001, "Wrong alignment on Lobby_BarTop_Countdown_C_CountDownChanged");
static_assert(sizeof(Lobby_BarTop_Countdown_C_CountDownChanged) == 0x000001, "Wrong size on Lobby_BarTop_Countdown_C_CountDownChanged");
static_assert(offsetof(Lobby_BarTop_Countdown_C_CountDownChanged, IsActive) == 0x000000, "Member 'Lobby_BarTop_Countdown_C_CountDownChanged::IsActive' has a wrong offset!");

}

