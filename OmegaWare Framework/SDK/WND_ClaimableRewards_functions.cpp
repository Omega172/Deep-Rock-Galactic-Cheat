#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WND_ClaimableRewards

#include "Basic.hpp"

#include "WND_ClaimableRewards_classes.hpp"
#include "WND_ClaimableRewards_parameters.hpp"


namespace CG
{

// Function WND_ClaimableRewards.WND_ClaimableRewards_C.ExecuteUbergraph_WND_ClaimableRewards
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWND_ClaimableRewards_C::ExecuteUbergraph_WND_ClaimableRewards(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_ClaimableRewards_C", "ExecuteUbergraph_WND_ClaimableRewards");

	Params::WND_ClaimableRewards_C_ExecuteUbergraph_WND_ClaimableRewards Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WND_ClaimableRewards.WND_ClaimableRewards_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWND_ClaimableRewards_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_ClaimableRewards_C", "PreConstruct");

	Params::WND_ClaimableRewards_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WND_ClaimableRewards.WND_ClaimableRewards_C.BndEvt__ContinueButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// (BlueprintEvent)

void UWND_ClaimableRewards_C::BndEvt__ContinueButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_ClaimableRewards_C", "BndEvt__ContinueButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_ClaimableRewards.WND_ClaimableRewards_C.DoClose
// (BlueprintCallable, BlueprintEvent)

void UWND_ClaimableRewards_C::DoClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_ClaimableRewards_C", "DoClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_ClaimableRewards.WND_ClaimableRewards_C.BndEvt__RewardView_K2Node_ComponentBoundEvent_1_OnRewardsClaimed__DelegateSignature
// (BlueprintEvent)

void UWND_ClaimableRewards_C::BndEvt__RewardView_K2Node_ComponentBoundEvent_1_OnRewardsClaimed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_ClaimableRewards_C", "BndEvt__RewardView_K2Node_ComponentBoundEvent_1_OnRewardsClaimed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_ClaimableRewards.WND_ClaimableRewards_C.OnShown
// (Event, Protected, BlueprintEvent)

void UWND_ClaimableRewards_C::OnShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_ClaimableRewards_C", "OnShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_ClaimableRewards.WND_ClaimableRewards_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWND_ClaimableRewards_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_ClaimableRewards_C", "OnKeyUp");

	Params::WND_ClaimableRewards_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WND_ClaimableRewards.WND_ClaimableRewards_C.GetData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FClaimableRewardView             OutData                                                (Parm, OutParm, ContainsInstancedReference)

void UWND_ClaimableRewards_C::GetData(struct FClaimableRewardView* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_ClaimableRewards_C", "GetData");

	Params::WND_ClaimableRewards_C_GetData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);
}

}

