#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TOOLTIP_Overclock_Item

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function TOOLTIP_Overclock_Item.TOOLTIP_Overclock_Item_C.ExecuteUbergraph_TOOLTIP_Overclock_Item
// 0x0058 (0x0058 - 0x0000)
struct TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           K2Node_CustomEvent_Overclock;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USchematicCategory*                     CallFunc_FromUpgrade_OutSchematicCategory;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0028(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0040(0x0018)()
};
static_assert(alignof(TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item) == 0x000008, "Wrong alignment on TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item");
static_assert(sizeof(TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item) == 0x000058, "Wrong size on TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item");
static_assert(offsetof(TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item, EntryPoint) == 0x000000, "Member 'TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item, K2Node_Event_IsDesignTime) == 0x000004, "Member 'TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item, CallFunc_MenuColors_OutputColor) == 0x000008, "Member 'TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item, K2Node_CustomEvent_Overclock) == 0x000018, "Member 'TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item::K2Node_CustomEvent_Overclock' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item, CallFunc_FromUpgrade_OutSchematicCategory) == 0x000020, "Member 'TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item::CallFunc_FromUpgrade_OutSchematicCategory' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item, CallFunc_TextToUpper_ReturnValue) == 0x000028, "Member 'TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item, CallFunc_TextToUpper_ReturnValue_1) == 0x000040, "Member 'TOOLTIP_Overclock_Item_C_ExecuteUbergraph_TOOLTIP_Overclock_Item::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");

// Function TOOLTIP_Overclock_Item.TOOLTIP_Overclock_Item_C.SetOverclock
// 0x0008 (0x0008 - 0x0000)
struct TOOLTIP_Overclock_Item_C_SetOverclock final
{
public:
	class UItemUpgrade*                           Param_Overclock;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TOOLTIP_Overclock_Item_C_SetOverclock) == 0x000008, "Wrong alignment on TOOLTIP_Overclock_Item_C_SetOverclock");
static_assert(sizeof(TOOLTIP_Overclock_Item_C_SetOverclock) == 0x000008, "Wrong size on TOOLTIP_Overclock_Item_C_SetOverclock");
static_assert(offsetof(TOOLTIP_Overclock_Item_C_SetOverclock, Param_Overclock) == 0x000000, "Member 'TOOLTIP_Overclock_Item_C_SetOverclock::Param_Overclock' has a wrong offset!");

// Function TOOLTIP_Overclock_Item.TOOLTIP_Overclock_Item_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct TOOLTIP_Overclock_Item_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TOOLTIP_Overclock_Item_C_PreConstruct) == 0x000001, "Wrong alignment on TOOLTIP_Overclock_Item_C_PreConstruct");
static_assert(sizeof(TOOLTIP_Overclock_Item_C_PreConstruct) == 0x000001, "Wrong size on TOOLTIP_Overclock_Item_C_PreConstruct");
static_assert(offsetof(TOOLTIP_Overclock_Item_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'TOOLTIP_Overclock_Item_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

