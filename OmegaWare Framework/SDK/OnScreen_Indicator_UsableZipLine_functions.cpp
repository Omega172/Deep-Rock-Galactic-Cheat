#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnScreen_Indicator_UsableZipLine

#include "Basic.hpp"

#include "OnScreen_Indicator_UsableZipLine_classes.hpp"
#include "OnScreen_Indicator_UsableZipLine_parameters.hpp"


namespace CG
{

// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.ExecuteUbergraph_OnScreen_Indicator_UsableZipLine
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOnScreen_Indicator_UsableZipLine_C::ExecuteUbergraph_OnScreen_Indicator_UsableZipLine(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnScreen_Indicator_UsableZipLine_C", "ExecuteUbergraph_OnScreen_Indicator_UsableZipLine");

	Params::OnScreen_Indicator_UsableZipLine_C_ExecuteUbergraph_OnScreen_Indicator_UsableZipLine Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.OnInputSourceChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFSDInputSource                         InputSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOnScreen_Indicator_UsableZipLine_C::OnInputSourceChanged_Event(EFSDInputSource InputSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnScreen_Indicator_UsableZipLine_C", "OnInputSourceChanged_Event");

	Params::OnScreen_Indicator_UsableZipLine_C_OnInputSourceChanged_Event Parms{};

	Parms.InputSource = InputSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.OnCharacterStateChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterState                         NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOnScreen_Indicator_UsableZipLine_C::OnCharacterStateChanged_Event(ECharacterState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnScreen_Indicator_UsableZipLine_C", "OnCharacterStateChanged_Event");

	Params::OnScreen_Indicator_UsableZipLine_C_OnCharacterStateChanged_Event Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOnScreen_Indicator_UsableZipLine_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnScreen_Indicator_UsableZipLine_C", "Tick");

	Params::OnScreen_Indicator_UsableZipLine_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UOnScreen_Indicator_UsableZipLine_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnScreen_Indicator_UsableZipLine_C", "PreConstruct");

	Params::OnScreen_Indicator_UsableZipLine_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UOnScreen_Indicator_UsableZipLine_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnScreen_Indicator_UsableZipLine_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OnScreen_Indicator_UsableZipLine.OnScreen_Indicator_UsableZipLine_C.Refresh
// (Public, BlueprintCallable, BlueprintEvent)

void UOnScreen_Indicator_UsableZipLine_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OnScreen_Indicator_UsableZipLine_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}

}

