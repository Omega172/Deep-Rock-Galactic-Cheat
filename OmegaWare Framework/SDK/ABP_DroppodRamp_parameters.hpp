#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_DroppodRamp

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace CG::Params
{

// Function ABP_DroppodRamp.ABP_DroppodRamp_C.ExecuteUbergraph_ABP_DroppodRamp
// 0x0010 (0x0010 - 0x0000)
struct ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp) == 0x000004, "Wrong alignment on ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp");
static_assert(sizeof(ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp) == 0x000010, "Wrong size on ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp");
static_assert(offsetof(ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp, EntryPoint) == 0x000000, "Member 'ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x000004, "Member 'ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1) == 0x000008, "Member 'ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00000D, "Member 'ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00000F, "Member 'ABP_DroppodRamp_C_ExecuteUbergraph_ABP_DroppodRamp::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function ABP_DroppodRamp.ABP_DroppodRamp_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_DroppodRamp_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_DroppodRamp_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_DroppodRamp_C_AnimGraph");
static_assert(sizeof(ABP_DroppodRamp_C_AnimGraph) == 0x000010, "Wrong size on ABP_DroppodRamp_C_AnimGraph");
static_assert(offsetof(ABP_DroppodRamp_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_DroppodRamp_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

