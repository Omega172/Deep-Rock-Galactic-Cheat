#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_DamageClass_Indicator

#include "Basic.hpp"

#include "HUD_DamageClass_Indicator_classes.hpp"
#include "HUD_DamageClass_Indicator_parameters.hpp"


namespace CG
{

// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.ExecuteUbergraph_HUD_DamageClass_Indicator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_DamageClass_Indicator_C::ExecuteUbergraph_HUD_DamageClass_Indicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "ExecuteUbergraph_HUD_DamageClass_Indicator");

	Params::HUD_DamageClass_Indicator_C_ExecuteUbergraph_HUD_DamageClass_Indicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.BndEvt__HUD_PlayerTemperature_K2Node_ComponentBoundEvent_0_VisibilityChangedDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_DamageClass_Indicator_C::BndEvt__HUD_PlayerTemperature_K2Node_ComponentBoundEvent_0_VisibilityChangedDelegate__DelegateSignature(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "BndEvt__HUD_PlayerTemperature_K2Node_ComponentBoundEvent_0_VisibilityChangedDelegate__DelegateSignature");

	Params::HUD_DamageClass_Indicator_C_BndEvt__HUD_PlayerTemperature_K2Node_ComponentBoundEvent_0_VisibilityChangedDelegate__DelegateSignature Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.Elapsed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHUD_DamageClass_Item_C*          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_DamageClass_Indicator_C::Elapsed(class UHUD_DamageClass_Item_C* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "Elapsed");

	Params::HUD_DamageClass_Indicator_C_Elapsed Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.OnAfflictionDeactivated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPawnAffliction*                  Affliction                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_DamageClass_Indicator_C::OnAfflictionDeactivated(class UPawnAffliction* Affliction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "OnAfflictionDeactivated");

	Params::HUD_DamageClass_Indicator_C_OnAfflictionDeactivated Parms{};

	Parms.Affliction = Affliction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.OnAfflictionActivated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPawnAffliction*                  Affliction                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_DamageClass_Indicator_C::OnAfflictionActivated(class UPawnAffliction* Affliction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "OnAfflictionActivated");

	Params::HUD_DamageClass_Indicator_C_OnAfflictionActivated Parms{};

	Parms.Affliction = Affliction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UHUD_DamageClass_Indicator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.CreateIcon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPawnAffliction*                  Affliction                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UHUD_DamageClass_Item_C*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UHUD_DamageClass_Item_C* UHUD_DamageClass_Indicator_C::CreateIcon(class UPawnAffliction* Affliction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "CreateIcon");

	Params::HUD_DamageClass_Indicator_C_CreateIcon Parms{};

	Parms.Affliction = Affliction;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.ClearIcons
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_DamageClass_Indicator_C::ClearIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "ClearIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.UpdateSpacers
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_DamageClass_Indicator_C::UpdateSpacers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "UpdateSpacers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_DamageClass_Indicator.HUD_DamageClass_Indicator_C.UpdateThisSpacer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          ThisSpacer                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPanelWidget*                     ThisAfflictionBox                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPanelWidget*                     OtherAfflictionBox                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TemperatureIsVisible                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_DamageClass_Indicator_C::UpdateThisSpacer(class UWidget* ThisSpacer, class UPanelWidget* ThisAfflictionBox, class UPanelWidget* OtherAfflictionBox, bool TemperatureIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_DamageClass_Indicator_C", "UpdateThisSpacer");

	Params::HUD_DamageClass_Indicator_C_UpdateThisSpacer Parms{};

	Parms.ThisSpacer = ThisSpacer;
	Parms.ThisAfflictionBox = ThisAfflictionBox;
	Parms.OtherAfflictionBox = OtherAfflictionBox;
	Parms.TemperatureIsVisible = TemperatureIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}

}

