#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Overclocks_Equip_Item

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "UMG_structs.hpp"


namespace CG::Params
{

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_Overclocks_Equip_Item_C_OnHovered__DelegateSignature final
{
public:
	class UITM_Overclocks_Equip_Item_C*           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_Item_C_OnHovered__DelegateSignature");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_OnHovered__DelegateSignature) == 0x000008, "Wrong size on ITM_Overclocks_Equip_Item_C_OnHovered__DelegateSignature");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_OnHovered__DelegateSignature, Item) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_OnHovered__DelegateSignature::Item' has a wrong offset!");

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_Overclocks_Equip_Item_C_OnUnhovered__DelegateSignature final
{
public:
	class UITM_Overclocks_Equip_Item_C*           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_Item_C_OnUnhovered__DelegateSignature");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on ITM_Overclocks_Equip_Item_C_OnUnhovered__DelegateSignature");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_OnUnhovered__DelegateSignature, Item) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_OnUnhovered__DelegateSignature::Item' has a wrong offset!");

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_Overclocks_Equip_Item_C_OnClicked__DelegateSignature final
{
public:
	class UITM_Overclocks_Equip_Item_C*           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_Item_C_OnClicked__DelegateSignature");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_OnClicked__DelegateSignature) == 0x000008, "Wrong size on ITM_Overclocks_Equip_Item_C_OnClicked__DelegateSignature");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_OnClicked__DelegateSignature, Item) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_OnClicked__DelegateSignature::Item' has a wrong offset!");

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.ExecuteUbergraph_ITM_Overclocks_Equip_Item
// 0x0020 (0x0020 - 0x0000)
struct ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C46[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item) == 0x000020, "Wrong size on ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item, EntryPoint) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000008, "Member 'ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x00000C, "Member 'ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'ITM_Overclocks_Equip_Item_C_ExecuteUbergraph_ITM_Overclocks_Equip_Item::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_Overclocks_Equip_Item_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_Overclocks_Equip_Item_C_PreConstruct");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_PreConstruct) == 0x000001, "Wrong size on ITM_Overclocks_Equip_Item_C_PreConstruct");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.SetIconSize
// 0x000C (0x000C - 0x0000)
struct ITM_Overclocks_Equip_Item_C_SetIconSize final
{
public:
	int32                                         NewSize;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_SetIconSize) == 0x000004, "Wrong alignment on ITM_Overclocks_Equip_Item_C_SetIconSize");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_SetIconSize) == 0x00000C, "Wrong size on ITM_Overclocks_Equip_Item_C_SetIconSize");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetIconSize, NewSize) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_SetIconSize::NewSize' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetIconSize, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'ITM_Overclocks_Equip_Item_C_SetIconSize::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetIconSize, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000008, "Member 'ITM_Overclocks_Equip_Item_C_SetIconSize::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.SetOverclock
// 0x0010 (0x0010 - 0x0000)
struct ITM_Overclocks_Equip_Item_C_SetOverclock final
{
public:
	class UItemUpgrade*                           InOverclock;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USchematicCategory*                     CallFunc_FromUpgrade_OutSchematicCategory;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_SetOverclock) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_Item_C_SetOverclock");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_SetOverclock) == 0x000010, "Wrong size on ITM_Overclocks_Equip_Item_C_SetOverclock");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetOverclock, InOverclock) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_SetOverclock::InOverclock' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetOverclock, CallFunc_FromUpgrade_OutSchematicCategory) == 0x000008, "Member 'ITM_Overclocks_Equip_Item_C_SetOverclock::CallFunc_FromUpgrade_OutSchematicCategory' has a wrong offset!");

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.GetOverClock
// 0x0008 (0x0008 - 0x0000)
struct ITM_Overclocks_Equip_Item_C_GetOverClock final
{
public:
	class UItemUpgrade*                           Param_Overclock;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_GetOverClock) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_Item_C_GetOverClock");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_GetOverClock) == 0x000008, "Wrong size on ITM_Overclocks_Equip_Item_C_GetOverClock");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_GetOverClock, Param_Overclock) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_GetOverClock::Param_Overclock' has a wrong offset!");

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.SetState
// 0x0006 (0x0006 - 0x0000)
struct ITM_Overclocks_Equip_Item_C_SetState final
{
public:
	EItemUpgradeStatus                            InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_SetState) == 0x000001, "Wrong alignment on ITM_Overclocks_Equip_Item_C_SetState");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_SetState) == 0x000006, "Wrong size on ITM_Overclocks_Equip_Item_C_SetState");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetState, InState) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_SetState::InState' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ITM_Overclocks_Equip_Item_C_SetState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'ITM_Overclocks_Equip_Item_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetState, CallFunc_SelectVisibility_IsVisible) == 0x000003, "Member 'ITM_Overclocks_Equip_Item_C_SetState::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetState, CallFunc_SelectVisibility_VisibilityChanged) == 0x000004, "Member 'ITM_Overclocks_Equip_Item_C_SetState::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_SetState, CallFunc_SelectVisibility_New_Visibility) == 0x000005, "Member 'ITM_Overclocks_Equip_Item_C_SetState::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function ITM_Overclocks_Equip_Item.ITM_Overclocks_Equip_Item_C.GetToolTipWidget
// 0x0030 (0x0030 - 0x0000)
struct ITM_Overclocks_Equip_Item_C_GetToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBasic_ToolTip_C*                       ToolTip;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C47[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOrCreateSingletonWidget_WidgetCreated; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C48[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_ToolTip_C*                       CallFunc_GetOrCreateSingletonWidget_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_Item_C_GetToolTipWidget) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_Item_C_GetToolTipWidget");
static_assert(sizeof(ITM_Overclocks_Equip_Item_C_GetToolTipWidget) == 0x000030, "Wrong size on ITM_Overclocks_Equip_Item_C_GetToolTipWidget");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_GetToolTipWidget, ReturnValue) == 0x000000, "Member 'ITM_Overclocks_Equip_Item_C_GetToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_GetToolTipWidget, ToolTip) == 0x000008, "Member 'ITM_Overclocks_Equip_Item_C_GetToolTipWidget::ToolTip' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_GetToolTipWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITM_Overclocks_Equip_Item_C_GetToolTipWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_GetToolTipWidget, CallFunc_GetWindowManager_ReturnValue) == 0x000018, "Member 'ITM_Overclocks_Equip_Item_C_GetToolTipWidget::CallFunc_GetWindowManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_GetToolTipWidget, CallFunc_GetOrCreateSingletonWidget_WidgetCreated) == 0x000020, "Member 'ITM_Overclocks_Equip_Item_C_GetToolTipWidget::CallFunc_GetOrCreateSingletonWidget_WidgetCreated' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_Item_C_GetToolTipWidget, CallFunc_GetOrCreateSingletonWidget_ReturnValue) == 0x000028, "Member 'ITM_Overclocks_Equip_Item_C_GetToolTipWidget::CallFunc_GetOrCreateSingletonWidget_ReturnValue' has a wrong offset!");

}

