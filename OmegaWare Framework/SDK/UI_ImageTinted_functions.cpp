#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ImageTinted

#include "Basic.hpp"

#include "UI_ImageTinted_classes.hpp"
#include "UI_ImageTinted_parameters.hpp"


namespace CG
{

// Function UI_ImageTinted.UI_ImageTinted_C.ExecuteUbergraph_UI_ImageTinted
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ImageTinted_C::ExecuteUbergraph_UI_ImageTinted(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ImageTinted_C", "ExecuteUbergraph_UI_ImageTinted");

	Params::UI_ImageTinted_C_ExecuteUbergraph_UI_ImageTinted Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ImageTinted.UI_ImageTinted_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ImageTinted_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ImageTinted_C", "PreConstruct");

	Params::UI_ImageTinted_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ImageTinted.UI_ImageTinted_C.SetBrush
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      InBrush                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_ImageTinted_C::SetBrush(const struct FSlateBrush& InBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ImageTinted_C", "SetBrush");

	Params::UI_ImageTinted_C_SetBrush Parms{};

	Parms.InBrush = std::move(InBrush);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ImageTinted.UI_ImageTinted_C.SetTint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MenuColors                         InTint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InOpacity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ImageTinted_C::SetTint(ENUM_MenuColors InTint, float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ImageTinted_C", "SetTint");

	Params::UI_ImageTinted_C_SetTint Parms{};

	Parms.InTint = InTint;
	Parms.InOpacity = InOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ImageTinted.UI_ImageTinted_C.SetBrushFromTexture
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MatchSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ImageTinted_C::SetBrushFromTexture(class UTexture2D* Texture, bool MatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ImageTinted_C", "SetBrushFromTexture");

	Params::UI_ImageTinted_C_SetBrushFromTexture Parms{};

	Parms.Texture = Texture;
	Parms.MatchSize = MatchSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ImageTinted.UI_ImageTinted_C.GetBrush
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateBrush                      Param_Brush                                            (Parm, OutParm)

void UUI_ImageTinted_C::GetBrush(struct FSlateBrush* Param_Brush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ImageTinted_C", "GetBrush");

	Params::UI_ImageTinted_C_GetBrush Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Brush != nullptr)
		*Param_Brush = std::move(Parms.Param_Brush);
}


// Function UI_ImageTinted.UI_ImageTinted_C.SelectTint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MenuColors                         FLASE                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_MenuColors                         TURR                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ImageTinted_C::SelectTint(ENUM_MenuColors FLASE, ENUM_MenuColors TURR, bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ImageTinted_C", "SelectTint");

	Params::UI_ImageTinted_C_SelectTint Parms{};

	Parms.FLASE = FLASE;
	Parms.TURR = TURR;
	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ImageTinted.UI_ImageTinted_C.SetBrushSize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Brush_Image_Size                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ImageTinted_C::SetBrushSize(const struct FVector2D& Brush_Image_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ImageTinted_C", "SetBrushSize");

	Params::UI_ImageTinted_C_SetBrushSize Parms{};

	Parms.Brush_Image_Size = std::move(Brush_Image_Size);

	UObject::ProcessEvent(Func, &Parms);
}

}

