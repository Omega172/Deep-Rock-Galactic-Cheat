#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_EnemyTargeting

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace CG::Params
{

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.ExecuteUbergraph_HUD_EnemyTargeting
// 0x0090 (0x0090 - 0x0000)
struct HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3651[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TScriptInterface<class IHealth>& EnemyHealth, float Damage, float DamageModifier, float HealthRemaining, bool IsWeakPoint, bool IsRadial)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isVisible;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3652[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InCurrentTarget_1;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3653[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InCurrentTarget;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IHealth>               K2Node_CustomEvent_EnemyHealth;                    // 0x0048(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DamageModifier;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_HealthRemaining;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsWeakpoint;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsRadial;                       // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3654[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3655[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3656[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULookingAtContentWidget*                CallFunc_GetContent_OutActiveContent;              // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting");
static_assert(sizeof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting) == 0x000090, "Wrong size on HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, EntryPoint) == 0x000000, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_CustomEvent_isVisible) == 0x000020, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_CustomEvent_isVisible' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_Event_InCurrentTarget_1) == 0x000028, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_Event_InCurrentTarget_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_Event_DeltaTime) == 0x000030, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_Event_InCurrentTarget) == 0x000038, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_Event_InCurrentTarget' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000040, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_CustomEvent_EnemyHealth) == 0x000048, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_CustomEvent_EnemyHealth' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_CustomEvent_Damage) == 0x000058, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_CustomEvent_DamageModifier) == 0x00005C, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_CustomEvent_DamageModifier' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_CustomEvent_HealthRemaining) == 0x000060, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_CustomEvent_HealthRemaining' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_CustomEvent_IsWeakpoint) == 0x000064, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_CustomEvent_IsWeakpoint' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_CustomEvent_IsRadial) == 0x000065, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_CustomEvent_IsRadial' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_DynamicCast_AsPlayer_Character) == 0x000068, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, K2Node_Event_IsDesignTime) == 0x000071, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, CallFunc_MenuColors_OutputColor) == 0x000074, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting, CallFunc_GetContent_OutActiveContent) == 0x000088, "Member 'HUD_EnemyTargeting_C_ExecuteUbergraph_HUD_EnemyTargeting::CallFunc_GetContent_OutActiveContent' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_EnemyTargeting_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_EnemyTargeting_C_PreConstruct");
static_assert(sizeof(HUD_EnemyTargeting_C_PreConstruct) == 0x000001, "Wrong size on HUD_EnemyTargeting_C_PreConstruct");
static_assert(offsetof(HUD_EnemyTargeting_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_EnemyTargeting_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.OnDamagedEnemy
// 0x0020 (0x0020 - 0x0000)
struct HUD_EnemyTargeting_C_OnDamagedEnemy final
{
public:
	TScriptInterface<class IHealth>               EnemyHealth;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper)
	float                                         Damage;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageModifier;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthRemaining;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWeakPoint;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRadial;                                          // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_C_OnDamagedEnemy) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_C_OnDamagedEnemy");
static_assert(sizeof(HUD_EnemyTargeting_C_OnDamagedEnemy) == 0x000020, "Wrong size on HUD_EnemyTargeting_C_OnDamagedEnemy");
static_assert(offsetof(HUD_EnemyTargeting_C_OnDamagedEnemy, EnemyHealth) == 0x000000, "Member 'HUD_EnemyTargeting_C_OnDamagedEnemy::EnemyHealth' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_OnDamagedEnemy, Damage) == 0x000010, "Member 'HUD_EnemyTargeting_C_OnDamagedEnemy::Damage' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_OnDamagedEnemy, DamageModifier) == 0x000014, "Member 'HUD_EnemyTargeting_C_OnDamagedEnemy::DamageModifier' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_OnDamagedEnemy, HealthRemaining) == 0x000018, "Member 'HUD_EnemyTargeting_C_OnDamagedEnemy::HealthRemaining' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_OnDamagedEnemy, IsWeakPoint) == 0x00001C, "Member 'HUD_EnemyTargeting_C_OnDamagedEnemy::IsWeakPoint' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_OnDamagedEnemy, IsRadial) == 0x00001D, "Member 'HUD_EnemyTargeting_C_OnDamagedEnemy::IsRadial' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.ReceiveNewTarget
// 0x0008 (0x0008 - 0x0000)
struct HUD_EnemyTargeting_C_ReceiveNewTarget final
{
public:
	class AActor*                                 InCurrentTarget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_C_ReceiveNewTarget) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_C_ReceiveNewTarget");
static_assert(sizeof(HUD_EnemyTargeting_C_ReceiveNewTarget) == 0x000008, "Wrong size on HUD_EnemyTargeting_C_ReceiveNewTarget");
static_assert(offsetof(HUD_EnemyTargeting_C_ReceiveNewTarget, InCurrentTarget) == 0x000000, "Member 'HUD_EnemyTargeting_C_ReceiveNewTarget::InCurrentTarget' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.ReceiveUpdateTarget
// 0x0010 (0x0010 - 0x0000)
struct HUD_EnemyTargeting_C_ReceiveUpdateTarget final
{
public:
	class AActor*                                 InCurrentTarget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_C_ReceiveUpdateTarget) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_C_ReceiveUpdateTarget");
static_assert(sizeof(HUD_EnemyTargeting_C_ReceiveUpdateTarget) == 0x000010, "Wrong size on HUD_EnemyTargeting_C_ReceiveUpdateTarget");
static_assert(offsetof(HUD_EnemyTargeting_C_ReceiveUpdateTarget, InCurrentTarget) == 0x000000, "Member 'HUD_EnemyTargeting_C_ReceiveUpdateTarget::InCurrentTarget' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ReceiveUpdateTarget, DeltaTime) == 0x000008, "Member 'HUD_EnemyTargeting_C_ReceiveUpdateTarget::DeltaTime' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.SetIsVisible
// 0x0001 (0x0001 - 0x0000)
struct HUD_EnemyTargeting_C_SetIsVisible final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_C_SetIsVisible) == 0x000001, "Wrong alignment on HUD_EnemyTargeting_C_SetIsVisible");
static_assert(sizeof(HUD_EnemyTargeting_C_SetIsVisible) == 0x000001, "Wrong size on HUD_EnemyTargeting_C_SetIsVisible");
static_assert(offsetof(HUD_EnemyTargeting_C_SetIsVisible, Param_IsVisible) == 0x000000, "Member 'HUD_EnemyTargeting_C_SetIsVisible::Param_IsVisible' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.HandleTargetDamaged
// 0x0070 (0x0070 - 0x0000)
struct HUD_EnemyTargeting_C_HandleTargetDamaged final
{
public:
	TScriptInterface<class IHealth>               Health;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Damage;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageModifier;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthRemaining;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWeakPoint;                                       // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsRadial;                                          // 0x001D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3657[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HealthOwner;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemyHealthComponent*                  HealthComponent;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULookingAtContentWidget*                CallFunc_GetContent_OutActiveContent;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHudGroupVisible_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidTarget_ReturnValue;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3658[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponentBase*                   CallFunc_GetLookingAtHealth_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemyHealthComponent*                  K2Node_DynamicCast_AsEnemy_Health_Component;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3659[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnemyHealthComponent*                  K2Node_DynamicCast_AsEnemy_Health_Component_1;     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365A[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_C_HandleTargetDamaged) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_C_HandleTargetDamaged");
static_assert(sizeof(HUD_EnemyTargeting_C_HandleTargetDamaged) == 0x000070, "Wrong size on HUD_EnemyTargeting_C_HandleTargetDamaged");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, Health) == 0x000000, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::Health' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, Damage) == 0x000010, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::Damage' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, DamageModifier) == 0x000014, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::DamageModifier' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, HealthRemaining) == 0x000018, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::HealthRemaining' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, IsWeakPoint) == 0x00001C, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::IsWeakPoint' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, IsRadial) == 0x00001D, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::IsRadial' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, HealthOwner) == 0x000020, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::HealthOwner' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, HealthComponent) == 0x000028, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::HealthComponent' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_GetContent_OutActiveContent) == 0x000030, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_GetContent_OutActiveContent' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_IsAlive_ReturnValue) == 0x000038, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_IsHudGroupVisible_ReturnValue) == 0x000039, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_IsHudGroupVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_IsValidTarget_ReturnValue) == 0x00003A, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_IsValidTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_GetLookingAtHealth_ReturnValue) == 0x000040, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_GetLookingAtHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, K2Node_DynamicCast_AsEnemy_Health_Component) == 0x000048, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::K2Node_DynamicCast_AsEnemy_Health_Component' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000051, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000054, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_BooleanOR_ReturnValue) == 0x000055, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_BooleanAND_ReturnValue_1) == 0x000056, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, K2Node_DynamicCast_AsEnemy_Health_Component_1) == 0x000058, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::K2Node_DynamicCast_AsEnemy_Health_Component_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000061, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_HandleTargetDamaged, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'HUD_EnemyTargeting_C_HandleTargetDamaged::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.UpdateWidgets
// 0x0048 (0x0048 - 0x0000)
struct HUD_EnemyTargeting_C_UpdateWidgets final
{
public:
	bool                                          Reset;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TemperatureEffect;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlive;                                           // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ResetWidgets;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365C[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULookingAtContentWidget*                CallFunc_GetContent_OutActiveContent;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCharacterTemperatureEffect_TemperatureEffect; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterTemperatureEffect_ReturnValue; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible_2;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_2;     // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_2;        // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible_3;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_3;     // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_3;        // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_C_UpdateWidgets) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_C_UpdateWidgets");
static_assert(sizeof(HUD_EnemyTargeting_C_UpdateWidgets) == 0x000048, "Wrong size on HUD_EnemyTargeting_C_UpdateWidgets");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, Reset) == 0x000000, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::Reset' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, TemperatureEffect) == 0x000004, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::TemperatureEffect' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, IsAlive) == 0x000008, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::IsAlive' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, ResetWidgets) == 0x000009, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::ResetWidgets' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_GetContent_OutActiveContent) == 0x000010, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_GetContent_OutActiveContent' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_GetCharacterTemperatureEffect_TemperatureEffect) == 0x000018, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_GetCharacterTemperatureEffect_TemperatureEffect' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_GetCharacterTemperatureEffect_ReturnValue) == 0x00001C, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_GetCharacterTemperatureEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_IsVisible) == 0x00001E, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_VisibilityChanged) == 0x00001F, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_New_Visibility) == 0x000020, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_PlayAnimation_ReturnValue) == 0x000028, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_IsVisible_1) == 0x000030, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x000031, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_New_Visibility_1) == 0x000032, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_BooleanAND_ReturnValue_1) == 0x000033, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_IsVisible_2) == 0x000034, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_IsVisible_2' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_VisibilityChanged_2) == 0x000035, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_VisibilityChanged_2' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_New_Visibility_2) == 0x000036, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_New_Visibility_2' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_IsAlive_ReturnValue) == 0x000037, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000038, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_IsVisible_3) == 0x000041, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_IsVisible_3' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_VisibilityChanged_3) == 0x000042, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_VisibilityChanged_3' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateWidgets, CallFunc_SelectVisibility_New_Visibility_3) == 0x000043, "Member 'HUD_EnemyTargeting_C_UpdateWidgets::CallFunc_SelectVisibility_New_Visibility_3' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.ClampToScreenHeight
// 0x0024 (0x0024 - 0x0000)
struct HUD_EnemyTargeting_C_ClampToScreenHeight final
{
public:
	float                                         CoordinateY;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Bound;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClampedY;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_C_ClampToScreenHeight) == 0x000004, "Wrong alignment on HUD_EnemyTargeting_C_ClampToScreenHeight");
static_assert(sizeof(HUD_EnemyTargeting_C_ClampToScreenHeight) == 0x000024, "Wrong size on HUD_EnemyTargeting_C_ClampToScreenHeight");
static_assert(offsetof(HUD_EnemyTargeting_C_ClampToScreenHeight, CoordinateY) == 0x000000, "Member 'HUD_EnemyTargeting_C_ClampToScreenHeight::CoordinateY' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ClampToScreenHeight, Bound) == 0x000004, "Member 'HUD_EnemyTargeting_C_ClampToScreenHeight::Bound' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ClampToScreenHeight, ClampedY) == 0x000008, "Member 'HUD_EnemyTargeting_C_ClampToScreenHeight::ClampedY' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ClampToScreenHeight, CallFunc_GetViewportSize_ReturnValue) == 0x00000C, "Member 'HUD_EnemyTargeting_C_ClampToScreenHeight::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ClampToScreenHeight, CallFunc_BreakVector2D_X) == 0x000014, "Member 'HUD_EnemyTargeting_C_ClampToScreenHeight::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ClampToScreenHeight, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'HUD_EnemyTargeting_C_ClampToScreenHeight::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ClampToScreenHeight, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'HUD_EnemyTargeting_C_ClampToScreenHeight::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_ClampToScreenHeight, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'HUD_EnemyTargeting_C_ClampToScreenHeight::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.UpdateScreenPosition
// 0x0120 (0x0120 - 0x0000)
struct HUD_EnemyTargeting_C_UpdateScreenPosition final
{
public:
	float                                         MaxHeight;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenPos;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365E[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterUseComponent*                 CallFunc_GetUseComponent_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLookingAtUsable_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365F[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3660[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3661[0xC];                                     // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UHealthComponentBase*                   K2Node_DynamicCast_AsHealth_Component_Base;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3662[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorTargetCenter_ReturnValue;         // 0x009C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHealthBarWorldOffset_ReturnValue;      // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3663[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_C_UpdateScreenPosition) == 0x000010, "Wrong alignment on HUD_EnemyTargeting_C_UpdateScreenPosition");
static_assert(sizeof(HUD_EnemyTargeting_C_UpdateScreenPosition) == 0x000120, "Wrong size on HUD_EnemyTargeting_C_UpdateScreenPosition");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, MaxHeight) == 0x000000, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::MaxHeight' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, ScreenPos) == 0x000004, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::ScreenPos' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_GetViewportSize_ReturnValue) == 0x000010, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector2D_X) == 0x000018, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_GetUseComponent_ReturnValue) == 0x000020, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_GetUseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_IsLookingAtUsable_ReturnValue) == 0x00002C, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_IsLookingAtUsable_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, Temp_bool_Variable) == 0x000034, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, K2Node_Select_Default) == 0x000044, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector_X) == 0x000048, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector_Y) == 0x00004C, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector_Z) == 0x000050, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, K2Node_DynamicCast_AsHealth_Component_Base) == 0x000090, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::K2Node_DynamicCast_AsHealth_Component_Base' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_GetActorTargetCenter_ReturnValue) == 0x00009C, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_GetActorTargetCenter_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_GetHealthBarWorldOffset_ReturnValue) == 0x0000A8, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_GetHealthBarWorldOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector_X_1) == 0x0000B4, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector_Y_1) == 0x0000B8, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector_Z_1) == 0x0000BC, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_TransformDirection_ReturnValue) == 0x0000C0, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000CC, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000DC, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_FMax_ReturnValue) == 0x0000E0, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000E4, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000E8, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000F0, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x0000F4, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x0000FC, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_MakeVector_ReturnValue) == 0x000100, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector2D_X_1) == 0x00010C, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_BreakVector2D_Y_1) == 0x000110, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_FMin_ReturnValue) == 0x000114, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_UpdateScreenPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000118, "Member 'HUD_EnemyTargeting_C_UpdateScreenPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.SelectContent
// 0x0002 (0x0002 - 0x0000)
struct HUD_EnemyTargeting_C_SelectContent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAfflictedBy_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_C_SelectContent) == 0x000001, "Wrong alignment on HUD_EnemyTargeting_C_SelectContent");
static_assert(sizeof(HUD_EnemyTargeting_C_SelectContent) == 0x000002, "Wrong size on HUD_EnemyTargeting_C_SelectContent");
static_assert(offsetof(HUD_EnemyTargeting_C_SelectContent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'HUD_EnemyTargeting_C_SelectContent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_SelectContent, CallFunc_IsAfflictedBy_ReturnValue) == 0x000001, "Member 'HUD_EnemyTargeting_C_SelectContent::CallFunc_IsAfflictedBy_ReturnValue' has a wrong offset!");

// Function HUD_EnemyTargeting.HUD_EnemyTargeting_C.GetContent
// 0x0020 (0x0020 - 0x0000)
struct HUD_EnemyTargeting_C_GetContent final
{
public:
	class ULookingAtContentWidget*                OutActiveContent;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULookingAtContentWidget*                K2Node_DynamicCast_AsLooking_at_Content_Widget;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_C_GetContent) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_C_GetContent");
static_assert(sizeof(HUD_EnemyTargeting_C_GetContent) == 0x000020, "Wrong size on HUD_EnemyTargeting_C_GetContent");
static_assert(offsetof(HUD_EnemyTargeting_C_GetContent, OutActiveContent) == 0x000000, "Member 'HUD_EnemyTargeting_C_GetContent::OutActiveContent' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_GetContent, CallFunc_GetActiveWidget_ReturnValue) == 0x000008, "Member 'HUD_EnemyTargeting_C_GetContent::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_GetContent, K2Node_DynamicCast_AsLooking_at_Content_Widget) == 0x000010, "Member 'HUD_EnemyTargeting_C_GetContent::K2Node_DynamicCast_AsLooking_at_Content_Widget' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_C_GetContent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'HUD_EnemyTargeting_C_GetContent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

