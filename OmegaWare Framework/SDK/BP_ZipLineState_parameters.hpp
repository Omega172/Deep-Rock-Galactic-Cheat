#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ZipLineState

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function BP_ZipLineState.BP_ZipLineState_C.ExecuteUbergraph_BP_ZipLineState
// 0x0070 (0x0070 - 0x0000)
struct BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_2;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B2[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_3;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32B3[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState) == 0x000008, "Wrong alignment on BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState");
static_assert(sizeof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState) == 0x000070, "Wrong size on BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, EntryPoint) == 0x000000, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_Add_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000028, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_K2_GetRootComponent_ReturnValue_2) == 0x000030, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_K2_GetRootComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000038, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_K2_GetRootComponent_ReturnValue_3) == 0x000048, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_K2_GetRootComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000050, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000060, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000068, "Member 'BP_ZipLineState_C_ExecuteUbergraph_BP_ZipLineState::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");

// Function BP_ZipLineState.BP_ZipLineState_C.GetJumpVector
// 0x0084 (0x0084 - 0x0000)
struct BP_ZipLineState_C_GetJumpVector final
{
public:
	struct FVector                                LookVector;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentVelocity;                                   // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32B4[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSpeedBoostActivated_ReturnValue;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32B5[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ZipLineState_C_GetJumpVector) == 0x000004, "Wrong alignment on BP_ZipLineState_C_GetJumpVector");
static_assert(sizeof(BP_ZipLineState_C_GetJumpVector) == 0x000084, "Wrong size on BP_ZipLineState_C_GetJumpVector");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, LookVector) == 0x000000, "Member 'BP_ZipLineState_C_GetJumpVector::LookVector' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CurrentVelocity) == 0x00000C, "Member 'BP_ZipLineState_C_GetJumpVector::CurrentVelocity' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, ReturnValue) == 0x000018, "Member 'BP_ZipLineState_C_GetJumpVector::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, Temp_bool_Variable) == 0x000024, "Member 'BP_ZipLineState_C_GetJumpVector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, Temp_float_Variable) == 0x000028, "Member 'BP_ZipLineState_C_GetJumpVector::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_GetSpeedBoostActivated_ReturnValue) == 0x00002C, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_GetSpeedBoostActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_VSizeXY_ReturnValue) == 0x000030, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_BreakVector_X) == 0x000034, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_BreakVector_Z) == 0x00003C, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, K2Node_Select_Default) == 0x000050, "Member 'BP_ZipLineState_C_GetJumpVector::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_Normal_ReturnValue) == 0x000054, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_BreakVector_X_1) == 0x00006C, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_BreakVector_Y_1) == 0x000070, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_BreakVector_Z_1) == 0x000074, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ZipLineState_C_GetJumpVector, CallFunc_MakeVector_ReturnValue_1) == 0x000078, "Member 'BP_ZipLineState_C_GetJumpVector::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

}

