#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LIB_PerkColors

#include "Basic.hpp"

#include "LIB_PerkColors_classes.hpp"
#include "LIB_PerkColors_parameters.hpp"


namespace CG
{

// Function LIB_PerkColors.LIB_PerkColors_C.PerkColorByState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPerkUsageType                          InPerkType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPerkTierState                          InPerkState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     OutBackground                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     OutBorder                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     OutIcon                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULIB_PerkColors_C::PerkColorByState(EPerkUsageType InPerkType, EPerkTierState InPerkState, class UObject* __WorldContext, struct FLinearColor* OutBackground, struct FLinearColor* OutBorder, struct FLinearColor* OutIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_PerkColors_C", "PerkColorByState");

	Params::LIB_PerkColors_C_PerkColorByState Parms{};

	Parms.InPerkType = InPerkType;
	Parms.InPerkState = InPerkState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutBackground != nullptr)
		*OutBackground = std::move(Parms.OutBackground);

	if (OutBorder != nullptr)
		*OutBorder = std::move(Parms.OutBorder);

	if (OutIcon != nullptr)
		*OutIcon = std::move(Parms.OutIcon);
}


// Function LIB_PerkColors.LIB_PerkColors_C.PerkColorFromType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPerkUsageType                          InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     OutColor                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULIB_PerkColors_C::PerkColorFromType(EPerkUsageType InType, class UObject* __WorldContext, struct FLinearColor* OutColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_PerkColors_C", "PerkColorFromType");

	Params::LIB_PerkColors_C_PerkColorFromType Parms{};

	Parms.InType = InType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutColor != nullptr)
		*OutColor = std::move(Parms.OutColor);
}

}

