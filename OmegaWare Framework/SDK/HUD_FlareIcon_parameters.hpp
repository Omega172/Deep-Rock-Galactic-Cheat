#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_FlareIcon

#include "Basic.hpp"

#include "ENUM_MenuColors_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function HUD_FlareIcon.HUD_FlareIcon_C.ExecuteUbergraph_HUD_FlareIcon
// 0x0058 (0x0058 - 0x0000)
struct HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3489[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 CurrentCount, class UInventoryComponent* Inventory)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348A[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryComponent*                    K2Node_CustomEvent_inventory_1;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CurrentCount;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_348B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    K2Node_CustomEvent_inventory;                      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348C[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon) == 0x000008, "Wrong alignment on HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon");
static_assert(sizeof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon) == 0x000058, "Wrong size on HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, EntryPoint) == 0x000000, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, Temp_bool_Variable) == 0x000020, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, Temp_float_Variable) == 0x000024, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, Temp_float_Variable_1) == 0x000028, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, K2Node_CustomEvent_Index) == 0x00002C, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, K2Node_CustomEvent_inventory_1) == 0x000030, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::K2Node_CustomEvent_inventory_1' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, K2Node_CustomEvent_CurrentCount) == 0x000038, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::K2Node_CustomEvent_CurrentCount' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, K2Node_CustomEvent_inventory) == 0x000040, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::K2Node_CustomEvent_inventory' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, K2Node_Event_IsDesignTime) == 0x00004D, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon, K2Node_Select_Default) == 0x000050, "Member 'HUD_FlareIcon_C_ExecuteUbergraph_HUD_FlareIcon::K2Node_Select_Default' has a wrong offset!");

// Function HUD_FlareIcon.HUD_FlareIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_FlareIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_FlareIcon_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_FlareIcon_C_PreConstruct");
static_assert(sizeof(HUD_FlareIcon_C_PreConstruct) == 0x000001, "Wrong size on HUD_FlareIcon_C_PreConstruct");
static_assert(offsetof(HUD_FlareIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_FlareIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_FlareIcon.HUD_FlareIcon_C.OnFlareCountChanged
// 0x0010 (0x0010 - 0x0000)
struct HUD_FlareIcon_C_OnFlareCountChanged final
{
public:
	int32                                         CurrentCount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_348D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    Param_Inventory;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_FlareIcon_C_OnFlareCountChanged) == 0x000008, "Wrong alignment on HUD_FlareIcon_C_OnFlareCountChanged");
static_assert(sizeof(HUD_FlareIcon_C_OnFlareCountChanged) == 0x000010, "Wrong size on HUD_FlareIcon_C_OnFlareCountChanged");
static_assert(offsetof(HUD_FlareIcon_C_OnFlareCountChanged, CurrentCount) == 0x000000, "Member 'HUD_FlareIcon_C_OnFlareCountChanged::CurrentCount' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_OnFlareCountChanged, Param_Inventory) == 0x000008, "Member 'HUD_FlareIcon_C_OnFlareCountChanged::Param_Inventory' has a wrong offset!");

// Function HUD_FlareIcon.HUD_FlareIcon_C.Init
// 0x0010 (0x0010 - 0x0000)
struct HUD_FlareIcon_C_Init final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_348E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryComponent*                    Param_Inventory;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_FlareIcon_C_Init) == 0x000008, "Wrong alignment on HUD_FlareIcon_C_Init");
static_assert(sizeof(HUD_FlareIcon_C_Init) == 0x000010, "Wrong size on HUD_FlareIcon_C_Init");
static_assert(offsetof(HUD_FlareIcon_C_Init, Param_Index) == 0x000000, "Member 'HUD_FlareIcon_C_Init::Param_Index' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_Init, Param_Inventory) == 0x000008, "Member 'HUD_FlareIcon_C_Init::Param_Inventory' has a wrong offset!");

// Function HUD_FlareIcon.HUD_FlareIcon_C.SetProgress
// 0x0048 (0x0048 - 0x0000)
struct HUD_FlareIcon_C_SetProgress final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_348F[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3490[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_FlareIcon_C_SetProgress) == 0x000004, "Wrong alignment on HUD_FlareIcon_C_SetProgress");
static_assert(sizeof(HUD_FlareIcon_C_SetProgress) == 0x000048, "Wrong size on HUD_FlareIcon_C_SetProgress");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, Percent) == 0x000000, "Member 'HUD_FlareIcon_C_SetProgress::Percent' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, Temp_bool_Variable) == 0x000004, "Member 'HUD_FlareIcon_C_SetProgress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, Temp_byte_Variable) == 0x000005, "Member 'HUD_FlareIcon_C_SetProgress::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, Temp_byte_Variable_1) == 0x000006, "Member 'HUD_FlareIcon_C_SetProgress::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000007, "Member 'HUD_FlareIcon_C_SetProgress::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'HUD_FlareIcon_C_SetProgress::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'HUD_FlareIcon_C_SetProgress::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, CallFunc_MenuColors_OutputColor) == 0x00000C, "Member 'HUD_FlareIcon_C_SetProgress::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, K2Node_Select_Default) == 0x00001C, "Member 'HUD_FlareIcon_C_SetProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, CallFunc_MenuColors_OutputColor_1) == 0x000020, "Member 'HUD_FlareIcon_C_SetProgress::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, CallFunc_Ease_ReturnValue) == 0x000030, "Member 'HUD_FlareIcon_C_SetProgress::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, CallFunc_LinearColorLerp_ReturnValue) == 0x000034, "Member 'HUD_FlareIcon_C_SetProgress::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_FlareIcon_C_SetProgress, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'HUD_FlareIcon_C_SetProgress::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

}

