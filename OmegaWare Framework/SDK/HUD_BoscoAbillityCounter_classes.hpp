#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_BoscoAbillityCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_BoscoAbillityCounter.HUD_BoscoAbillityCounter_C
// 0x0028 (0x02A8 - 0x0280)
class UHUD_BoscoAbillityCounter_C final : public UFSDUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         FlareBox;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UHUD_BoscoAbillityIcon_C*>       Icons;                                             // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          Loaded;                                            // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_HUD_BoscoAbillityCounter(int32 EntryPoint);
	void OnAbilityDataUpdated_Event_0(class UBoscoAbillityComponent* Ability);
	void OnBoscoChanged(class ABosco* Bosco);
	void OnAbillityChargeProgress(float AProgress, int32 ANextIndex);
	void OnItemsLoaded();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void CreateIcons(int32 IconCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_BoscoAbillityCounter_C">();
	}
	static class UHUD_BoscoAbillityCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_BoscoAbillityCounter_C>();
	}
};
static_assert(alignof(UHUD_BoscoAbillityCounter_C) == 0x000008, "Wrong alignment on UHUD_BoscoAbillityCounter_C");
static_assert(sizeof(UHUD_BoscoAbillityCounter_C) == 0x0002A8, "Wrong size on UHUD_BoscoAbillityCounter_C");
static_assert(offsetof(UHUD_BoscoAbillityCounter_C, UberGraphFrame) == 0x000280, "Member 'UHUD_BoscoAbillityCounter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_BoscoAbillityCounter_C, FlareBox) == 0x000288, "Member 'UHUD_BoscoAbillityCounter_C::FlareBox' has a wrong offset!");
static_assert(offsetof(UHUD_BoscoAbillityCounter_C, Icons) == 0x000290, "Member 'UHUD_BoscoAbillityCounter_C::Icons' has a wrong offset!");
static_assert(offsetof(UHUD_BoscoAbillityCounter_C, Loaded) == 0x0002A0, "Member 'UHUD_BoscoAbillityCounter_C::Loaded' has a wrong offset!");

}

