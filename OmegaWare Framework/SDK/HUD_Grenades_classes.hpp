#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Grenades

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_Grenades.HUD_Grenades_C
// 0x0038 (0x02B8 - 0x0280)
class UHUD_Grenades_C final : public UFSDUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             DATA_GrenadeCount;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_GrenadeIcon_C*                     HUD_GrenadeIcon;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_AdvancedLabel_C*                    UI_AdvancedLabel;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInventoryComponent*                    Inventory;                                         // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AThrownGrenadeItem*                     GrenadeItem;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LaserpointerPressed;                               // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ItemEquipped;                                      // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_HUD_Grenades(int32 EntryPoint);
	void OnLaserPointerReleased();
	void OnLaserPointerPressed();
	void Update_Visibility();
	void OnItemUnequipped_Event(class AItem* Item);
	void OnItemEquipped_Event(class AItem* Item);
	void Setup_Dynamic_HUD();
	void Construct();
	void OnGrenadeCountChanged(int32 CurrentCount);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_Grenades_C">();
	}
	static class UHUD_Grenades_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_Grenades_C>();
	}
};
static_assert(alignof(UHUD_Grenades_C) == 0x000008, "Wrong alignment on UHUD_Grenades_C");
static_assert(sizeof(UHUD_Grenades_C) == 0x0002B8, "Wrong size on UHUD_Grenades_C");
static_assert(offsetof(UHUD_Grenades_C, UberGraphFrame) == 0x000280, "Member 'UHUD_Grenades_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_Grenades_C, DATA_GrenadeCount) == 0x000288, "Member 'UHUD_Grenades_C::DATA_GrenadeCount' has a wrong offset!");
static_assert(offsetof(UHUD_Grenades_C, HUD_GrenadeIcon) == 0x000290, "Member 'UHUD_Grenades_C::HUD_GrenadeIcon' has a wrong offset!");
static_assert(offsetof(UHUD_Grenades_C, UI_AdvancedLabel) == 0x000298, "Member 'UHUD_Grenades_C::UI_AdvancedLabel' has a wrong offset!");
static_assert(offsetof(UHUD_Grenades_C, Inventory) == 0x0002A0, "Member 'UHUD_Grenades_C::Inventory' has a wrong offset!");
static_assert(offsetof(UHUD_Grenades_C, GrenadeItem) == 0x0002A8, "Member 'UHUD_Grenades_C::GrenadeItem' has a wrong offset!");
static_assert(offsetof(UHUD_Grenades_C, LaserpointerPressed) == 0x0002B0, "Member 'UHUD_Grenades_C::LaserpointerPressed' has a wrong offset!");
static_assert(offsetof(UHUD_Grenades_C, ItemEquipped) == 0x0002B1, "Member 'UHUD_Grenades_C::ItemEquipped' has a wrong offset!");

}

