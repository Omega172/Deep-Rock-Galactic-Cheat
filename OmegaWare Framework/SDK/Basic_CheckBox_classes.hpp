#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_CheckBox

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "Engine_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass Basic_CheckBox.Basic_CheckBox_C
// 0x00A0 (0x0300 - 0x0260)
class UBasic_CheckBox_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TickShow;                                          // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Click;                                             // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Checkbox_Border;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Checkbox_Button;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CheckBox_Tick;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Checkbox_Undetermined;                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CheckBoxText;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horizontal;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_CheckBox;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Text;                                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        StateSwitcher;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCheckStateChanged;                               // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Size;                                              // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3411[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x02D8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          UpperCase;                                         // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	ENUM_MenuColors                               TextColor;                                         // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ECheckBoxState                                State;                                             // 0x02F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               FrameColor;                                        // 0x02F3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               HoveredColor;                                      // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3412[0x3];                                     // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TextWidth;                                         // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnCheckStateChanged__DelegateSignature(bool Param_IsChecked);
	void ExecuteUbergraph_Basic_CheckBox(int32 EntryPoint);
	void OnClicked(bool InChecked);
	void ClickButton();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	bool GetIsChecked();
	void SetIsChecked(bool InIsChecked);
	void SetText(const class FText& InText, bool InUpperCase);
	void GetUpperCased(bool* Param_UpperCase);
	void SetState(ECheckBoxState InState);
	void GetState(ECheckBoxState* Param_State);
	void SetSize(float InSize);
	void SetHovered(bool InHovered);
	void SetTextWidth(float InWidthOverride);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Basic_CheckBox_C">();
	}
	static class UBasic_CheckBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBasic_CheckBox_C>();
	}
};
static_assert(alignof(UBasic_CheckBox_C) == 0x000008, "Wrong alignment on UBasic_CheckBox_C");
static_assert(sizeof(UBasic_CheckBox_C) == 0x000300, "Wrong size on UBasic_CheckBox_C");
static_assert(offsetof(UBasic_CheckBox_C, UberGraphFrame) == 0x000260, "Member 'UBasic_CheckBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, TickShow) == 0x000268, "Member 'UBasic_CheckBox_C::TickShow' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, Click) == 0x000270, "Member 'UBasic_CheckBox_C::Click' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, Checkbox_Border) == 0x000278, "Member 'UBasic_CheckBox_C::Checkbox_Border' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, Checkbox_Button) == 0x000280, "Member 'UBasic_CheckBox_C::Checkbox_Button' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, CheckBox_Tick) == 0x000288, "Member 'UBasic_CheckBox_C::CheckBox_Tick' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, Checkbox_Undetermined) == 0x000290, "Member 'UBasic_CheckBox_C::Checkbox_Undetermined' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, CheckBoxText) == 0x000298, "Member 'UBasic_CheckBox_C::CheckBoxText' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, Horizontal) == 0x0002A0, "Member 'UBasic_CheckBox_C::Horizontal' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, SizeBox_CheckBox) == 0x0002A8, "Member 'UBasic_CheckBox_C::SizeBox_CheckBox' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, SizeBox_Text) == 0x0002B0, "Member 'UBasic_CheckBox_C::SizeBox_Text' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, StateSwitcher) == 0x0002B8, "Member 'UBasic_CheckBox_C::StateSwitcher' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, OnCheckStateChanged) == 0x0002C0, "Member 'UBasic_CheckBox_C::OnCheckStateChanged' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, Size) == 0x0002D0, "Member 'UBasic_CheckBox_C::Size' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, IsChecked) == 0x0002D4, "Member 'UBasic_CheckBox_C::IsChecked' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, Text) == 0x0002D8, "Member 'UBasic_CheckBox_C::Text' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, UpperCase) == 0x0002F0, "Member 'UBasic_CheckBox_C::UpperCase' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, TextColor) == 0x0002F1, "Member 'UBasic_CheckBox_C::TextColor' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, State) == 0x0002F2, "Member 'UBasic_CheckBox_C::State' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, FrameColor) == 0x0002F3, "Member 'UBasic_CheckBox_C::FrameColor' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, HoveredColor) == 0x0002F4, "Member 'UBasic_CheckBox_C::HoveredColor' has a wrong offset!");
static_assert(offsetof(UBasic_CheckBox_C, TextWidth) == 0x0002F8, "Member 'UBasic_CheckBox_C::TextWidth' has a wrong offset!");

}

