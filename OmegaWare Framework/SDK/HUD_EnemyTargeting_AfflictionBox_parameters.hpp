#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_EnemyTargeting_AfflictionBox

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace CG::Params
{

// Function HUD_EnemyTargeting_AfflictionBox.HUD_EnemyTargeting_AfflictionBox_C.ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox
// 0x0080 (0x0080 - 0x0000)
struct HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_InAfflictionTarget;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnAffliction*                        K2Node_CustomEvent_affliction_1;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnAfflictionComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnAffliction*                        K2Node_CustomEvent_affliction;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3480[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UPawnAffliction>         CallFunc_Array_Get_Item;                           // 0x0038(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3481[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnAffliction*                        K2Node_DynamicCast_AsPawn_Affliction;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox");
static_assert(sizeof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox) == 0x000080, "Wrong size on HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, EntryPoint) == 0x000000, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, Temp_int_Array_Index_Variable) == 0x000004, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, K2Node_CustomEvent_InAfflictionTarget) == 0x000010, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::K2Node_CustomEvent_InAfflictionTarget' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, K2Node_CustomEvent_affliction_1) == 0x000018, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::K2Node_CustomEvent_affliction_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, K2Node_CustomEvent_affliction) == 0x000028, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::K2Node_CustomEvent_affliction' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, K2Node_Event_IsDesignTime) == 0x000030, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, CallFunc_Array_Get_Item) == 0x000038, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000068, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, K2Node_DynamicCast_AsPawn_Affliction) == 0x000070, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::K2Node_DynamicCast_AsPawn_Affliction' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ExecuteUbergraph_HUD_EnemyTargeting_AfflictionBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function HUD_EnemyTargeting_AfflictionBox.HUD_EnemyTargeting_AfflictionBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_EnemyTargeting_AfflictionBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_AfflictionBox_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_EnemyTargeting_AfflictionBox_C_PreConstruct");
static_assert(sizeof(HUD_EnemyTargeting_AfflictionBox_C_PreConstruct) == 0x000001, "Wrong size on HUD_EnemyTargeting_AfflictionBox_C_PreConstruct");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_EnemyTargeting_AfflictionBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_EnemyTargeting_AfflictionBox.HUD_EnemyTargeting_AfflictionBox_C.OnAfflictionDeactivatedEvent_Event
// 0x0008 (0x0008 - 0x0000)
struct HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionDeactivatedEvent_Event final
{
public:
	class UPawnAffliction*                        Affliction;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionDeactivatedEvent_Event) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionDeactivatedEvent_Event");
static_assert(sizeof(HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionDeactivatedEvent_Event) == 0x000008, "Wrong size on HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionDeactivatedEvent_Event");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionDeactivatedEvent_Event, Affliction) == 0x000000, "Member 'HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionDeactivatedEvent_Event::Affliction' has a wrong offset!");

// Function HUD_EnemyTargeting_AfflictionBox.HUD_EnemyTargeting_AfflictionBox_C.OnAfflictionActivatedEvent_Event
// 0x0008 (0x0008 - 0x0000)
struct HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionActivatedEvent_Event final
{
public:
	class UPawnAffliction*                        Affliction;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionActivatedEvent_Event) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionActivatedEvent_Event");
static_assert(sizeof(HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionActivatedEvent_Event) == 0x000008, "Wrong size on HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionActivatedEvent_Event");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionActivatedEvent_Event, Affliction) == 0x000000, "Member 'HUD_EnemyTargeting_AfflictionBox_C_OnAfflictionActivatedEvent_Event::Affliction' has a wrong offset!");

// Function HUD_EnemyTargeting_AfflictionBox.HUD_EnemyTargeting_AfflictionBox_C.SetTarget
// 0x0008 (0x0008 - 0x0000)
struct HUD_EnemyTargeting_AfflictionBox_C_SetTarget final
{
public:
	class AActor*                                 InAfflictionTarget;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_AfflictionBox_C_SetTarget) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_AfflictionBox_C_SetTarget");
static_assert(sizeof(HUD_EnemyTargeting_AfflictionBox_C_SetTarget) == 0x000008, "Wrong size on HUD_EnemyTargeting_AfflictionBox_C_SetTarget");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetTarget, InAfflictionTarget) == 0x000000, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetTarget::InAfflictionTarget' has a wrong offset!");

// Function HUD_EnemyTargeting_AfflictionBox.HUD_EnemyTargeting_AfflictionBox_C.ToggleAffliction
// 0x0048 (0x0048 - 0x0000)
struct HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction final
{
public:
	class UPawnAffliction*                        InAffliction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InVisible;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3482[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUD_EnemyTargeting_Affliction_C*       Widget;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3483[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHUD_EnemyTargeting_Affliction_C*       CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHUD_EnemyTargeting_Affliction_C*       CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction");
static_assert(sizeof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction) == 0x000048, "Wrong size on HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, InAffliction) == 0x000000, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::InAffliction' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, InVisible) == 0x000008, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::InVisible' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, Widget) == 0x000010, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::Widget' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_Array_Contains_ReturnValue) == 0x00001A, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_Create_ReturnValue) == 0x000030, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_Map_Find_Value) == 0x000038, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleAffliction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function HUD_EnemyTargeting_AfflictionBox.HUD_EnemyTargeting_AfflictionBox_C.ToggleIgnoreAffliction
// 0x0010 (0x0010 - 0x0000)
struct HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction final
{
public:
	class UPawnAffliction*                        Affliction;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldIgnore;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3484[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction");
static_assert(sizeof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction) == 0x000010, "Wrong size on HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction, Affliction) == 0x000000, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction::Affliction' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction, ShouldIgnore) == 0x000008, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction::ShouldIgnore' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction, CallFunc_Array_RemoveItem_ReturnValue) == 0x00000A, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAffliction::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function HUD_EnemyTargeting_AfflictionBox.HUD_EnemyTargeting_AfflictionBox_C.ToggleIgnoreAfflictions
// 0x0030 (0x0030 - 0x0000)
struct HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions final
{
public:
	TArray<class UPawnAffliction*>                Affliction;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ShouldIgnore;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3485[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnAffliction*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3486[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions");
static_assert(sizeof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions) == 0x000030, "Wrong size on HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions, Affliction) == 0x000000, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions::Affliction' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions, ShouldIgnore) == 0x000010, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions::ShouldIgnore' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions, Temp_int_Array_Index_Variable) == 0x000018, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions, CallFunc_Array_Get_Item) == 0x000020, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'HUD_EnemyTargeting_AfflictionBox_C_ToggleIgnoreAfflictions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function HUD_EnemyTargeting_AfflictionBox.HUD_EnemyTargeting_AfflictionBox_C.SetAfflictionComponent
// 0x0080 (0x0080 - 0x0000)
struct HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent final
{
public:
	class UPawnAfflictionComponent*               InAfflictionComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3487[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPawnAffliction* Affliction)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPawnAffliction* Affliction)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class UPawnAffliction*>                CallFunc_GetActiveAfflictions_ReturnValue;         // 0x0038(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3488[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnAffliction*                        CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPawnAffliction* Affliction)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UPawnAffliction* Affliction)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent");
static_assert(sizeof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent) == 0x000080, "Wrong size on HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, InAfflictionComponent) == 0x000000, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::InAfflictionComponent' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_GetActiveAfflictions_ReturnValue) == 0x000038, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_GetActiveAfflictions_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_Array_Get_Item) == 0x000050, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_SelectVisibility_IsVisible) == 0x00005D, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_SelectVisibility_VisibilityChanged) == 0x00005E, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, CallFunc_SelectVisibility_New_Visibility) == 0x00005F, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000060, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'HUD_EnemyTargeting_AfflictionBox_C_SetAfflictionComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

}

