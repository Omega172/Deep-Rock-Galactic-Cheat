#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PlayerSpeaking_WithName

#include "Basic.hpp"

#include "ENUM_MenuColors_structs.hpp"
#include "UMG_structs.hpp"


namespace CG::Params
{

// Function UI_PlayerSpeaking_WithName.UI_PlayerSpeaking_WithName_C.ExecuteUbergraph_UI_PlayerSpeaking_WithName
// 0x0038 (0x0038 - 0x0000)
struct UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetIsTalking_OutTalking;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C11[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_NewName;                        // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsTalking;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIsTalking_OutTalking_1;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName) == 0x000008, "Wrong alignment on UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName");
static_assert(sizeof(UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName) == 0x000038, "Wrong size on UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName, EntryPoint) == 0x000000, "Member 'UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName, CallFunc_SetIsTalking_OutTalking) == 0x000004, "Member 'UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName::CallFunc_SetIsTalking_OutTalking' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName, K2Node_CustomEvent_NewName) == 0x000008, "Member 'UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName::K2Node_CustomEvent_NewName' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName, K2Node_CustomEvent_IsTalking) == 0x000031, "Member 'UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName::K2Node_CustomEvent_IsTalking' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName, CallFunc_SetIsTalking_OutTalking_1) == 0x000032, "Member 'UI_PlayerSpeaking_WithName_C_ExecuteUbergraph_UI_PlayerSpeaking_WithName::CallFunc_SetIsTalking_OutTalking_1' has a wrong offset!");

// Function UI_PlayerSpeaking_WithName.UI_PlayerSpeaking_WithName_C.OnTalkingChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_PlayerSpeaking_WithName_C_OnTalkingChanged final
{
public:
	bool                                          Param_IsTalking;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PlayerSpeaking_WithName_C_OnTalkingChanged) == 0x000001, "Wrong alignment on UI_PlayerSpeaking_WithName_C_OnTalkingChanged");
static_assert(sizeof(UI_PlayerSpeaking_WithName_C_OnTalkingChanged) == 0x000001, "Wrong size on UI_PlayerSpeaking_WithName_C_OnTalkingChanged");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_OnTalkingChanged, Param_IsTalking) == 0x000000, "Member 'UI_PlayerSpeaking_WithName_C_OnTalkingChanged::Param_IsTalking' has a wrong offset!");

// Function UI_PlayerSpeaking_WithName.UI_PlayerSpeaking_WithName_C.SetPlayerName
// 0x0010 (0x0010 - 0x0000)
struct UI_PlayerSpeaking_WithName_C_SetPlayerName final
{
public:
	class FString                                 NewName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PlayerSpeaking_WithName_C_SetPlayerName) == 0x000008, "Wrong alignment on UI_PlayerSpeaking_WithName_C_SetPlayerName");
static_assert(sizeof(UI_PlayerSpeaking_WithName_C_SetPlayerName) == 0x000010, "Wrong size on UI_PlayerSpeaking_WithName_C_SetPlayerName");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerName, NewName) == 0x000000, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerName::NewName' has a wrong offset!");

// Function UI_PlayerSpeaking_WithName.UI_PlayerSpeaking_WithName_C.SetIsTalking
// 0x000A (0x000A - 0x0000)
struct UI_PlayerSpeaking_WithName_C_SetIsTalking final
{
public:
	bool                                          Param_IsTalking;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OutTalking;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_1;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PlayerSpeaking_WithName_C_SetIsTalking) == 0x000001, "Wrong alignment on UI_PlayerSpeaking_WithName_C_SetIsTalking");
static_assert(sizeof(UI_PlayerSpeaking_WithName_C_SetIsTalking) == 0x00000A, "Wrong size on UI_PlayerSpeaking_WithName_C_SetIsTalking");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, Param_IsTalking) == 0x000000, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::Param_IsTalking' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, OutTalking) == 0x000001, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::OutTalking' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, Temp_bool_Variable) == 0x000002, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, Temp_byte_Variable) == 0x000003, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, Temp_byte_Variable_1) == 0x000004, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, Temp_bool_Variable_1) == 0x000005, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, Temp_byte_Variable_2) == 0x000006, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, Temp_byte_Variable_3) == 0x000007, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, K2Node_Select_Default) == 0x000008, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetIsTalking, K2Node_Select_Default_1) == 0x000009, "Member 'UI_PlayerSpeaking_WithName_C_SetIsTalking::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_PlayerSpeaking_WithName.UI_PlayerSpeaking_WithName_C.SetPlayerState
// 0x0068 (0x0068 - 0x0000)
struct UI_PlayerSpeaking_WithName_C_SetPlayerState final
{
public:
	class AFSDPlayerState*                        InPlayerState;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C12[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsTalking)>               K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsTalking)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C13[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& NewName)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_SetIsTalking_OutTalking;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C14[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& NewName)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UI_PlayerSpeaking_WithName_C_SetPlayerState) == 0x000008, "Wrong alignment on UI_PlayerSpeaking_WithName_C_SetPlayerState");
static_assert(sizeof(UI_PlayerSpeaking_WithName_C_SetPlayerState) == 0x000068, "Wrong size on UI_PlayerSpeaking_WithName_C_SetPlayerState");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, InPlayerState) == 0x000000, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::InPlayerState' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00002C, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, K2Node_CreateDelegate_OutputDelegate_2) == 0x000040, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, CallFunc_SetIsTalking_OutTalking) == 0x000050, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::CallFunc_SetIsTalking_OutTalking' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetPlayerState, K2Node_CreateDelegate_OutputDelegate_3) == 0x000054, "Member 'UI_PlayerSpeaking_WithName_C_SetPlayerState::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function UI_PlayerSpeaking_WithName.UI_PlayerSpeaking_WithName_C.SetLineVisible
// 0x0004 (0x0004 - 0x0000)
struct UI_PlayerSpeaking_WithName_C_SetLineVisible final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PlayerSpeaking_WithName_C_SetLineVisible) == 0x000001, "Wrong alignment on UI_PlayerSpeaking_WithName_C_SetLineVisible");
static_assert(sizeof(UI_PlayerSpeaking_WithName_C_SetLineVisible) == 0x000004, "Wrong size on UI_PlayerSpeaking_WithName_C_SetLineVisible");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetLineVisible, InVisible) == 0x000000, "Member 'UI_PlayerSpeaking_WithName_C_SetLineVisible::InVisible' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetLineVisible, CallFunc_SelectVisibility_IsVisible) == 0x000001, "Member 'UI_PlayerSpeaking_WithName_C_SetLineVisible::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetLineVisible, CallFunc_SelectVisibility_VisibilityChanged) == 0x000002, "Member 'UI_PlayerSpeaking_WithName_C_SetLineVisible::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_WithName_C_SetLineVisible, CallFunc_SelectVisibility_New_Visibility) == 0x000003, "Member 'UI_PlayerSpeaking_WithName_C_SetLineVisible::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

}

