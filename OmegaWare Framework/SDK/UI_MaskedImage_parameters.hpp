#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_MaskedImage

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function UI_MaskedImage.UI_MaskedImage_C.ExecuteUbergraph_UI_MaskedImage
// 0x0008 (0x0008 - 0x0000)
struct UI_MaskedImage_C_ExecuteUbergraph_UI_MaskedImage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_MaskedImage_C_ExecuteUbergraph_UI_MaskedImage) == 0x000004, "Wrong alignment on UI_MaskedImage_C_ExecuteUbergraph_UI_MaskedImage");
static_assert(sizeof(UI_MaskedImage_C_ExecuteUbergraph_UI_MaskedImage) == 0x000008, "Wrong size on UI_MaskedImage_C_ExecuteUbergraph_UI_MaskedImage");
static_assert(offsetof(UI_MaskedImage_C_ExecuteUbergraph_UI_MaskedImage, EntryPoint) == 0x000000, "Member 'UI_MaskedImage_C_ExecuteUbergraph_UI_MaskedImage::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_ExecuteUbergraph_UI_MaskedImage, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_MaskedImage_C_ExecuteUbergraph_UI_MaskedImage::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_MaskedImage.UI_MaskedImage_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_MaskedImage_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_MaskedImage_C_PreConstruct) == 0x000001, "Wrong alignment on UI_MaskedImage_C_PreConstruct");
static_assert(sizeof(UI_MaskedImage_C_PreConstruct) == 0x000001, "Wrong size on UI_MaskedImage_C_PreConstruct");
static_assert(offsetof(UI_MaskedImage_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_MaskedImage_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_MaskedImage.UI_MaskedImage_C.SetImage
// 0x0028 (0x0028 - 0x0000)
struct UI_MaskedImage_C_SetImage final
{
public:
	class UTexture2D*                             Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Match_Size;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9F[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_MaskedImage_C_SetImage) == 0x000008, "Wrong alignment on UI_MaskedImage_C_SetImage");
static_assert(sizeof(UI_MaskedImage_C_SetImage) == 0x000028, "Wrong size on UI_MaskedImage_C_SetImage");
static_assert(offsetof(UI_MaskedImage_C_SetImage, Value) == 0x000000, "Member 'UI_MaskedImage_C_SetImage::Value' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetImage, Match_Size) == 0x000008, "Member 'UI_MaskedImage_C_SetImage::Match_Size' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetImage, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x00000C, "Member 'UI_MaskedImage_C_SetImage::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetImage, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000010, "Member 'UI_MaskedImage_C_SetImage::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetImage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'UI_MaskedImage_C_SetImage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetImage, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000018, "Member 'UI_MaskedImage_C_SetImage::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetImage, CallFunc_MakeVector2D_ReturnValue) == 0x00001C, "Member 'UI_MaskedImage_C_SetImage::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetImage, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'UI_MaskedImage_C_SetImage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetImage, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'UI_MaskedImage_C_SetImage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function UI_MaskedImage.UI_MaskedImage_C.SetImageSize
// 0x0008 (0x0008 - 0x0000)
struct UI_MaskedImage_C_SetImageSize final
{
public:
	struct FVector2D                              DesiredSize;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MaskedImage_C_SetImageSize) == 0x000004, "Wrong alignment on UI_MaskedImage_C_SetImageSize");
static_assert(sizeof(UI_MaskedImage_C_SetImageSize) == 0x000008, "Wrong size on UI_MaskedImage_C_SetImageSize");
static_assert(offsetof(UI_MaskedImage_C_SetImageSize, DesiredSize) == 0x000000, "Member 'UI_MaskedImage_C_SetImageSize::DesiredSize' has a wrong offset!");

// Function UI_MaskedImage.UI_MaskedImage_C.SetImageTint
// 0x0028 (0x0028 - 0x0000)
struct UI_MaskedImage_C_SetImageTint final
{
public:
	struct FSlateColor                            TintColor;                                         // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UI_MaskedImage_C_SetImageTint) == 0x000008, "Wrong alignment on UI_MaskedImage_C_SetImageTint");
static_assert(sizeof(UI_MaskedImage_C_SetImageTint) == 0x000028, "Wrong size on UI_MaskedImage_C_SetImageTint");
static_assert(offsetof(UI_MaskedImage_C_SetImageTint, TintColor) == 0x000000, "Member 'UI_MaskedImage_C_SetImageTint::TintColor' has a wrong offset!");

// Function UI_MaskedImage.UI_MaskedImage_C.SetMask
// 0x0028 (0x0028 - 0x0000)
struct UI_MaskedImage_C_SetMask final
{
public:
	class UTexture*                               Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MaskedImage_C_SetMask) == 0x000008, "Wrong alignment on UI_MaskedImage_C_SetMask");
static_assert(sizeof(UI_MaskedImage_C_SetMask) == 0x000028, "Wrong size on UI_MaskedImage_C_SetMask");
static_assert(offsetof(UI_MaskedImage_C_SetMask, Value) == 0x000000, "Member 'UI_MaskedImage_C_SetMask::Value' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMask, Temp_bool_Variable) == 0x000008, "Member 'UI_MaskedImage_C_SetMask::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMask, Temp_object_Variable) == 0x000010, "Member 'UI_MaskedImage_C_SetMask::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMask, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UI_MaskedImage_C_SetMask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMask, K2Node_Select_Default) == 0x000020, "Member 'UI_MaskedImage_C_SetMask::K2Node_Select_Default' has a wrong offset!");

// Function UI_MaskedImage.UI_MaskedImage_C.SetMaskInverted
// 0x0010 (0x0010 - 0x0000)
struct UI_MaskedImage_C_SetMaskInverted final
{
public:
	bool                                          Invert;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA2[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MaskedImage_C_SetMaskInverted) == 0x000004, "Wrong alignment on UI_MaskedImage_C_SetMaskInverted");
static_assert(sizeof(UI_MaskedImage_C_SetMaskInverted) == 0x000010, "Wrong size on UI_MaskedImage_C_SetMaskInverted");
static_assert(offsetof(UI_MaskedImage_C_SetMaskInverted, Invert) == 0x000000, "Member 'UI_MaskedImage_C_SetMaskInverted::Invert' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMaskInverted, Temp_bool_Variable) == 0x000001, "Member 'UI_MaskedImage_C_SetMaskInverted::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMaskInverted, Temp_float_Variable) == 0x000004, "Member 'UI_MaskedImage_C_SetMaskInverted::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMaskInverted, Temp_float_Variable_1) == 0x000008, "Member 'UI_MaskedImage_C_SetMaskInverted::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMaskInverted, K2Node_Select_Default) == 0x00000C, "Member 'UI_MaskedImage_C_SetMaskInverted::K2Node_Select_Default' has a wrong offset!");

// Function UI_MaskedImage.UI_MaskedImage_C.SetDrawAs
// 0x00B0 (0x00B0 - 0x0000)
struct UI_MaskedImage_C_SetDrawAs final
{
public:
	ESlateBrushDrawType                           InBrush_DrawAs;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Margin;                                            // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA4[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0028(0x0088)()
};
static_assert(alignof(UI_MaskedImage_C_SetDrawAs) == 0x000008, "Wrong alignment on UI_MaskedImage_C_SetDrawAs");
static_assert(sizeof(UI_MaskedImage_C_SetDrawAs) == 0x0000B0, "Wrong size on UI_MaskedImage_C_SetDrawAs");
static_assert(offsetof(UI_MaskedImage_C_SetDrawAs, InBrush_DrawAs) == 0x000000, "Member 'UI_MaskedImage_C_SetDrawAs::InBrush_DrawAs' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetDrawAs, Margin) == 0x000004, "Member 'UI_MaskedImage_C_SetDrawAs::Margin' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetDrawAs, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'UI_MaskedImage_C_SetDrawAs::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetDrawAs, K2Node_MakeStruct_Margin) == 0x000018, "Member 'UI_MaskedImage_C_SetDrawAs::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetDrawAs, K2Node_MakeStruct_SlateBrush) == 0x000028, "Member 'UI_MaskedImage_C_SetDrawAs::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function UI_MaskedImage.UI_MaskedImage_C.UpdateMaterial
// 0x0010 (0x0010 - 0x0000)
struct UI_MaskedImage_C_UpdateMaterial final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MaskedImage_C_UpdateMaterial) == 0x000008, "Wrong alignment on UI_MaskedImage_C_UpdateMaterial");
static_assert(sizeof(UI_MaskedImage_C_UpdateMaterial) == 0x000010, "Wrong size on UI_MaskedImage_C_UpdateMaterial");
static_assert(offsetof(UI_MaskedImage_C_UpdateMaterial, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UI_MaskedImage_C_UpdateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_UpdateMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'UI_MaskedImage_C_UpdateMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function UI_MaskedImage.UI_MaskedImage_C.SetMaskBlack
// 0x0010 (0x0010 - 0x0000)
struct UI_MaskedImage_C_SetMaskBlack final
{
public:
	bool                                          Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_MaskedImage_C_SetMaskBlack) == 0x000004, "Wrong alignment on UI_MaskedImage_C_SetMaskBlack");
static_assert(sizeof(UI_MaskedImage_C_SetMaskBlack) == 0x000010, "Wrong size on UI_MaskedImage_C_SetMaskBlack");
static_assert(offsetof(UI_MaskedImage_C_SetMaskBlack, Param_Index) == 0x000000, "Member 'UI_MaskedImage_C_SetMaskBlack::Param_Index' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMaskBlack, Temp_bool_Variable) == 0x000001, "Member 'UI_MaskedImage_C_SetMaskBlack::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMaskBlack, Temp_float_Variable) == 0x000004, "Member 'UI_MaskedImage_C_SetMaskBlack::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMaskBlack, Temp_float_Variable_1) == 0x000008, "Member 'UI_MaskedImage_C_SetMaskBlack::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_MaskedImage_C_SetMaskBlack, K2Node_Select_Default) == 0x00000C, "Member 'UI_MaskedImage_C_SetMaskBlack::K2Node_Select_Default' has a wrong offset!");

}

