#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_SeasonChallengeIcon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace CG::Params
{

// Function ITM_SeasonChallengeIcon.ITM_SeasonChallengeIcon_C.ExecuteUbergraph_ITM_SeasonChallengeIcon
// 0x0030 (0x0030 - 0x0000)
struct ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_InHovered;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                             K2Node_CustomEvent_Icon;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon) == 0x000008, "Wrong alignment on ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon");
static_assert(sizeof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon) == 0x000030, "Wrong size on ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon, EntryPoint) == 0x000000, "Member 'ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon, Temp_byte_Variable) == 0x000004, "Member 'ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon, Temp_byte_Variable_1) == 0x000005, "Member 'ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon, Temp_bool_Variable) == 0x000006, "Member 'ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon, K2Node_CustomEvent_InHovered) == 0x000007, "Member 'ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon::K2Node_CustomEvent_InHovered' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon, K2Node_CustomEvent_Icon) == 0x000008, "Member 'ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon, K2Node_CustomEvent_Color) == 0x000010, "Member 'ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon, K2Node_Select_Default) == 0x000028, "Member 'ITM_SeasonChallengeIcon_C_ExecuteUbergraph_ITM_SeasonChallengeIcon::K2Node_Select_Default' has a wrong offset!");

// Function ITM_SeasonChallengeIcon.ITM_SeasonChallengeIcon_C.SetIconHovered
// 0x0020 (0x0020 - 0x0000)
struct ITM_SeasonChallengeIcon_C_SetIconHovered final
{
public:
	bool                                          InHovered;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SeasonChallengeIcon_C_SetIconHovered) == 0x000008, "Wrong alignment on ITM_SeasonChallengeIcon_C_SetIconHovered");
static_assert(sizeof(ITM_SeasonChallengeIcon_C_SetIconHovered) == 0x000020, "Wrong size on ITM_SeasonChallengeIcon_C_SetIconHovered");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_SetIconHovered, InHovered) == 0x000000, "Member 'ITM_SeasonChallengeIcon_C_SetIconHovered::InHovered' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_SetIconHovered, Icon) == 0x000008, "Member 'ITM_SeasonChallengeIcon_C_SetIconHovered::Icon' has a wrong offset!");
static_assert(offsetof(ITM_SeasonChallengeIcon_C_SetIconHovered, Color) == 0x000010, "Member 'ITM_SeasonChallengeIcon_C_SetIconHovered::Color' has a wrong offset!");

}

