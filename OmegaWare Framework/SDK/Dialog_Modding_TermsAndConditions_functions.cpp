#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dialog_Modding_TermsAndConditions

#include "Basic.hpp"

#include "Dialog_Modding_TermsAndConditions_classes.hpp"
#include "Dialog_Modding_TermsAndConditions_parameters.hpp"


namespace CG
{

// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.OnAnswer__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Agree                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDialog_Modding_TermsAndConditions_C::OnAnswer__DelegateSignature(bool Param_Agree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "OnAnswer__DelegateSignature");

	Params::Dialog_Modding_TermsAndConditions_C_OnAnswer__DelegateSignature Parms{};

	Parms.Param_Agree = Param_Agree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.ExecuteUbergraph_Dialog_Modding_TermsAndConditions
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDialog_Modding_TermsAndConditions_C::ExecuteUbergraph_Dialog_Modding_TermsAndConditions(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "ExecuteUbergraph_Dialog_Modding_TermsAndConditions");

	Params::Dialog_Modding_TermsAndConditions_C_ExecuteUbergraph_Dialog_Modding_TermsAndConditions Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.DummyEventThatLeadToNowhere
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Yes                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDialog_Modding_TermsAndConditions_C::DummyEventThatLeadToNowhere(bool Yes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "DummyEventThatLeadToNowhere");

	Params::Dialog_Modding_TermsAndConditions_C_DummyEventThatLeadToNowhere Parms{};

	Parms.Yes = Yes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.BndEvt__BTN_Yes_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// (BlueprintEvent)

void UDialog_Modding_TermsAndConditions_C::BndEvt__BTN_Yes_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "BndEvt__BTN_Yes_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.BndEvt__BTN_No_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// (BlueprintEvent)

void UDialog_Modding_TermsAndConditions_C::BndEvt__BTN_No_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "BndEvt__BTN_No_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.Agree
// (BlueprintCallable, BlueprintEvent)

void UDialog_Modding_TermsAndConditions_C::Agree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "Agree");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.Disagree
// (BlueprintCallable, BlueprintEvent)

void UDialog_Modding_TermsAndConditions_C::Disagree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "Disagree");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.BndEvt__Privacy_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UDialog_Modding_TermsAndConditions_C::BndEvt__Privacy_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "BndEvt__Privacy_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.BndEvt__Terms_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UDialog_Modding_TermsAndConditions_C::BndEvt__Terms_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "BndEvt__Terms_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.ShowTerms
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UModioTermsWrapper*               Param_Terms                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDialog_Modding_TermsAndConditions_C::ShowTerms(class UModioTermsWrapper* Param_Terms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "ShowTerms");

	Params::Dialog_Modding_TermsAndConditions_C_ShowTerms Parms{};

	Parms.Param_Terms = Param_Terms;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UDialog_Modding_TermsAndConditions_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UDialog_Modding_TermsAndConditions_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "OnKeyUp");

	Params::Dialog_Modding_TermsAndConditions_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C.OnModOverlayClosed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LastURL                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UDialog_Modding_TermsAndConditions_C::OnModOverlayClosed(const class FString& LastURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Dialog_Modding_TermsAndConditions_C", "OnModOverlayClosed");

	Params::Dialog_Modding_TermsAndConditions_C_OnModOverlayClosed Parms{};

	Parms.LastURL = std::move(LastURL);

	UObject::ProcessEvent(Func, &Parms);
}

}

