#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_PlayerPerks_Icon

#include "Basic.hpp"

#include "ENUM_MenuColors_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace CG::Params
{

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.ExecuteUbergraph_HUD_PlayerPerks_Icon
// 0x00F0 (0x00F0 - 0x0000)
struct HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33E8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkDelegateItem*                      CallFunc_GetDelegates_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float DeltaTime, float NormalizedTime)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_DeltaTime_1;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NormalizedTime_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NormalizedTime;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float DeltaTime, float NormalizedTime)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetProgress_OutProgress;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E9[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPerkAsset* Perk, int32 Value)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EA[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Duration;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33EB[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMiniTimerAction*                       CallFunc_MiniTimer_ReturnValue;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EC[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor;         // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RefreshCounterAndProgress_CoolDownActive; // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RefreshCounterAndProgress_CoolDownActive_1; // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33ED[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkAsset*                             K2Node_CustomEvent_Perk;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_33EE[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RefreshCounterAndProgress_CoolDownActive_2; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33EF[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor_1;       // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon) == 0x000008, "Wrong alignment on HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon) == 0x0000F0, "Wrong size on HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, EntryPoint) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_GetDelegates_ReturnValue) == 0x000008, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_GetDelegates_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CustomEvent_DeltaTime_1) == 0x000020, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CustomEvent_DeltaTime_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CustomEvent_NormalizedTime_1) == 0x000024, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CustomEvent_NormalizedTime_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CustomEvent_DeltaTime) == 0x000028, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CustomEvent_NormalizedTime) == 0x00002C, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CustomEvent_NormalizedTime' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, Temp_float_Variable) == 0x000040, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, Temp_float_Variable_1) == 0x000044, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_SetProgress_OutProgress) == 0x000048, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_SetProgress_OutProgress' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, Temp_bool_Has_Been_Initd_Variable) == 0x00004C, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, Temp_bool_IsClosed_Variable) == 0x000060, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_SelectVisibility_IsVisible) == 0x000062, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_SelectVisibility_VisibilityChanged) == 0x000063, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_SelectVisibility_New_Visibility) == 0x000064, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CustomEvent_Duration) == 0x000068, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_MiniTimer_ReturnValue) == 0x000070, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_MiniTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CreateDelegate_OutputDelegate_3) == 0x000078, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_Event_IsDesignTime) == 0x000089, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_MenuColorsAndOpacity_OutputColor) == 0x00008C, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_MenuColorsAndOpacity_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_RefreshCounterAndProgress_CoolDownActive) == 0x00009C, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_RefreshCounterAndProgress_CoolDownActive' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_RefreshCounterAndProgress_CoolDownActive_1) == 0x00009D, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_RefreshCounterAndProgress_CoolDownActive_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CustomEvent_Perk) == 0x0000A0, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CustomEvent_Perk' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CustomEvent_Value) == 0x0000A8, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000AC, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C0, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_RefreshCounterAndProgress_CoolDownActive_2) == 0x0000C8, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_RefreshCounterAndProgress_CoolDownActive_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_MenuColors_OutputColor) == 0x0000CC, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon, CallFunc_MenuColorsAndOpacity_OutputColor_1) == 0x0000DC, "Member 'HUD_PlayerPerks_Icon_C_ExecuteUbergraph_HUD_PlayerPerks_Icon::CallFunc_MenuColorsAndOpacity_OutputColor_1' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.RefreshUseCharges
// 0x0010 (0x0010 - 0x0000)
struct HUD_PlayerPerks_Icon_C_RefreshUseCharges final
{
public:
	class UPerkAsset*                             Perk;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_RefreshUseCharges) == 0x000008, "Wrong alignment on HUD_PlayerPerks_Icon_C_RefreshUseCharges");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_RefreshUseCharges) == 0x000010, "Wrong size on HUD_PlayerPerks_Icon_C_RefreshUseCharges");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshUseCharges, Perk) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_RefreshUseCharges::Perk' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshUseCharges, Value) == 0x000008, "Member 'HUD_PlayerPerks_Icon_C_RefreshUseCharges::Value' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_PlayerPerks_Icon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_PlayerPerks_Icon_C_PreConstruct");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_PreConstruct) == 0x000001, "Wrong size on HUD_PlayerPerks_Icon_C_PreConstruct");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.Begin Cool Down
// 0x0004 (0x0004 - 0x0000)
struct HUD_PlayerPerks_Icon_C_Begin_Cool_Down final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_Begin_Cool_Down) == 0x000004, "Wrong alignment on HUD_PlayerPerks_Icon_C_Begin_Cool_Down");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_Begin_Cool_Down) == 0x000004, "Wrong size on HUD_PlayerPerks_Icon_C_Begin_Cool_Down");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_Begin_Cool_Down, Duration) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_Begin_Cool_Down::Duration' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.Completed_64B6D09E4CB7705CDF68E9949787003B
// 0x0008 (0x0008 - 0x0000)
struct HUD_PlayerPerks_Icon_C_Completed_64B6D09E4CB7705CDF68E9949787003B final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalizedTime;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_Completed_64B6D09E4CB7705CDF68E9949787003B) == 0x000004, "Wrong alignment on HUD_PlayerPerks_Icon_C_Completed_64B6D09E4CB7705CDF68E9949787003B");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_Completed_64B6D09E4CB7705CDF68E9949787003B) == 0x000008, "Wrong size on HUD_PlayerPerks_Icon_C_Completed_64B6D09E4CB7705CDF68E9949787003B");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_Completed_64B6D09E4CB7705CDF68E9949787003B, DeltaTime) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_Completed_64B6D09E4CB7705CDF68E9949787003B::DeltaTime' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_Completed_64B6D09E4CB7705CDF68E9949787003B, NormalizedTime) == 0x000004, "Member 'HUD_PlayerPerks_Icon_C_Completed_64B6D09E4CB7705CDF68E9949787003B::NormalizedTime' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.OnTick_64B6D09E4CB7705CDF68E9949787003B
// 0x0008 (0x0008 - 0x0000)
struct HUD_PlayerPerks_Icon_C_OnTick_64B6D09E4CB7705CDF68E9949787003B final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalizedTime;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_OnTick_64B6D09E4CB7705CDF68E9949787003B) == 0x000004, "Wrong alignment on HUD_PlayerPerks_Icon_C_OnTick_64B6D09E4CB7705CDF68E9949787003B");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_OnTick_64B6D09E4CB7705CDF68E9949787003B) == 0x000008, "Wrong size on HUD_PlayerPerks_Icon_C_OnTick_64B6D09E4CB7705CDF68E9949787003B");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_OnTick_64B6D09E4CB7705CDF68E9949787003B, DeltaTime) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_OnTick_64B6D09E4CB7705CDF68E9949787003B::DeltaTime' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_OnTick_64B6D09E4CB7705CDF68E9949787003B, NormalizedTime) == 0x000004, "Member 'HUD_PlayerPerks_Icon_C_OnTick_64B6D09E4CB7705CDF68E9949787003B::NormalizedTime' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.SetProgress
// 0x0070 (0x0070 - 0x0000)
struct HUD_PlayerPerks_Icon_C_SetProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutProgress;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F0[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F1[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F2[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_2;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33F3[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor;         // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F4[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F5[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_SetProgress) == 0x000008, "Wrong alignment on HUD_PlayerPerks_Icon_C_SetProgress");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_SetProgress) == 0x000070, "Wrong size on HUD_PlayerPerks_Icon_C_SetProgress");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, InProgress) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::InProgress' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, OutProgress) == 0x000004, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::OutProgress' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, Temp_bool_Variable) == 0x000008, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, Temp_float_Variable) == 0x00000C, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, Temp_float_Variable_1) == 0x000010, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, Temp_bool_Variable_1) == 0x000014, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, Temp_float_Variable_2) == 0x000018, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, Temp_float_Variable_3) == 0x00001C, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, Temp_bool_Variable_2) == 0x000020, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, Temp_byte_Variable) == 0x000021, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, Temp_byte_Variable_1) == 0x000022, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_Less_FloatFloat_ReturnValue) == 0x000023, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000024, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, K2Node_Select_Default) == 0x000028, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, K2Node_Select_Default_1) == 0x00002C, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, K2Node_Select_Default_2) == 0x000030, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_MenuColorsAndOpacity_OutputColor) == 0x000034, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_MenuColorsAndOpacity_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_Lerp_ReturnValue) == 0x000044, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000049, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00004A, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_PlayAnimation_ReturnValue) == 0x000050, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_PlayAnimation_ReturnValue_1) == 0x000060, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000068, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetProgress, CallFunc_Not_PreBool_ReturnValue_1) == 0x000069, "Member 'HUD_PlayerPerks_Icon_C_SetProgress::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.SetCounter
// 0x0028 (0x0028 - 0x0000)
struct HUD_PlayerPerks_Icon_C_SetCounter final
{
public:
	int32                                         InCount;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_SetCounter) == 0x000008, "Wrong alignment on HUD_PlayerPerks_Icon_C_SetCounter");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_SetCounter) == 0x000028, "Wrong size on HUD_PlayerPerks_Icon_C_SetCounter");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetCounter, InCount) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_SetCounter::InCount' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetCounter, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'HUD_PlayerPerks_Icon_C_SetCounter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetCounter, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'HUD_PlayerPerks_Icon_C_SetCounter::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetCounter, CallFunc_SelectVisibility_IsVisible) == 0x000020, "Member 'HUD_PlayerPerks_Icon_C_SetCounter::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetCounter, CallFunc_SelectVisibility_VisibilityChanged) == 0x000021, "Member 'HUD_PlayerPerks_Icon_C_SetCounter::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_SetCounter, CallFunc_SelectVisibility_New_Visibility) == 0x000022, "Member 'HUD_PlayerPerks_Icon_C_SetCounter::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.RefreshCounterAndProgress
// 0x0054 (0x0054 - 0x0000)
struct HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress final
{
public:
	bool                                          CoolDownActive;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCharges;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CooldownDuration;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingCharges;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F8[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33F9[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCoolDownDuration_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCoolDownProgress_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxUseCharges_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRemainingUseCharges_ReturnValue;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FA[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FB[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33FC[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetProgress_OutProgress;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress) == 0x000004, "Wrong alignment on HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress) == 0x000054, "Wrong size on HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CoolDownActive) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CoolDownActive' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, MaxCharges) == 0x000004, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::MaxCharges' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CooldownDuration) == 0x000008, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CooldownDuration' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, Progress) == 0x00000C, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::Progress' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, RemainingCharges) == 0x000010, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::RemainingCharges' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, Temp_bool_Variable) == 0x000014, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, Temp_int_Variable) == 0x000018, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, Temp_bool_Variable_1) == 0x00001C, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, Temp_float_Variable) == 0x000020, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_GetCoolDownDuration_ReturnValue) == 0x000024, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_GetCoolDownDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_GetCoolDownProgress_ReturnValue) == 0x000028, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_GetCoolDownProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_GetMaxUseCharges_ReturnValue) == 0x00002C, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_GetMaxUseCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_GetRemainingUseCharges_ReturnValue) == 0x000030, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_GetRemainingUseCharges_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_Less_FloatFloat_ReturnValue) == 0x000035, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, K2Node_Select_Default) == 0x000038, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00003D, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003E, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, K2Node_Select_Default_1) == 0x000040, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_BooleanAND_ReturnValue) == 0x000044, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_SetProgress_OutProgress) == 0x000048, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_SetProgress_OutProgress' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_BooleanAND_ReturnValue_1) == 0x00004C, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_IsValid_ReturnValue) == 0x00004D, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_SelectVisibility_IsVisible) == 0x00004E, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_SelectVisibility_VisibilityChanged) == 0x00004F, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress, CallFunc_SelectVisibility_New_Visibility) == 0x000050, "Member 'HUD_PlayerPerks_Icon_C_RefreshCounterAndProgress::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.GetRemainingUseCharges
// 0x0018 (0x0018 - 0x0000)
struct HUD_PlayerPerks_Icon_C_GetRemainingUseCharges final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRemainingUseCharges_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_GetRemainingUseCharges) == 0x000008, "Wrong alignment on HUD_PlayerPerks_Icon_C_GetRemainingUseCharges");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_GetRemainingUseCharges) == 0x000018, "Wrong size on HUD_PlayerPerks_Icon_C_GetRemainingUseCharges");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetRemainingUseCharges, ReturnValue) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_GetRemainingUseCharges::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetRemainingUseCharges, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'HUD_PlayerPerks_Icon_C_GetRemainingUseCharges::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetRemainingUseCharges, CallFunc_GetRemainingUseCharges_ReturnValue) == 0x000010, "Member 'HUD_PlayerPerks_Icon_C_GetRemainingUseCharges::CallFunc_GetRemainingUseCharges_ReturnValue' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.GetMaxUseCharges
// 0x0018 (0x0018 - 0x0000)
struct HUD_PlayerPerks_Icon_C_GetMaxUseCharges final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxUseCharges_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_GetMaxUseCharges) == 0x000008, "Wrong alignment on HUD_PlayerPerks_Icon_C_GetMaxUseCharges");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_GetMaxUseCharges) == 0x000018, "Wrong size on HUD_PlayerPerks_Icon_C_GetMaxUseCharges");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetMaxUseCharges, ReturnValue) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_GetMaxUseCharges::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetMaxUseCharges, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'HUD_PlayerPerks_Icon_C_GetMaxUseCharges::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetMaxUseCharges, CallFunc_GetMaxUseCharges_ReturnValue) == 0x000010, "Member 'HUD_PlayerPerks_Icon_C_GetMaxUseCharges::CallFunc_GetMaxUseCharges_ReturnValue' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.GetCoolDownProgress
// 0x0018 (0x0018 - 0x0000)
struct HUD_PlayerPerks_Icon_C_GetCoolDownProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33FF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUseCoolDownProgress_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_GetCoolDownProgress) == 0x000008, "Wrong alignment on HUD_PlayerPerks_Icon_C_GetCoolDownProgress");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_GetCoolDownProgress) == 0x000018, "Wrong size on HUD_PlayerPerks_Icon_C_GetCoolDownProgress");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetCoolDownProgress, ReturnValue) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_GetCoolDownProgress::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetCoolDownProgress, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'HUD_PlayerPerks_Icon_C_GetCoolDownProgress::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetCoolDownProgress, CallFunc_GetUseCoolDownProgress_ReturnValue) == 0x000010, "Member 'HUD_PlayerPerks_Icon_C_GetCoolDownProgress::CallFunc_GetUseCoolDownProgress_ReturnValue' has a wrong offset!");

// Function HUD_PlayerPerks_Icon.HUD_PlayerPerks_Icon_C.GetCooldownDuration
// 0x0018 (0x0018 - 0x0000)
struct HUD_PlayerPerks_Icon_C_GetCooldownDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3400[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUseCoolDownDuration_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerPerks_Icon_C_GetCooldownDuration) == 0x000008, "Wrong alignment on HUD_PlayerPerks_Icon_C_GetCooldownDuration");
static_assert(sizeof(HUD_PlayerPerks_Icon_C_GetCooldownDuration) == 0x000018, "Wrong size on HUD_PlayerPerks_Icon_C_GetCooldownDuration");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetCooldownDuration, ReturnValue) == 0x000000, "Member 'HUD_PlayerPerks_Icon_C_GetCooldownDuration::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetCooldownDuration, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'HUD_PlayerPerks_Icon_C_GetCooldownDuration::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerPerks_Icon_C_GetCooldownDuration, CallFunc_GetUseCoolDownDuration_ReturnValue) == 0x000010, "Member 'HUD_PlayerPerks_Icon_C_GetCooldownDuration::CallFunc_GetUseCoolDownDuration_ReturnValue' has a wrong offset!");

}

