#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScreenOverlay_ShieldDamage

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"


namespace CG::Params
{

// Function ScreenOverlay_ShieldDamage.ScreenOverlay_ShieldDamage_C.ExecuteUbergraph_ScreenOverlay_ShieldDamage
// 0x00C8 (0x00C8 - 0x0000)
struct ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Amount)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(ECharacterState NewState)>     K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECharacterCameraMode NewCameraMode, ECharacterCameraMode OldCameraMode)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_Amount;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3593[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3594[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterState                               K2Node_CustomEvent_newState;                       // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterCameraMode                          K2Node_CustomEvent_NewCameraMode;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterCameraMode                          K2Node_CustomEvent_OldCameraMode;                  // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDown_ReturnValue;                       // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3595[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage) == 0x000008, "Wrong alignment on ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage");
static_assert(sizeof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage) == 0x0000C8, "Wrong size on ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, EntryPoint) == 0x000000, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::EntryPoint' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_Event_MyGeometry) == 0x000024, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_Event_InDeltaTime) == 0x00005C, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_CreateDelegate_OutputDelegate_2) == 0x000060, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_CustomEvent_Amount) == 0x000070, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_CustomEvent_Duration) == 0x000074, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_CustomEvent_Color) == 0x000078, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000088, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00008C, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000098, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_DynamicCast_AsPlayer_Character) == 0x0000A0, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_CustomEvent_newState) == 0x0000A9, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_CustomEvent_newState' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_CustomEvent_NewCameraMode) == 0x0000AA, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_CustomEvent_NewCameraMode' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_CustomEvent_OldCameraMode) == 0x0000AB, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_CustomEvent_OldCameraMode' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, CallFunc_IsDown_ReturnValue) == 0x0000AC, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::CallFunc_IsDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000AD, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, K2Node_MakeStruct_LinearColor) == 0x0000B4, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000C4, "Member 'ScreenOverlay_ShieldDamage_C_ExecuteUbergraph_ScreenOverlay_ShieldDamage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ScreenOverlay_ShieldDamage.ScreenOverlay_ShieldDamage_C.OnCameraModeChanged
// 0x0002 (0x0002 - 0x0000)
struct ScreenOverlay_ShieldDamage_C_OnCameraModeChanged final
{
public:
	ECharacterCameraMode                          NewCameraMode;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterCameraMode                          OldCameraMode;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_ShieldDamage_C_OnCameraModeChanged) == 0x000001, "Wrong alignment on ScreenOverlay_ShieldDamage_C_OnCameraModeChanged");
static_assert(sizeof(ScreenOverlay_ShieldDamage_C_OnCameraModeChanged) == 0x000002, "Wrong size on ScreenOverlay_ShieldDamage_C_OnCameraModeChanged");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_OnCameraModeChanged, NewCameraMode) == 0x000000, "Member 'ScreenOverlay_ShieldDamage_C_OnCameraModeChanged::NewCameraMode' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_OnCameraModeChanged, OldCameraMode) == 0x000001, "Member 'ScreenOverlay_ShieldDamage_C_OnCameraModeChanged::OldCameraMode' has a wrong offset!");

// Function ScreenOverlay_ShieldDamage.ScreenOverlay_ShieldDamage_C.OnCharacterStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ScreenOverlay_ShieldDamage_C_OnCharacterStateChanged final
{
public:
	ECharacterState                               NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_ShieldDamage_C_OnCharacterStateChanged) == 0x000001, "Wrong alignment on ScreenOverlay_ShieldDamage_C_OnCharacterStateChanged");
static_assert(sizeof(ScreenOverlay_ShieldDamage_C_OnCharacterStateChanged) == 0x000001, "Wrong size on ScreenOverlay_ShieldDamage_C_OnCharacterStateChanged");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_OnCharacterStateChanged, NewState) == 0x000000, "Member 'ScreenOverlay_ShieldDamage_C_OnCharacterStateChanged::NewState' has a wrong offset!");

// Function ScreenOverlay_ShieldDamage.ScreenOverlay_ShieldDamage_C.Begin Splat
// 0x0014 (0x0014 - 0x0000)
struct ScreenOverlay_ShieldDamage_C_Begin_Splat final
{
public:
	float                                         Param_Duration;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Color;                                       // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_ShieldDamage_C_Begin_Splat) == 0x000004, "Wrong alignment on ScreenOverlay_ShieldDamage_C_Begin_Splat");
static_assert(sizeof(ScreenOverlay_ShieldDamage_C_Begin_Splat) == 0x000014, "Wrong size on ScreenOverlay_ShieldDamage_C_Begin_Splat");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_Begin_Splat, Param_Duration) == 0x000000, "Member 'ScreenOverlay_ShieldDamage_C_Begin_Splat::Param_Duration' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_Begin_Splat, Param_Color) == 0x000004, "Member 'ScreenOverlay_ShieldDamage_C_Begin_Splat::Param_Color' has a wrong offset!");

// Function ScreenOverlay_ShieldDamage.ScreenOverlay_ShieldDamage_C.OnArmorDamaged
// 0x0004 (0x0004 - 0x0000)
struct ScreenOverlay_ShieldDamage_C_OnArmorDamaged final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_ShieldDamage_C_OnArmorDamaged) == 0x000004, "Wrong alignment on ScreenOverlay_ShieldDamage_C_OnArmorDamaged");
static_assert(sizeof(ScreenOverlay_ShieldDamage_C_OnArmorDamaged) == 0x000004, "Wrong size on ScreenOverlay_ShieldDamage_C_OnArmorDamaged");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_OnArmorDamaged, Amount) == 0x000000, "Member 'ScreenOverlay_ShieldDamage_C_OnArmorDamaged::Amount' has a wrong offset!");

// Function ScreenOverlay_ShieldDamage.ScreenOverlay_ShieldDamage_C.Tick
// 0x003C (0x003C - 0x0000)
struct ScreenOverlay_ShieldDamage_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_ShieldDamage_C_Tick) == 0x000004, "Wrong alignment on ScreenOverlay_ShieldDamage_C_Tick");
static_assert(sizeof(ScreenOverlay_ShieldDamage_C_Tick) == 0x00003C, "Wrong size on ScreenOverlay_ShieldDamage_C_Tick");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_Tick, MyGeometry) == 0x000000, "Member 'ScreenOverlay_ShieldDamage_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_ShieldDamage_C_Tick, InDeltaTime) == 0x000038, "Member 'ScreenOverlay_ShieldDamage_C_Tick::InDeltaTime' has a wrong offset!");

}

