#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlurBackground

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass BlurBackground.BlurBackground_C
// 0x0030 (0x0290 - 0x0260)
class UBlurBackground_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                        BackgroundBlur_66;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_0;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Tint;                                              // 0x0278(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Blur;                                              // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BlurBackground(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetColor(const struct FLinearColor& Param_Tint);
	void SetBlur(float InBlur);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlurBackground_C">();
	}
	static class UBlurBackground_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlurBackground_C>();
	}
};
static_assert(alignof(UBlurBackground_C) == 0x000008, "Wrong alignment on UBlurBackground_C");
static_assert(sizeof(UBlurBackground_C) == 0x000290, "Wrong size on UBlurBackground_C");
static_assert(offsetof(UBlurBackground_C, UberGraphFrame) == 0x000260, "Member 'UBlurBackground_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBlurBackground_C, BackgroundBlur_66) == 0x000268, "Member 'UBlurBackground_C::BackgroundBlur_66' has a wrong offset!");
static_assert(offsetof(UBlurBackground_C, Border_0) == 0x000270, "Member 'UBlurBackground_C::Border_0' has a wrong offset!");
static_assert(offsetof(UBlurBackground_C, Tint) == 0x000278, "Member 'UBlurBackground_C::Tint' has a wrong offset!");
static_assert(offsetof(UBlurBackground_C, Blur) == 0x000288, "Member 'UBlurBackground_C::Blur' has a wrong offset!");

}

