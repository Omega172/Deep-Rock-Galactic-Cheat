#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Announcement_Controller

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace CG::Params
{

// Function Announcement_Controller.Announcement_Controller_C.ExecuteUbergraph_Announcement_Controller
// 0x02C8 (0x02C8 - 0x0000)
struct Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Amount)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C2[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UItemSkin* Skin, class UItemID* ItemID)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UVictoryPose* Pose, class UPlayerCharacterID* CharacterID)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class USchematic* Schematic)>  K2Node_CreateDelegate_OutputDelegate_6;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UPickaxePart* PickaxePart)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UVanityItem* Item, class UPlayerCharacterID* CharacterID)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FText InMessage)>        K2Node_CreateDelegate_OutputDelegate_9;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount_1;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C3[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36C4[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerResourceComponent*               CallFunc_GetFromPlayer_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCappedResource*                        K2Node_CustomEvent_resource_1;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTitle_ReturnValue;                     // 0x00E0(0x0018)()
	class UPlayerResourceComponent*               CallFunc_GetFromPlayer_ReturnValue_1;              // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCappedResource*                        K2Node_CustomEvent_resource;                       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Amount;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C5[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Name;                           // 0x0110(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0040)(HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetColor_ReturnValue;                     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x016C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTitle_ReturnValue_1;                   // 0x0180(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0198(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x01B0(0x0018)()
	TDelegate<void(class UCappedResource* Resource, float Amount)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x01C8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UCappedResource* Resource)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x01D8(0x0010)(ZeroConstructor, NoDestructor)
	class UItemSkin*                              K2Node_CustomEvent_Skin;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemID*                                K2Node_CustomEvent_itemID;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVictoryPose*                           K2Node_CustomEvent_pose;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     K2Node_CustomEvent_characterID_1;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USchematic*                             K2Node_CustomEvent_Schematic;                      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPickaxePart*                           K2Node_CustomEvent_pickaxepart;                    // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVanityItem*                            K2Node_CustomEvent_Item;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     K2Node_CustomEvent_characterID;                    // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_InMessage;                      // 0x0228(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0240(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0260(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B0(0x0018)()
};
static_assert(alignof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller) == 0x000008, "Wrong alignment on Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller");
static_assert(sizeof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller) == 0x0002C8, "Wrong size on Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, EntryPoint) == 0x000000, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::EntryPoint' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, Temp_bool_Variable) == 0x000024, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, Temp_int_Variable) == 0x000028, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, Temp_int_Variable_1) == 0x00002C, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_4) == 0x000050, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_5) == 0x000060, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_6) == 0x000070, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_7) == 0x000080, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_8) == 0x000090, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000A0, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x0000B0, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_Amount_1) == 0x0000B8, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_DynamicCast_AsPlayer_Character) == 0x0000C0, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_GetFromPlayer_ReturnValue) == 0x0000D0, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_GetFromPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_resource_1) == 0x0000D8, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_resource_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_GetTitle_ReturnValue) == 0x0000E0, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_GetTitle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_GetFromPlayer_ReturnValue_1) == 0x0000F8, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_GetFromPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_resource) == 0x000100, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_resource' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_Amount) == 0x000108, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_Name) == 0x000110, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_GetColor_ReturnValue) == 0x000168, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_GetColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x00016C, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_Select_Default) == 0x00017C, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_GetTitle_ReturnValue_1) == 0x000180, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_GetTitle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_MakeLiteralText_ReturnValue) == 0x000198, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0001B0, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001C8, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CreateDelegate_OutputDelegate_11) == 0x0001D8, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_Skin) == 0x0001E8, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_Skin' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_itemID) == 0x0001F0, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_itemID' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_pose) == 0x0001F8, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_pose' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_characterID_1) == 0x000200, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_characterID_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_Schematic) == 0x000208, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_Schematic' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_pickaxepart) == 0x000210, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_pickaxepart' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_Item) == 0x000218, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_characterID) == 0x000220, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_characterID' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_CustomEvent_InMessage) == 0x000228, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_CustomEvent_InMessage' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000240, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_PlayAnimation_ReturnValue) == 0x000258, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_MakeStruct_FormatArgumentData_1) == 0x000260, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, K2Node_MakeArray_Array) == 0x0002A0, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller, CallFunc_Format_ReturnValue) == 0x0002B0, "Member 'Announcement_Controller_C_ExecuteUbergraph_Announcement_Controller::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.OnCollectedEverything_Event
// 0x0018 (0x0018 - 0x0000)
struct Announcement_Controller_C_OnCollectedEverything_Event final
{
public:
	class FText                                   InMessage;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Announcement_Controller_C_OnCollectedEverything_Event) == 0x000008, "Wrong alignment on Announcement_Controller_C_OnCollectedEverything_Event");
static_assert(sizeof(Announcement_Controller_C_OnCollectedEverything_Event) == 0x000018, "Wrong size on Announcement_Controller_C_OnCollectedEverything_Event");
static_assert(offsetof(Announcement_Controller_C_OnCollectedEverything_Event, InMessage) == 0x000000, "Member 'Announcement_Controller_C_OnCollectedEverything_Event::InMessage' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.OnCollectedVanityItem_Event_0
// 0x0010 (0x0010 - 0x0000)
struct Announcement_Controller_C_OnCollectedVanityItem_Event_0 final
{
public:
	class UVanityItem*                            Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CharacterID;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_OnCollectedVanityItem_Event_0) == 0x000008, "Wrong alignment on Announcement_Controller_C_OnCollectedVanityItem_Event_0");
static_assert(sizeof(Announcement_Controller_C_OnCollectedVanityItem_Event_0) == 0x000010, "Wrong size on Announcement_Controller_C_OnCollectedVanityItem_Event_0");
static_assert(offsetof(Announcement_Controller_C_OnCollectedVanityItem_Event_0, Item) == 0x000000, "Member 'Announcement_Controller_C_OnCollectedVanityItem_Event_0::Item' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_OnCollectedVanityItem_Event_0, CharacterID) == 0x000008, "Member 'Announcement_Controller_C_OnCollectedVanityItem_Event_0::CharacterID' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.OnCollectedPickaxePart_Event_0
// 0x0008 (0x0008 - 0x0000)
struct Announcement_Controller_C_OnCollectedPickaxePart_Event_0 final
{
public:
	class UPickaxePart*                           PickaxePart;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_OnCollectedPickaxePart_Event_0) == 0x000008, "Wrong alignment on Announcement_Controller_C_OnCollectedPickaxePart_Event_0");
static_assert(sizeof(Announcement_Controller_C_OnCollectedPickaxePart_Event_0) == 0x000008, "Wrong size on Announcement_Controller_C_OnCollectedPickaxePart_Event_0");
static_assert(offsetof(Announcement_Controller_C_OnCollectedPickaxePart_Event_0, PickaxePart) == 0x000000, "Member 'Announcement_Controller_C_OnCollectedPickaxePart_Event_0::PickaxePart' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.OnCollectedSchematic_Event
// 0x0008 (0x0008 - 0x0000)
struct Announcement_Controller_C_OnCollectedSchematic_Event final
{
public:
	class USchematic*                             Schematic;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_OnCollectedSchematic_Event) == 0x000008, "Wrong alignment on Announcement_Controller_C_OnCollectedSchematic_Event");
static_assert(sizeof(Announcement_Controller_C_OnCollectedSchematic_Event) == 0x000008, "Wrong size on Announcement_Controller_C_OnCollectedSchematic_Event");
static_assert(offsetof(Announcement_Controller_C_OnCollectedSchematic_Event, Schematic) == 0x000000, "Member 'Announcement_Controller_C_OnCollectedSchematic_Event::Schematic' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.OnCollectedVictoryPose_Event_0
// 0x0010 (0x0010 - 0x0000)
struct Announcement_Controller_C_OnCollectedVictoryPose_Event_0 final
{
public:
	class UVictoryPose*                           Pose;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CharacterID;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_OnCollectedVictoryPose_Event_0) == 0x000008, "Wrong alignment on Announcement_Controller_C_OnCollectedVictoryPose_Event_0");
static_assert(sizeof(Announcement_Controller_C_OnCollectedVictoryPose_Event_0) == 0x000010, "Wrong size on Announcement_Controller_C_OnCollectedVictoryPose_Event_0");
static_assert(offsetof(Announcement_Controller_C_OnCollectedVictoryPose_Event_0, Pose) == 0x000000, "Member 'Announcement_Controller_C_OnCollectedVictoryPose_Event_0::Pose' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_OnCollectedVictoryPose_Event_0, CharacterID) == 0x000008, "Member 'Announcement_Controller_C_OnCollectedVictoryPose_Event_0::CharacterID' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.OnCollectedSkin
// 0x0010 (0x0010 - 0x0000)
struct Announcement_Controller_C_OnCollectedSkin final
{
public:
	class UItemSkin*                              Skin;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemID*                                ItemID;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_OnCollectedSkin) == 0x000008, "Wrong alignment on Announcement_Controller_C_OnCollectedSkin");
static_assert(sizeof(Announcement_Controller_C_OnCollectedSkin) == 0x000010, "Wrong size on Announcement_Controller_C_OnCollectedSkin");
static_assert(offsetof(Announcement_Controller_C_OnCollectedSkin, Skin) == 0x000000, "Member 'Announcement_Controller_C_OnCollectedSkin::Skin' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_OnCollectedSkin, ItemID) == 0x000008, "Member 'Announcement_Controller_C_OnCollectedSkin::ItemID' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.Do Resource Full
// 0x0018 (0x0018 - 0x0000)
struct Announcement_Controller_C_Do_Resource_Full final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(Announcement_Controller_C_Do_Resource_Full) == 0x000008, "Wrong alignment on Announcement_Controller_C_Do_Resource_Full");
static_assert(sizeof(Announcement_Controller_C_Do_Resource_Full) == 0x000018, "Wrong size on Announcement_Controller_C_Do_Resource_Full");
static_assert(offsetof(Announcement_Controller_C_Do_Resource_Full, Param_Name) == 0x000000, "Member 'Announcement_Controller_C_Do_Resource_Full::Param_Name' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.OnResourceIncreased
// 0x0010 (0x0010 - 0x0000)
struct Announcement_Controller_C_OnResourceIncreased final
{
public:
	class UCappedResource*                        Resource;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_OnResourceIncreased) == 0x000008, "Wrong alignment on Announcement_Controller_C_OnResourceIncreased");
static_assert(sizeof(Announcement_Controller_C_OnResourceIncreased) == 0x000010, "Wrong size on Announcement_Controller_C_OnResourceIncreased");
static_assert(offsetof(Announcement_Controller_C_OnResourceIncreased, Resource) == 0x000000, "Member 'Announcement_Controller_C_OnResourceIncreased::Resource' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_OnResourceIncreased, Amount) == 0x000008, "Member 'Announcement_Controller_C_OnResourceIncreased::Amount' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.OnResourceFull
// 0x0008 (0x0008 - 0x0000)
struct Announcement_Controller_C_OnResourceFull final
{
public:
	class UCappedResource*                        Resource;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_OnResourceFull) == 0x000008, "Wrong alignment on Announcement_Controller_C_OnResourceFull");
static_assert(sizeof(Announcement_Controller_C_OnResourceFull) == 0x000008, "Wrong size on Announcement_Controller_C_OnResourceFull");
static_assert(offsetof(Announcement_Controller_C_OnResourceFull, Resource) == 0x000000, "Member 'Announcement_Controller_C_OnResourceFull::Resource' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.OnHealed
// 0x0004 (0x0004 - 0x0000)
struct Announcement_Controller_C_OnHealed final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_OnHealed) == 0x000004, "Wrong alignment on Announcement_Controller_C_OnHealed");
static_assert(sizeof(Announcement_Controller_C_OnHealed) == 0x000004, "Wrong size on Announcement_Controller_C_OnHealed");
static_assert(offsetof(Announcement_Controller_C_OnHealed, Amount) == 0x000000, "Member 'Announcement_Controller_C_OnHealed::Amount' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.CreateTextAnnouncement
// 0x0068 (0x0068 - 0x0000)
struct Announcement_Controller_C_CreateTextAnnouncement final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           Color;                                             // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Icon_Tint;                                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       SlotWidget;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnnouncement_Label_C*                  Widget;                                            // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartDelay_ReturnValue;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C6[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnnouncement_Label_C*                  CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_CreateTextAnnouncement) == 0x000008, "Wrong alignment on Announcement_Controller_C_CreateTextAnnouncement");
static_assert(sizeof(Announcement_Controller_C_CreateTextAnnouncement) == 0x000068, "Wrong size on Announcement_Controller_C_CreateTextAnnouncement");
static_assert(offsetof(Announcement_Controller_C_CreateTextAnnouncement, Text) == 0x000000, "Member 'Announcement_Controller_C_CreateTextAnnouncement::Text' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateTextAnnouncement, Color) == 0x000018, "Member 'Announcement_Controller_C_CreateTextAnnouncement::Color' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateTextAnnouncement, Icon) == 0x000028, "Member 'Announcement_Controller_C_CreateTextAnnouncement::Icon' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateTextAnnouncement, Icon_Tint) == 0x000030, "Member 'Announcement_Controller_C_CreateTextAnnouncement::Icon_Tint' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateTextAnnouncement, SlotWidget) == 0x000040, "Member 'Announcement_Controller_C_CreateTextAnnouncement::SlotWidget' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateTextAnnouncement, Widget) == 0x000048, "Member 'Announcement_Controller_C_CreateTextAnnouncement::Widget' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateTextAnnouncement, CallFunc_GetStartDelay_ReturnValue) == 0x000050, "Member 'Announcement_Controller_C_CreateTextAnnouncement::CallFunc_GetStartDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateTextAnnouncement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'Announcement_Controller_C_CreateTextAnnouncement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateTextAnnouncement, CallFunc_Create_ReturnValue) == 0x000060, "Member 'Announcement_Controller_C_CreateTextAnnouncement::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.CreateValueAnnouncement
// 0x0130 (0x0130 - 0x0000)
struct Announcement_Controller_C_CreateValueAnnouncement final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Param_Name;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           Color;                                             // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FractionalDigits;                                  // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C8[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon;                                              // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Icon_Tint;                                         // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C9[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0058(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
};
static_assert(alignof(Announcement_Controller_C_CreateValueAnnouncement) == 0x000008, "Wrong alignment on Announcement_Controller_C_CreateValueAnnouncement");
static_assert(sizeof(Announcement_Controller_C_CreateValueAnnouncement) == 0x000130, "Wrong size on Announcement_Controller_C_CreateValueAnnouncement");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, Value) == 0x000000, "Member 'Announcement_Controller_C_CreateValueAnnouncement::Value' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, Param_Name) == 0x000008, "Member 'Announcement_Controller_C_CreateValueAnnouncement::Param_Name' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, Color) == 0x000020, "Member 'Announcement_Controller_C_CreateValueAnnouncement::Color' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, FractionalDigits) == 0x000030, "Member 'Announcement_Controller_C_CreateValueAnnouncement::FractionalDigits' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, Icon) == 0x000038, "Member 'Announcement_Controller_C_CreateValueAnnouncement::Icon' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, Icon_Tint) == 0x000040, "Member 'Announcement_Controller_C_CreateValueAnnouncement::Icon_Tint' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'Announcement_Controller_C_CreateValueAnnouncement::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, CallFunc_Conv_FloatToText_ReturnValue) == 0x000058, "Member 'Announcement_Controller_C_CreateValueAnnouncement::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, CallFunc_TextToUpper_ReturnValue) == 0x000070, "Member 'Announcement_Controller_C_CreateValueAnnouncement::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'Announcement_Controller_C_CreateValueAnnouncement::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'Announcement_Controller_C_CreateValueAnnouncement::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, K2Node_MakeArray_Array) == 0x000108, "Member 'Announcement_Controller_C_CreateValueAnnouncement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateValueAnnouncement, CallFunc_Format_ReturnValue) == 0x000118, "Member 'Announcement_Controller_C_CreateValueAnnouncement::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.CreateSkinAnnouncement
// 0x0028 (0x0028 - 0x0000)
struct Announcement_Controller_C_CreateSkinAnnouncement final
{
public:
	class UItemSkin*                              Skin;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemID*                                SkinOwner;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartDelay_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36CA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnnouncement_Skin_C*                   CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_CreateSkinAnnouncement) == 0x000008, "Wrong alignment on Announcement_Controller_C_CreateSkinAnnouncement");
static_assert(sizeof(Announcement_Controller_C_CreateSkinAnnouncement) == 0x000028, "Wrong size on Announcement_Controller_C_CreateSkinAnnouncement");
static_assert(offsetof(Announcement_Controller_C_CreateSkinAnnouncement, Skin) == 0x000000, "Member 'Announcement_Controller_C_CreateSkinAnnouncement::Skin' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateSkinAnnouncement, SkinOwner) == 0x000008, "Member 'Announcement_Controller_C_CreateSkinAnnouncement::SkinOwner' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateSkinAnnouncement, CallFunc_GetStartDelay_ReturnValue) == 0x000010, "Member 'Announcement_Controller_C_CreateSkinAnnouncement::CallFunc_GetStartDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateSkinAnnouncement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'Announcement_Controller_C_CreateSkinAnnouncement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateSkinAnnouncement, CallFunc_Create_ReturnValue) == 0x000020, "Member 'Announcement_Controller_C_CreateSkinAnnouncement::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.GetStartDelay
// 0x0010 (0x0010 - 0x0000)
struct Announcement_Controller_C_GetStartDelay final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_GetStartDelay) == 0x000004, "Wrong alignment on Announcement_Controller_C_GetStartDelay");
static_assert(sizeof(Announcement_Controller_C_GetStartDelay) == 0x000010, "Wrong size on Announcement_Controller_C_GetStartDelay");
static_assert(offsetof(Announcement_Controller_C_GetStartDelay, ReturnValue) == 0x000000, "Member 'Announcement_Controller_C_GetStartDelay::ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_GetStartDelay, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'Announcement_Controller_C_GetStartDelay::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_GetStartDelay, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'Announcement_Controller_C_GetStartDelay::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_GetStartDelay, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'Announcement_Controller_C_GetStartDelay::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.QueueWidget
// 0x0040 (0x0040 - 0x0000)
struct Announcement_Controller_C_QueueWidget final
{
public:
	class UUserWidget*                            InWidget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       SlotWidget;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Widget;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0018(0x0010)(NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36CB[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_QueueWidget) == 0x000008, "Wrong alignment on Announcement_Controller_C_QueueWidget");
static_assert(sizeof(Announcement_Controller_C_QueueWidget) == 0x000040, "Wrong size on Announcement_Controller_C_QueueWidget");
static_assert(offsetof(Announcement_Controller_C_QueueWidget, InWidget) == 0x000000, "Member 'Announcement_Controller_C_QueueWidget::InWidget' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_QueueWidget, SlotWidget) == 0x000008, "Member 'Announcement_Controller_C_QueueWidget::SlotWidget' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_QueueWidget, Widget) == 0x000010, "Member 'Announcement_Controller_C_QueueWidget::Widget' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_QueueWidget, K2Node_MakeStruct_Anchors) == 0x000018, "Member 'Announcement_Controller_C_QueueWidget::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_QueueWidget, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000028, "Member 'Announcement_Controller_C_QueueWidget::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_QueueWidget, CallFunc_AddChildToCanvas_ReturnValue) == 0x000030, "Member 'Announcement_Controller_C_QueueWidget::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_QueueWidget, CallFunc_FMax_ReturnValue) == 0x000038, "Member 'Announcement_Controller_C_QueueWidget::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_QueueWidget, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'Announcement_Controller_C_QueueWidget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.CreateVPAnnouncement
// 0x0028 (0x0028 - 0x0000)
struct Announcement_Controller_C_CreateVPAnnouncement final
{
public:
	class UVictoryPose*                           VictoryPose;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     VPOwner;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartDelay_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36CC[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnnouncement_VictoryPose_C*            CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_CreateVPAnnouncement) == 0x000008, "Wrong alignment on Announcement_Controller_C_CreateVPAnnouncement");
static_assert(sizeof(Announcement_Controller_C_CreateVPAnnouncement) == 0x000028, "Wrong size on Announcement_Controller_C_CreateVPAnnouncement");
static_assert(offsetof(Announcement_Controller_C_CreateVPAnnouncement, VictoryPose) == 0x000000, "Member 'Announcement_Controller_C_CreateVPAnnouncement::VictoryPose' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateVPAnnouncement, VPOwner) == 0x000008, "Member 'Announcement_Controller_C_CreateVPAnnouncement::VPOwner' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateVPAnnouncement, CallFunc_GetStartDelay_ReturnValue) == 0x000010, "Member 'Announcement_Controller_C_CreateVPAnnouncement::CallFunc_GetStartDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateVPAnnouncement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'Announcement_Controller_C_CreateVPAnnouncement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateVPAnnouncement, CallFunc_Create_ReturnValue) == 0x000020, "Member 'Announcement_Controller_C_CreateVPAnnouncement::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.CreateSchematicAnnouncement
// 0x0018 (0x0018 - 0x0000)
struct Announcement_Controller_C_CreateSchematicAnnouncement final
{
public:
	class USchematic*                             InSchematic;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnnouncement_Schematic_C*              CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_CreateSchematicAnnouncement) == 0x000008, "Wrong alignment on Announcement_Controller_C_CreateSchematicAnnouncement");
static_assert(sizeof(Announcement_Controller_C_CreateSchematicAnnouncement) == 0x000018, "Wrong size on Announcement_Controller_C_CreateSchematicAnnouncement");
static_assert(offsetof(Announcement_Controller_C_CreateSchematicAnnouncement, InSchematic) == 0x000000, "Member 'Announcement_Controller_C_CreateSchematicAnnouncement::InSchematic' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateSchematicAnnouncement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'Announcement_Controller_C_CreateSchematicAnnouncement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateSchematicAnnouncement, CallFunc_Create_ReturnValue) == 0x000010, "Member 'Announcement_Controller_C_CreateSchematicAnnouncement::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.CreatePickaxeAnnouncement
// 0x0018 (0x0018 - 0x0000)
struct Announcement_Controller_C_CreatePickaxeAnnouncement final
{
public:
	class UPickaxePart*                           PickaxePart;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnnouncement_PickaxePart_C*            CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_CreatePickaxeAnnouncement) == 0x000008, "Wrong alignment on Announcement_Controller_C_CreatePickaxeAnnouncement");
static_assert(sizeof(Announcement_Controller_C_CreatePickaxeAnnouncement) == 0x000018, "Wrong size on Announcement_Controller_C_CreatePickaxeAnnouncement");
static_assert(offsetof(Announcement_Controller_C_CreatePickaxeAnnouncement, PickaxePart) == 0x000000, "Member 'Announcement_Controller_C_CreatePickaxeAnnouncement::PickaxePart' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreatePickaxeAnnouncement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'Announcement_Controller_C_CreatePickaxeAnnouncement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreatePickaxeAnnouncement, CallFunc_Create_ReturnValue) == 0x000010, "Member 'Announcement_Controller_C_CreatePickaxeAnnouncement::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.CreateVanityAnnouncement
// 0x0028 (0x0028 - 0x0000)
struct Announcement_Controller_C_CreateVanityAnnouncement final
{
public:
	class UVanityItem*                            VanityItem;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     VanityOwner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartDelay_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36CD[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnnouncement_Vanity_C*                 CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_CreateVanityAnnouncement) == 0x000008, "Wrong alignment on Announcement_Controller_C_CreateVanityAnnouncement");
static_assert(sizeof(Announcement_Controller_C_CreateVanityAnnouncement) == 0x000028, "Wrong size on Announcement_Controller_C_CreateVanityAnnouncement");
static_assert(offsetof(Announcement_Controller_C_CreateVanityAnnouncement, VanityItem) == 0x000000, "Member 'Announcement_Controller_C_CreateVanityAnnouncement::VanityItem' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateVanityAnnouncement, VanityOwner) == 0x000008, "Member 'Announcement_Controller_C_CreateVanityAnnouncement::VanityOwner' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateVanityAnnouncement, CallFunc_GetStartDelay_ReturnValue) == 0x000010, "Member 'Announcement_Controller_C_CreateVanityAnnouncement::CallFunc_GetStartDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateVanityAnnouncement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'Announcement_Controller_C_CreateVanityAnnouncement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateVanityAnnouncement, CallFunc_Create_ReturnValue) == 0x000020, "Member 'Announcement_Controller_C_CreateVanityAnnouncement::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function Announcement_Controller.Announcement_Controller_C.CreateEverythingCollectedAnnouncement
// 0x0030 (0x0030 - 0x0000)
struct Announcement_Controller_C_CreateEverythingCollectedAnnouncement final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartDelay_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36CE[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnnouncement_CollectedEverything_C*    CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_Controller_C_CreateEverythingCollectedAnnouncement) == 0x000008, "Wrong alignment on Announcement_Controller_C_CreateEverythingCollectedAnnouncement");
static_assert(sizeof(Announcement_Controller_C_CreateEverythingCollectedAnnouncement) == 0x000030, "Wrong size on Announcement_Controller_C_CreateEverythingCollectedAnnouncement");
static_assert(offsetof(Announcement_Controller_C_CreateEverythingCollectedAnnouncement, Message) == 0x000000, "Member 'Announcement_Controller_C_CreateEverythingCollectedAnnouncement::Message' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateEverythingCollectedAnnouncement, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'Announcement_Controller_C_CreateEverythingCollectedAnnouncement::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateEverythingCollectedAnnouncement, CallFunc_GetStartDelay_ReturnValue) == 0x000020, "Member 'Announcement_Controller_C_CreateEverythingCollectedAnnouncement::CallFunc_GetStartDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Controller_C_CreateEverythingCollectedAnnouncement, CallFunc_Create_ReturnValue) == 0x000028, "Member 'Announcement_Controller_C_CreateEverythingCollectedAnnouncement::CallFunc_Create_ReturnValue' has a wrong offset!");

}

