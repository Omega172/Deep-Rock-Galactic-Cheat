#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_TimeText

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace CG::Params
{

// Function ITM_TimeText.ITM_TimeText_C.ExecuteUbergraph_ITM_TimeText
// 0x0298 (0x0298 - 0x0000)
struct ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_389F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              K2Node_CustomEvent_Timespan;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowDays;                       // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A0[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0118(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0158(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_3;             // 0x0170(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0188(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x01C8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0208(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0248(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0258(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0268(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0280(0x0018)()
};
static_assert(alignof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText) == 0x000008, "Wrong alignment on ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText");
static_assert(sizeof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText) == 0x000298, "Wrong size on ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, EntryPoint) == 0x000000, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_CustomEvent_Timespan) == 0x000008, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_CustomEvent_Timespan' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_CustomEvent_ShowDays) == 0x000010, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_CustomEvent_ShowDays' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_BreakTimespan_Days) == 0x000014, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_BreakTimespan_Hours) == 0x000018, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_BreakTimespan_Minutes) == 0x00001C, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_BreakTimespan_Seconds) == 0x000020, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_BreakTimespan_Milliseconds) == 0x000024, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000040, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000118, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000158, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_Conv_IntToText_ReturnValue_3) == 0x000170, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_Conv_IntToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_MakeStruct_FormatArgumentData_4) == 0x000188, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_MakeStruct_FormatArgumentData_5) == 0x0001C8, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_MakeStruct_FormatArgumentData_6) == 0x000208, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_MakeArray_Array) == 0x000248, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, K2Node_MakeArray_Array_1) == 0x000258, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_Format_ReturnValue) == 0x000268, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText, CallFunc_Format_ReturnValue_1) == 0x000280, "Member 'ITM_TimeText_C_ExecuteUbergraph_ITM_TimeText::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function ITM_TimeText.ITM_TimeText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_TimeText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_TimeText_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_TimeText_C_PreConstruct");
static_assert(sizeof(ITM_TimeText_C_PreConstruct) == 0x000001, "Wrong size on ITM_TimeText_C_PreConstruct");
static_assert(offsetof(ITM_TimeText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_TimeText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_TimeText.ITM_TimeText_C.SetData
// 0x0010 (0x0010 - 0x0000)
struct ITM_TimeText_C_SetData final
{
public:
	struct FTimespan                              Timespan;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDays;                                          // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_TimeText_C_SetData) == 0x000008, "Wrong alignment on ITM_TimeText_C_SetData");
static_assert(sizeof(ITM_TimeText_C_SetData) == 0x000010, "Wrong size on ITM_TimeText_C_SetData");
static_assert(offsetof(ITM_TimeText_C_SetData, Timespan) == 0x000000, "Member 'ITM_TimeText_C_SetData::Timespan' has a wrong offset!");
static_assert(offsetof(ITM_TimeText_C_SetData, ShowDays) == 0x000008, "Member 'ITM_TimeText_C_SetData::ShowDays' has a wrong offset!");

}

