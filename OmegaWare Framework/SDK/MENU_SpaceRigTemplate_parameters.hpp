#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MENU_SpaceRigTemplate

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.ExecuteUbergraph_MENU_SpaceRigTemplate
// 0x0198 (0x0198 - 0x0000)
struct MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_317C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Credits)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AFSDPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AFSDPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TSubclassOf<class APlayerCharacter> NewCharacter)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TSubclassOf<class APlayerCharacter> NewCharacter)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_317D[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue_1;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Credits;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_CustomEvent_PlayerState_1;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameState*                          CallFunc_GetFSDGameState_ReturnValue_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_CustomEvent_PlayerState;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWindowManager*                         CallFunc_GetWindowManager_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_DynamicCast_AsFSDPlayer_State;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_317E[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UResourceData*                          CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_317F[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3180[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_DynamicCast_AsFSDPlayer_State_1;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3181[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class APlayerCharacter>           K2Node_CustomEvent_NewCharacter_1;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_NewPlayer;                      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class APlayerCharacter>           K2Node_CustomEvent_NewCharacter;                   // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_DynamicCast_AsFSDPlayer_State_2;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3182[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue_2;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue_3;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameUserSettings*                   CallFunc_FSDGameUserSettings_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowUIAnimations_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_inVisible;                      // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3183[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3184[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_LoadoutSelectorBar_C*              K2Node_DynamicCast_AsITM_Loadout_Selector_Bar;     // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate) == 0x000008, "Wrong alignment on MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate");
static_assert(sizeof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate) == 0x000198, "Wrong size on MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, EntryPoint) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::EntryPoint' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, Temp_byte_Variable) == 0x000004, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CreateDelegate_OutputDelegate_4) == 0x000048, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CreateDelegate_OutputDelegate_5) == 0x000058, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, Temp_int_Array_Index_Variable) == 0x000068, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, Temp_byte_Variable_1) == 0x000074, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_Event_IsDesignTime) == 0x000075, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_MenuColors_OutputColor) == 0x000078, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetFSDSaveGame_ReturnValue) == 0x000088, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetFSDSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetFSDSaveGame_ReturnValue_1) == 0x000090, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetFSDSaveGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CustomEvent_Credits) == 0x000098, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CustomEvent_Credits' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00009C, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetFSDGameState_ReturnValue) == 0x0000A0, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetFSDGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CustomEvent_PlayerState_1) == 0x0000A8, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CustomEvent_PlayerState_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetFSDGameState_ReturnValue_1) == 0x0000B0, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetFSDGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CustomEvent_PlayerState) == 0x0000B8, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000C0, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetWindowManager_ReturnValue) == 0x0000C8, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetWindowManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_DynamicCast_AsFSDPlayer_State) == 0x0000D0, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_DynamicCast_AsFSDPlayer_State' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, Temp_bool_Variable) == 0x0000D9, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_Select_Default) == 0x0000E8, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0000F8, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_DynamicCast_AsFSDPlayer_State_1) == 0x000100, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_DynamicCast_AsFSDPlayer_State_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CustomEvent_NewCharacter_1) == 0x000110, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CustomEvent_NewCharacter_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CustomEvent_NewPlayer) == 0x000118, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CustomEvent_NewPlayer' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CustomEvent_NewCharacter) == 0x000120, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CustomEvent_NewCharacter' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_DynamicCast_AsFSDPlayer_State_2) == 0x000128, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_DynamicCast_AsFSDPlayer_State_2' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_DynamicCast_bSuccess_2) == 0x000130, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetFSDSaveGame_ReturnValue_2) == 0x000138, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetFSDSaveGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetFSDSaveGame_ReturnValue_3) == 0x000140, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetFSDSaveGame_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_FSDGameUserSettings_ReturnValue) == 0x000148, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_FSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetShowUIAnimations_ReturnValue) == 0x000150, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetShowUIAnimations_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_SelectVisibility_IsVisible) == 0x000151, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_SelectVisibility_VisibilityChanged) == 0x000152, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_SelectVisibility_New_Visibility) == 0x000153, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_CustomEvent_inVisible) == 0x000154, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_CustomEvent_inVisible' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000158, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000160, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000170, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_PlayAnimationForward_ReturnValue) == 0x000178, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, CallFunc_GetChildAt_ReturnValue) == 0x000180, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_DynamicCast_AsITM_Loadout_Selector_Bar) == 0x000188, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_DynamicCast_AsITM_Loadout_Selector_Bar' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate, K2Node_DynamicCast_bSuccess_3) == 0x000190, "Member 'MENU_SpaceRigTemplate_C_ExecuteUbergraph_MENU_SpaceRigTemplate::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.AnimateTopBarVisible
// 0x0001 (0x0001 - 0x0000)
struct MENU_SpaceRigTemplate_C_AnimateTopBarVisible final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_AnimateTopBarVisible) == 0x000001, "Wrong alignment on MENU_SpaceRigTemplate_C_AnimateTopBarVisible");
static_assert(sizeof(MENU_SpaceRigTemplate_C_AnimateTopBarVisible) == 0x000001, "Wrong size on MENU_SpaceRigTemplate_C_AnimateTopBarVisible");
static_assert(offsetof(MENU_SpaceRigTemplate_C_AnimateTopBarVisible, InVisible) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_AnimateTopBarVisible::InVisible' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.OnSelectedCharacterChanged
// 0x0008 (0x0008 - 0x0000)
struct MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged final
{
public:
	TSubclassOf<class APlayerCharacter>           NewCharacter;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged) == 0x000008, "Wrong alignment on MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged");
static_assert(sizeof(MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged) == 0x000008, "Wrong size on MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged");
static_assert(offsetof(MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged, NewCharacter) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged::NewCharacter' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.Setup Player Events
// 0x0008 (0x0008 - 0x0000)
struct MENU_SpaceRigTemplate_C_Setup_Player_Events final
{
public:
	class APlayerState*                           NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_Setup_Player_Events) == 0x000008, "Wrong alignment on MENU_SpaceRigTemplate_C_Setup_Player_Events");
static_assert(sizeof(MENU_SpaceRigTemplate_C_Setup_Player_Events) == 0x000008, "Wrong size on MENU_SpaceRigTemplate_C_Setup_Player_Events");
static_assert(offsetof(MENU_SpaceRigTemplate_C_Setup_Player_Events, NewPlayer) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_Setup_Player_Events::NewPlayer' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.OnSelectedCharacterChanged_Event
// 0x0008 (0x0008 - 0x0000)
struct MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged_Event final
{
public:
	TSubclassOf<class APlayerCharacter>           NewCharacter;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged_Event) == 0x000008, "Wrong alignment on MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged_Event");
static_assert(sizeof(MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged_Event) == 0x000008, "Wrong size on MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged_Event");
static_assert(offsetof(MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged_Event, NewCharacter) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_OnSelectedCharacterChanged_Event::NewCharacter' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.OnPlayerLeave_Event
// 0x0008 (0x0008 - 0x0000)
struct MENU_SpaceRigTemplate_C_OnPlayerLeave_Event final
{
public:
	class AFSDPlayerState*                        Param_PlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_OnPlayerLeave_Event) == 0x000008, "Wrong alignment on MENU_SpaceRigTemplate_C_OnPlayerLeave_Event");
static_assert(sizeof(MENU_SpaceRigTemplate_C_OnPlayerLeave_Event) == 0x000008, "Wrong size on MENU_SpaceRigTemplate_C_OnPlayerLeave_Event");
static_assert(offsetof(MENU_SpaceRigTemplate_C_OnPlayerLeave_Event, Param_PlayerState) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_OnPlayerLeave_Event::Param_PlayerState' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.OnPlayerJoined_Event
// 0x0008 (0x0008 - 0x0000)
struct MENU_SpaceRigTemplate_C_OnPlayerJoined_Event final
{
public:
	class AFSDPlayerState*                        Param_PlayerState;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_OnPlayerJoined_Event) == 0x000008, "Wrong alignment on MENU_SpaceRigTemplate_C_OnPlayerJoined_Event");
static_assert(sizeof(MENU_SpaceRigTemplate_C_OnPlayerJoined_Event) == 0x000008, "Wrong size on MENU_SpaceRigTemplate_C_OnPlayerJoined_Event");
static_assert(offsetof(MENU_SpaceRigTemplate_C_OnPlayerJoined_Event, Param_PlayerState) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_OnPlayerJoined_Event::Param_PlayerState' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.OnCreditsChanged_Event
// 0x0004 (0x0004 - 0x0000)
struct MENU_SpaceRigTemplate_C_OnCreditsChanged_Event final
{
public:
	int32                                         Credits;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_OnCreditsChanged_Event) == 0x000004, "Wrong alignment on MENU_SpaceRigTemplate_C_OnCreditsChanged_Event");
static_assert(sizeof(MENU_SpaceRigTemplate_C_OnCreditsChanged_Event) == 0x000004, "Wrong size on MENU_SpaceRigTemplate_C_OnCreditsChanged_Event");
static_assert(offsetof(MENU_SpaceRigTemplate_C_OnCreditsChanged_Event, Credits) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_OnCreditsChanged_Event::Credits' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MENU_SpaceRigTemplate_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_PreConstruct) == 0x000001, "Wrong alignment on MENU_SpaceRigTemplate_C_PreConstruct");
static_assert(sizeof(MENU_SpaceRigTemplate_C_PreConstruct) == 0x000001, "Wrong size on MENU_SpaceRigTemplate_C_PreConstruct");
static_assert(offsetof(MENU_SpaceRigTemplate_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.SetCloseButtonVisible
// 0x0005 (0x0005 - 0x0000)
struct MENU_SpaceRigTemplate_C_SetCloseButtonVisible final
{
public:
	bool                                          Param_ShowCloseButton;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_SetCloseButtonVisible) == 0x000001, "Wrong alignment on MENU_SpaceRigTemplate_C_SetCloseButtonVisible");
static_assert(sizeof(MENU_SpaceRigTemplate_C_SetCloseButtonVisible) == 0x000005, "Wrong size on MENU_SpaceRigTemplate_C_SetCloseButtonVisible");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetCloseButtonVisible, Param_ShowCloseButton) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_SetCloseButtonVisible::Param_ShowCloseButton' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetCloseButtonVisible, Temp_bool_Variable) == 0x000001, "Member 'MENU_SpaceRigTemplate_C_SetCloseButtonVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetCloseButtonVisible, Temp_byte_Variable) == 0x000002, "Member 'MENU_SpaceRigTemplate_C_SetCloseButtonVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetCloseButtonVisible, Temp_byte_Variable_1) == 0x000003, "Member 'MENU_SpaceRigTemplate_C_SetCloseButtonVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetCloseButtonVisible, K2Node_Select_Default) == 0x000004, "Member 'MENU_SpaceRigTemplate_C_SetCloseButtonVisible::K2Node_Select_Default' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.UpdatePlayerCount
// 0x0078 (0x0078 - 0x0000)
struct MENU_SpaceRigTemplate_C_UpdatePlayerCount final
{
public:
	TArray<class UPlayerCharacterID*>             Players;                                           // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class UITM_TopBar_PlayerCounter_C*>    PlayerIcons;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTearingDown_isTearingDown;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3185[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3186[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3187[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3188[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        K2Node_DynamicCast_AsFSDPlayer_State;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3189[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_UpdatePlayerCount) == 0x000008, "Wrong alignment on MENU_SpaceRigTemplate_C_UpdatePlayerCount");
static_assert(sizeof(MENU_SpaceRigTemplate_C_UpdatePlayerCount) == 0x000078, "Wrong size on MENU_SpaceRigTemplate_C_UpdatePlayerCount");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, Players) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::Players' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, PlayerIcons) == 0x000010, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::PlayerIcons' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_IsTearingDown_isTearingDown) == 0x000024, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_IsTearingDown_isTearingDown' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, Temp_int_Array_Index_Variable) == 0x000048, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_Array_Get_Item) == 0x000050, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, K2Node_DynamicCast_AsFSDPlayer_State) == 0x000058, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::K2Node_DynamicCast_AsFSDPlayer_State' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000061, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_GetSelectedCharacterID_ReturnValue) == 0x000068, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_GetSelectedCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_UpdatePlayerCount, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'MENU_SpaceRigTemplate_C_UpdatePlayerCount::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.SetBackMode
// 0x00D0 (0x00D0 - 0x0000)
struct MENU_SpaceRigTemplate_C_SetBackMode final
{
public:
	bool                                          Close_Is_Back;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318A[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_318B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0088(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x00A0(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x00B8(0x0018)()
};
static_assert(alignof(MENU_SpaceRigTemplate_C_SetBackMode) == 0x000008, "Wrong alignment on MENU_SpaceRigTemplate_C_SetBackMode");
static_assert(sizeof(MENU_SpaceRigTemplate_C_SetBackMode) == 0x0000D0, "Wrong size on MENU_SpaceRigTemplate_C_SetBackMode");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, Close_Is_Back) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::Close_Is_Back' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, Temp_bool_Variable) == 0x000001, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, Temp_text_Variable) == 0x000008, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, Temp_text_Variable_1) == 0x000020, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, Temp_bool_Variable_1) == 0x000038, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, Temp_text_Variable_2) == 0x000040, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, Temp_text_Variable_3) == 0x000058, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, K2Node_Select_Default) == 0x000070, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, K2Node_Select_Default_1) == 0x000088, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, CallFunc_TextToUpper_ReturnValue) == 0x0000A0, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_SpaceRigTemplate_C_SetBackMode, CallFunc_TextToUpper_ReturnValue_1) == 0x0000B8, "Member 'MENU_SpaceRigTemplate_C_SetBackMode::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");

// Function MENU_SpaceRigTemplate.MENU_SpaceRigTemplate_C.IsCloseButtonVisible
// 0x0001 (0x0001 - 0x0000)
struct MENU_SpaceRigTemplate_C_IsCloseButtonVisible final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MENU_SpaceRigTemplate_C_IsCloseButtonVisible) == 0x000001, "Wrong alignment on MENU_SpaceRigTemplate_C_IsCloseButtonVisible");
static_assert(sizeof(MENU_SpaceRigTemplate_C_IsCloseButtonVisible) == 0x000001, "Wrong size on MENU_SpaceRigTemplate_C_IsCloseButtonVisible");
static_assert(offsetof(MENU_SpaceRigTemplate_C_IsCloseButtonVisible, Visible) == 0x000000, "Member 'MENU_SpaceRigTemplate_C_IsCloseButtonVisible::Visible' has a wrong offset!");

}

