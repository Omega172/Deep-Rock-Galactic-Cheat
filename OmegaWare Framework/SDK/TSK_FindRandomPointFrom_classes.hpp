#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TSK_FindRandomPointFrom

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace CG
{

// BlueprintGeneratedClass TSK_FindRandomPointFrom.TSK_FindRandomPointFrom_C
// 0x0070 (0x0118 - 0x00A8)
class UTSK_FindRandomPointFrom_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Distance;                                          // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SnapToCeiling;                                     // 0x00B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FindAtDistance;                                    // 0x00B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F66[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 FromLocationKey;                                   // 0x00B8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 NewLocationKey;                                    // 0x00E0(0x0028)(Edit, BlueprintVisible)
	float                                         FlatGroundRadius;                                  // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxPathLength;                                     // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTries;                                          // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTries;                                      // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TSK_FindRandomPointFrom(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void Snap(bool Param_SnapToCeiling, class UDeepPathfinderMovement* Pathfinder, struct FVector& Location);
	struct FVector GetLocation();
	void GetBestFlatGround(const struct FVector& Origin, struct FVector* Array_Element);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TSK_FindRandomPointFrom_C">();
	}
	static class UTSK_FindRandomPointFrom_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTSK_FindRandomPointFrom_C>();
	}
};
static_assert(alignof(UTSK_FindRandomPointFrom_C) == 0x000008, "Wrong alignment on UTSK_FindRandomPointFrom_C");
static_assert(sizeof(UTSK_FindRandomPointFrom_C) == 0x000118, "Wrong size on UTSK_FindRandomPointFrom_C");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, UberGraphFrame) == 0x0000A8, "Member 'UTSK_FindRandomPointFrom_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, Distance) == 0x0000B0, "Member 'UTSK_FindRandomPointFrom_C::Distance' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, SnapToCeiling) == 0x0000B4, "Member 'UTSK_FindRandomPointFrom_C::SnapToCeiling' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, FindAtDistance) == 0x0000B5, "Member 'UTSK_FindRandomPointFrom_C::FindAtDistance' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, FromLocationKey) == 0x0000B8, "Member 'UTSK_FindRandomPointFrom_C::FromLocationKey' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, NewLocationKey) == 0x0000E0, "Member 'UTSK_FindRandomPointFrom_C::NewLocationKey' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, FlatGroundRadius) == 0x000108, "Member 'UTSK_FindRandomPointFrom_C::FlatGroundRadius' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, MaxPathLength) == 0x00010C, "Member 'UTSK_FindRandomPointFrom_C::MaxPathLength' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, MaxTries) == 0x000110, "Member 'UTSK_FindRandomPointFrom_C::MaxTries' has a wrong offset!");
static_assert(offsetof(UTSK_FindRandomPointFrom_C, CurrentTries) == 0x000114, "Member 'UTSK_FindRandomPointFrom_C::CurrentTries' has a wrong offset!");

}

