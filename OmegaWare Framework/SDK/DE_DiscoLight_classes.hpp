#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DE_DiscoLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// BlueprintGeneratedClass DE_DiscoLight.DE_DiscoLight_C
// 0x0040 (0x0100 - 0x00C0)
class UDE_DiscoLight_C final : public UDrinkEffectComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APlayerCharacter*                       Character;                                         // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APointLight*                            Light;                                             // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      LightColorCurve;                                   // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSinceStart;                                    // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Curvelength;                                       // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        MusicPlayer;                                       // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               StarburstParticles;                                // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnabledEffect;                                     // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_DE_DiscoLight(int32 EntryPoint);
	void Set_Light();
	void OnStopEffect();
	void OnStartEffect(class APlayerCharacter* Param_Character);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnLoaded_9A4F10A04AD1DAA8BA45FFA4A7DB3EEC(class UObject* Loaded);
	void OnRep_Light();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DE_DiscoLight_C">();
	}
	static class UDE_DiscoLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDE_DiscoLight_C>();
	}
};
static_assert(alignof(UDE_DiscoLight_C) == 0x000008, "Wrong alignment on UDE_DiscoLight_C");
static_assert(sizeof(UDE_DiscoLight_C) == 0x000100, "Wrong size on UDE_DiscoLight_C");
static_assert(offsetof(UDE_DiscoLight_C, UberGraphFrame) == 0x0000C0, "Member 'UDE_DiscoLight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDE_DiscoLight_C, Character) == 0x0000C8, "Member 'UDE_DiscoLight_C::Character' has a wrong offset!");
static_assert(offsetof(UDE_DiscoLight_C, Light) == 0x0000D0, "Member 'UDE_DiscoLight_C::Light' has a wrong offset!");
static_assert(offsetof(UDE_DiscoLight_C, LightColorCurve) == 0x0000D8, "Member 'UDE_DiscoLight_C::LightColorCurve' has a wrong offset!");
static_assert(offsetof(UDE_DiscoLight_C, TimeSinceStart) == 0x0000E0, "Member 'UDE_DiscoLight_C::TimeSinceStart' has a wrong offset!");
static_assert(offsetof(UDE_DiscoLight_C, Curvelength) == 0x0000E4, "Member 'UDE_DiscoLight_C::Curvelength' has a wrong offset!");
static_assert(offsetof(UDE_DiscoLight_C, MusicPlayer) == 0x0000E8, "Member 'UDE_DiscoLight_C::MusicPlayer' has a wrong offset!");
static_assert(offsetof(UDE_DiscoLight_C, StarburstParticles) == 0x0000F0, "Member 'UDE_DiscoLight_C::StarburstParticles' has a wrong offset!");
static_assert(offsetof(UDE_DiscoLight_C, EnabledEffect) == 0x0000F8, "Member 'UDE_DiscoLight_C::EnabledEffect' has a wrong offset!");

}

