#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_AdvancedLabel

#include "Basic.hpp"

#include "UI_AdvancedLabel_classes.hpp"
#include "UI_AdvancedLabel_parameters.hpp"


namespace CG
{

// Function UI_AdvancedLabel.UI_AdvancedLabel_C.ExecuteUbergraph_UI_AdvancedLabel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::ExecuteUbergraph_UI_AdvancedLabel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "ExecuteUbergraph_UI_AdvancedLabel");

	Params::UI_AdvancedLabel_C_ExecuteUbergraph_UI_AdvancedLabel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.OnReset
// (Event, Protected, BlueprintEvent)

void UUI_AdvancedLabel_C::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.OnAddString
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::OnAddString(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "OnAddString");

	Params::UI_AdvancedLabel_C_OnAddString Parms{};

	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.OnAddKeyName
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::OnAddKeyName(const class FString& Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "OnAddKeyName");

	Params::UI_AdvancedLabel_C_OnAddKeyName Parms{};

	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.OnAddIcon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FActionIconMapping               Icon                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_AdvancedLabel_C::OnAddIcon(const class FString& Param_Name, const struct FActionIconMapping& Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "OnAddIcon");

	Params::UI_AdvancedLabel_C_OnAddIcon Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.Icon = std::move(Icon);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.OnNewLine
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::OnNewLine(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "OnNewLine");

	Params::UI_AdvancedLabel_C_OnNewLine Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.SetTextTint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Param_Text_Tint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::SetTextTint(const struct FLinearColor& Param_Text_Tint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "SetTextTint");

	Params::UI_AdvancedLabel_C_SetTextTint Parms{};

	Parms.Param_Text_Tint = std::move(Param_Text_Tint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.SetIconTint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Param_PC__Icon_Tint                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_Controller_Icon_Tint                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::SetIconTint(const struct FLinearColor& Param_PC__Icon_Tint, const struct FLinearColor& Param_Controller_Icon_Tint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "SetIconTint");

	Params::UI_AdvancedLabel_C_SetIconTint Parms{};

	Parms.Param_PC__Icon_Tint = std::move(Param_PC__Icon_Tint);
	Parms.Param_Controller_Icon_Tint = std::move(Param_Controller_Icon_Tint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.SetKeyNameTint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Param_Key_Name_Tint                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::SetKeyNameTint(const struct FLinearColor& Param_Key_Name_Tint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "SetKeyNameTint");

	Params::UI_AdvancedLabel_C_SetKeyNameTint Parms{};

	Parms.Param_Key_Name_Tint = std::move(Param_Key_Name_Tint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.SetTints
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Param_Text_Tint                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_Key_Name_Tint                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_PC__Icon_Tint                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Param_Controller_Icon_Tint                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::SetTints(const struct FLinearColor& Param_Text_Tint, const struct FLinearColor& Param_Key_Name_Tint, const struct FLinearColor& Param_PC__Icon_Tint, const struct FLinearColor& Param_Controller_Icon_Tint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "SetTints");

	Params::UI_AdvancedLabel_C_SetTints Parms{};

	Parms.Param_Text_Tint = std::move(Param_Text_Tint);
	Parms.Param_Key_Name_Tint = std::move(Param_Key_Name_Tint);
	Parms.Param_PC__Icon_Tint = std::move(Param_PC__Icon_Tint);
	Parms.Param_Controller_Icon_Tint = std::move(Param_Controller_Icon_Tint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.SetPreviewAs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Param_PreviewAs                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::SetPreviewAs(uint8 Param_PreviewAs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "SetPreviewAs");

	Params::UI_AdvancedLabel_C_SetPreviewAs Parms{};

	Parms.Param_PreviewAs = Param_PreviewAs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.SetFontSize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Font_Size                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::SetFontSize(int32 Font_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "SetFontSize");

	Params::UI_AdvancedLabel_C_SetFontSize Parms{};

	Parms.Font_Size = Font_Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.SetIconSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Icon_Size                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Icon_Size_ControllerOverride                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_AdvancedLabel_C::SetIconSize(int32 Param_Icon_Size, int32 Param_Icon_Size_ControllerOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "SetIconSize");

	Params::UI_AdvancedLabel_C_SetIconSize Parms{};

	Parms.Param_Icon_Size = Param_Icon_Size;
	Parms.Param_Icon_Size_ControllerOverride = Param_Icon_Size_ControllerOverride;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_AdvancedLabel.UI_AdvancedLabel_C.SetFont
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateFontInfo                   InFont                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    InKeepFontSize                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_AdvancedLabel_C::SetFont(const struct FSlateFontInfo& InFont, bool InKeepFontSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_AdvancedLabel_C", "SetFont");

	Params::UI_AdvancedLabel_C_SetFont Parms{};

	Parms.InFont = std::move(InFont);
	Parms.InKeepFontSize = InKeepFontSize;

	UObject::ProcessEvent(Func, &Parms);
}

}

