#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LIB_PerkColors

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"


namespace CG::Params
{

// Function LIB_PerkColors.LIB_PerkColors_C.PerkColorByState
// 0x0098 (0x0098 - 0x0000)
struct LIB_PerkColors_C_PerkColorByState final
{
public:
	EPerkUsageType                                InPerkType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkTierState                                InPerkState;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CE1[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutBackground;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutBorder;                                         // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutIcon;                                           // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Black;                                             // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Unavailable;                                       // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Main;                                              // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_PerkColorFromType_OutColor;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LIB_PerkColors_C_PerkColorByState) == 0x000008, "Wrong alignment on LIB_PerkColors_C_PerkColorByState");
static_assert(sizeof(LIB_PerkColors_C_PerkColorByState) == 0x000098, "Wrong size on LIB_PerkColors_C_PerkColorByState");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, InPerkType) == 0x000000, "Member 'LIB_PerkColors_C_PerkColorByState::InPerkType' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, InPerkState) == 0x000001, "Member 'LIB_PerkColors_C_PerkColorByState::InPerkState' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, __WorldContext) == 0x000008, "Member 'LIB_PerkColors_C_PerkColorByState::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, OutBackground) == 0x000010, "Member 'LIB_PerkColors_C_PerkColorByState::OutBackground' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, OutBorder) == 0x000020, "Member 'LIB_PerkColors_C_PerkColorByState::OutBorder' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, OutIcon) == 0x000030, "Member 'LIB_PerkColors_C_PerkColorByState::OutIcon' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, Black) == 0x000040, "Member 'LIB_PerkColors_C_PerkColorByState::Black' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, Unavailable) == 0x000050, "Member 'LIB_PerkColors_C_PerkColorByState::Unavailable' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, Main) == 0x000060, "Member 'LIB_PerkColors_C_PerkColorByState::Main' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, CallFunc_MenuColors_OutputColor) == 0x000070, "Member 'LIB_PerkColors_C_PerkColorByState::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, CallFunc_PerkColorFromType_OutColor) == 0x000080, "Member 'LIB_PerkColors_C_PerkColorByState::CallFunc_PerkColorFromType_OutColor' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorByState, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'LIB_PerkColors_C_PerkColorByState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function LIB_PerkColors.LIB_PerkColors_C.PerkColorFromType
// 0x0058 (0x0058 - 0x0000)
struct LIB_PerkColors_C_PerkColorFromType final
{
public:
	EPerkUsageType                                InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CE2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           OutColor;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkUsageType                                Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CE3[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LIB_PerkColors_C_PerkColorFromType) == 0x000008, "Wrong alignment on LIB_PerkColors_C_PerkColorFromType");
static_assert(sizeof(LIB_PerkColors_C_PerkColorFromType) == 0x000058, "Wrong size on LIB_PerkColors_C_PerkColorFromType");
static_assert(offsetof(LIB_PerkColors_C_PerkColorFromType, InType) == 0x000000, "Member 'LIB_PerkColors_C_PerkColorFromType::InType' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorFromType, __WorldContext) == 0x000008, "Member 'LIB_PerkColors_C_PerkColorFromType::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorFromType, OutColor) == 0x000010, "Member 'LIB_PerkColors_C_PerkColorFromType::OutColor' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorFromType, Temp_byte_Variable) == 0x000020, "Member 'LIB_PerkColors_C_PerkColorFromType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorFromType, Temp_struct_Variable) == 0x000024, "Member 'LIB_PerkColors_C_PerkColorFromType::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorFromType, Temp_struct_Variable_1) == 0x000034, "Member 'LIB_PerkColors_C_PerkColorFromType::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_PerkColors_C_PerkColorFromType, K2Node_Select_Default) == 0x000044, "Member 'LIB_PerkColors_C_PerkColorFromType::K2Node_Select_Default' has a wrong offset!");

}

