#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_BaseUpgradeIcon

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "UMG_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function ITM_BaseUpgradeIcon.ITM_BaseUpgradeIcon_C.OnHoverBegin__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_BaseUpgradeIcon_C_OnHoverBegin__DelegateSignature final
{
public:
	class UITM_BaseUpgradeIcon_C*                 Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_BaseUpgradeIcon_C_OnHoverBegin__DelegateSignature) == 0x000008, "Wrong alignment on ITM_BaseUpgradeIcon_C_OnHoverBegin__DelegateSignature");
static_assert(sizeof(ITM_BaseUpgradeIcon_C_OnHoverBegin__DelegateSignature) == 0x000008, "Wrong size on ITM_BaseUpgradeIcon_C_OnHoverBegin__DelegateSignature");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_OnHoverBegin__DelegateSignature, Widget) == 0x000000, "Member 'ITM_BaseUpgradeIcon_C_OnHoverBegin__DelegateSignature::Widget' has a wrong offset!");

// Function ITM_BaseUpgradeIcon.ITM_BaseUpgradeIcon_C.OnHoverEnd__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_BaseUpgradeIcon_C_OnHoverEnd__DelegateSignature final
{
public:
	class UITM_BaseUpgradeIcon_C*                 Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_BaseUpgradeIcon_C_OnHoverEnd__DelegateSignature) == 0x000008, "Wrong alignment on ITM_BaseUpgradeIcon_C_OnHoverEnd__DelegateSignature");
static_assert(sizeof(ITM_BaseUpgradeIcon_C_OnHoverEnd__DelegateSignature) == 0x000008, "Wrong size on ITM_BaseUpgradeIcon_C_OnHoverEnd__DelegateSignature");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_OnHoverEnd__DelegateSignature, Widget) == 0x000000, "Member 'ITM_BaseUpgradeIcon_C_OnHoverEnd__DelegateSignature::Widget' has a wrong offset!");

// Function ITM_BaseUpgradeIcon.ITM_BaseUpgradeIcon_C.OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_BaseUpgradeIcon_C_OnClicked__DelegateSignature final
{
public:
	class UITM_BaseUpgradeIcon_C*                 Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_BaseUpgradeIcon_C_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on ITM_BaseUpgradeIcon_C_OnClicked__DelegateSignature");
static_assert(sizeof(ITM_BaseUpgradeIcon_C_OnClicked__DelegateSignature) == 0x000008, "Wrong size on ITM_BaseUpgradeIcon_C_OnClicked__DelegateSignature");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_OnClicked__DelegateSignature, Widget) == 0x000000, "Member 'ITM_BaseUpgradeIcon_C_OnClicked__DelegateSignature::Widget' has a wrong offset!");

// Function ITM_BaseUpgradeIcon.ITM_BaseUpgradeIcon_C.ExecuteUbergraph_ITM_BaseUpgradeIcon
// 0x0030 (0x0030 - 0x0000)
struct ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFC[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon) == 0x000008, "Wrong alignment on ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon");
static_assert(sizeof(ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon) == 0x000030, "Wrong size on ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon, EntryPoint) == 0x000000, "Member 'ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon, CallFunc_MenuColors_OutputColor) == 0x000004, "Member 'ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon, K2Node_Event_IsDesignTime) == 0x000014, "Member 'ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000018, "Member 'ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x00001C, "Member 'ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'ITM_BaseUpgradeIcon_C_ExecuteUbergraph_ITM_BaseUpgradeIcon::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function ITM_BaseUpgradeIcon.ITM_BaseUpgradeIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_BaseUpgradeIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_BaseUpgradeIcon_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_BaseUpgradeIcon_C_PreConstruct");
static_assert(sizeof(ITM_BaseUpgradeIcon_C_PreConstruct) == 0x000001, "Wrong size on ITM_BaseUpgradeIcon_C_PreConstruct");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_BaseUpgradeIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_BaseUpgradeIcon.ITM_BaseUpgradeIcon_C.Update
// 0x00E8 (0x00E8 - 0x0000)
struct ITM_BaseUpgradeIcon_C_Update final
{
public:
	class UTexture2D*                             InIcon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpgradeStatus                            InStatus;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CFD[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InLockRequirement;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             LockTexture;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               LockTint;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InShowEquippedAsBorder;                            // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShowLockIcon;                                    // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InShowLockRequirement;                             // 0x001B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InTierLocked;                                      // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLocked;                                          // 0x001D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable;                                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable_4;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable_7;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable_8;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_9;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpgradeStatus                            Temp_byte_Variable_12;                             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_13;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_14;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_15;                             // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_16;                             // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_17;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable_18;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_19;                             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpgradeStatus                            Temp_byte_Variable_20;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_21;                             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_22;                             // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_23;                             // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpgradeStatus                            Temp_byte_Variable_26;                             // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_27;                             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_28;                             // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_29;                             // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_30;                             // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CFE[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	bool                                          Temp_bool_Variable_11;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable_31;                             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               K2Node_Select_Default_1;                           // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_2;                           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CFF[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D00[0x5];                                     // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_4;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               K2Node_Select_Default_5;                           // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               K2Node_Select_Default_6;                           // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_8;                           // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_9;                           // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_10;                          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_11;                          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D01[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_12;                          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               K2Node_Select_Default_13;                          // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_14;                          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_15;                          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D02[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_3;                 // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_BaseUpgradeIcon_C_Update) == 0x000008, "Wrong alignment on ITM_BaseUpgradeIcon_C_Update");
static_assert(sizeof(ITM_BaseUpgradeIcon_C_Update) == 0x0000E8, "Wrong size on ITM_BaseUpgradeIcon_C_Update");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, InIcon) == 0x000000, "Member 'ITM_BaseUpgradeIcon_C_Update::InIcon' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, InStatus) == 0x000008, "Member 'ITM_BaseUpgradeIcon_C_Update::InStatus' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, InLockRequirement) == 0x00000C, "Member 'ITM_BaseUpgradeIcon_C_Update::InLockRequirement' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, LockTexture) == 0x000010, "Member 'ITM_BaseUpgradeIcon_C_Update::LockTexture' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, LockTint) == 0x000018, "Member 'ITM_BaseUpgradeIcon_C_Update::LockTint' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, InShowEquippedAsBorder) == 0x000019, "Member 'ITM_BaseUpgradeIcon_C_Update::InShowEquippedAsBorder' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, InShowLockIcon) == 0x00001A, "Member 'ITM_BaseUpgradeIcon_C_Update::InShowLockIcon' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, InShowLockRequirement) == 0x00001B, "Member 'ITM_BaseUpgradeIcon_C_Update::InShowLockRequirement' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, InTierLocked) == 0x00001C, "Member 'ITM_BaseUpgradeIcon_C_Update::InTierLocked' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, IsLocked) == 0x00001D, "Member 'ITM_BaseUpgradeIcon_C_Update::IsLocked' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable) == 0x00001E, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable) == 0x00001F, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_object_Variable) == 0x000020, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_1) == 0x000028, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_1) == 0x000029, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_2) == 0x00002A, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_2) == 0x00002B, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_3) == 0x00002C, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_3) == 0x00002D, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_4) == 0x00002E, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_4) == 0x00002F, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_5) == 0x000030, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_6) == 0x000031, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_5) == 0x000032, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_6) == 0x000033, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_7) == 0x000034, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_7) == 0x000035, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_8) == 0x000036, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_9) == 0x000037, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_8) == 0x000038, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_10) == 0x000039, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_11) == 0x00003A, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_12) == 0x00003B, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_13) == 0x00003C, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_14) == 0x00003D, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_15) == 0x00003E, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_16) == 0x00003F, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_17) == 0x000040, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_9) == 0x000041, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_18) == 0x000042, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_19) == 0x000043, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_20) == 0x000044, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_21) == 0x000045, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_22) == 0x000046, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_23) == 0x000047, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_10) == 0x000048, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_24) == 0x000049, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_25) == 0x00004A, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_26) == 0x00004B, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_27) == 0x00004C, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_28) == 0x00004D, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_29) == 0x00004E, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_30) == 0x00004F, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default) == 0x000058, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_11) == 0x000078, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_byte_Variable_31) == 0x000079, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007A, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_1) == 0x00007B, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_2) == 0x00007C, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_MenuColors_OutputColor) == 0x000080, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_3) == 0x000090, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_BooleanAND_ReturnValue_1) == 0x000092, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_4) == 0x000098, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A0, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_5) == 0x0000A1, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A2, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_6) == 0x0000A3, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_BooleanAND_ReturnValue_3) == 0x0000A4, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_7) == 0x0000A5, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_8) == 0x0000A6, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_9) == 0x0000A7, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_MenuColors_OutputColor_1) == 0x0000A8, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_10) == 0x0000B8, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_11) == 0x0000B9, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_MenuColors_OutputColor_2) == 0x0000BC, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_12) == 0x0000CC, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_IsValid_ReturnValue_1) == 0x0000CD, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_13) == 0x0000CE, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, Temp_bool_Variable_12) == 0x0000CF, "Member 'ITM_BaseUpgradeIcon_C_Update::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_14) == 0x0000D0, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, K2Node_Select_Default_15) == 0x0000D1, "Member 'ITM_BaseUpgradeIcon_C_Update::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_Update, CallFunc_MenuColors_OutputColor_3) == 0x0000D4, "Member 'ITM_BaseUpgradeIcon_C_Update::CallFunc_MenuColors_OutputColor_3' has a wrong offset!");

// Function ITM_BaseUpgradeIcon.ITM_BaseUpgradeIcon_C.IsInteractable
// 0x0001 (0x0001 - 0x0000)
struct ITM_BaseUpgradeIcon_C_IsInteractable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_BaseUpgradeIcon_C_IsInteractable) == 0x000001, "Wrong alignment on ITM_BaseUpgradeIcon_C_IsInteractable");
static_assert(sizeof(ITM_BaseUpgradeIcon_C_IsInteractable) == 0x000001, "Wrong size on ITM_BaseUpgradeIcon_C_IsInteractable");
static_assert(offsetof(ITM_BaseUpgradeIcon_C_IsInteractable, ReturnValue) == 0x000000, "Member 'ITM_BaseUpgradeIcon_C_IsInteractable::ReturnValue' has a wrong offset!");

}

