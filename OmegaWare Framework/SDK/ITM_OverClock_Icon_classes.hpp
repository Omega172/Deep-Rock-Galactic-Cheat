#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_OverClock_Icon

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "Engine_structs.hpp"
#include "FSD_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ITM_OverClock_Icon.ITM_Overclock_Icon_C
// 0x0098 (0x02F8 - 0x0260)
class UITM_Overclock_Icon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_Outer;                                      // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               IconSizer;                                         // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        IconTypeSwitcher;                                  // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgFrame;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgIcon;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_SkinIcon_C*                        ITM_SkinIcon;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         IconSize;                                          // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3579[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             IconTexture;                                       // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ENUM_MenuColors                               IconColor;                                         // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357A[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             FrameTexture;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ENUM_MenuColors                               FrameColor;                                        // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          HasTooltip;                                        // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_357B[0x6];                                     // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TooltipHeader;                                     // 0x02C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   TooltipTxt;                                        // 0x02D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UItemUpgrade*                           Overclock;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ITM_Overclock_Icon(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetIconSize(int32 InSize);
	void SetFrameColor(ENUM_MenuColors ColorSelector);
	void SetFrame(class UTexture2D* Texture);
	void SetIcon(class UTexture2D* Value);
	void SetIconColor(ENUM_MenuColors Color);
	void FromSchematic(class USchematic* InSchematic, bool ShowState);
	void FromUpgrade(class UItemUpgrade* InUpgrade, class USchematicCategory** OutSchematicCategory);
	void SetFrameLinearColor(const struct FLinearColor& Color);
	void SetCategory(class USchematicCategory* InCategory);
	void FromSchematicType(ESchematicType InType);
	void GetFrameLinearColor(struct FLinearColor* Param_ColorAndOpacity);
	class UWidget* GetOverclockTooltip();
	void SetOverclockTooltip(class UItemUpgrade* Param_Overclock);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_Overclock_Icon_C">();
	}
	static class UITM_Overclock_Icon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_Overclock_Icon_C>();
	}
};
static_assert(alignof(UITM_Overclock_Icon_C) == 0x000008, "Wrong alignment on UITM_Overclock_Icon_C");
static_assert(sizeof(UITM_Overclock_Icon_C) == 0x0002F8, "Wrong size on UITM_Overclock_Icon_C");
static_assert(offsetof(UITM_Overclock_Icon_C, UberGraphFrame) == 0x000260, "Member 'UITM_Overclock_Icon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, Button_Outer) == 0x000268, "Member 'UITM_Overclock_Icon_C::Button_Outer' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, IconSizer) == 0x000270, "Member 'UITM_Overclock_Icon_C::IconSizer' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, IconTypeSwitcher) == 0x000278, "Member 'UITM_Overclock_Icon_C::IconTypeSwitcher' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, ImgFrame) == 0x000280, "Member 'UITM_Overclock_Icon_C::ImgFrame' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, ImgIcon) == 0x000288, "Member 'UITM_Overclock_Icon_C::ImgIcon' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, ITM_SkinIcon) == 0x000290, "Member 'UITM_Overclock_Icon_C::ITM_SkinIcon' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, IconSize) == 0x000298, "Member 'UITM_Overclock_Icon_C::IconSize' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, IconTexture) == 0x0002A0, "Member 'UITM_Overclock_Icon_C::IconTexture' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, IconColor) == 0x0002A8, "Member 'UITM_Overclock_Icon_C::IconColor' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, FrameTexture) == 0x0002B0, "Member 'UITM_Overclock_Icon_C::FrameTexture' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, FrameColor) == 0x0002B8, "Member 'UITM_Overclock_Icon_C::FrameColor' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, HasTooltip) == 0x0002B9, "Member 'UITM_Overclock_Icon_C::HasTooltip' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, TooltipHeader) == 0x0002C0, "Member 'UITM_Overclock_Icon_C::TooltipHeader' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, TooltipTxt) == 0x0002D8, "Member 'UITM_Overclock_Icon_C::TooltipTxt' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Icon_C, Overclock) == 0x0002F0, "Member 'UITM_Overclock_Icon_C::Overclock' has a wrong offset!");

}

