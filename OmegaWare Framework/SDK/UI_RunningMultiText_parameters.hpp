#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RunningMultiText

#include "Basic.hpp"


namespace CG::Params
{

// Function UI_RunningMultiText.UI_RunningMultiText_C.ExecuteUbergraph_UI_RunningMultiText
// 0x0070 (0x0070 - 0x0000)
struct UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NormalizedTime;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float DeltaTime, float NormalizedTime)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRunnerProgress_Finished;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2D[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0018)()
	float                                         K2Node_CustomEvent_DeltaTime_1;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NormalizedTime_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMiniTimerAction*                       CallFunc_MiniTimer_ReturnValue;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2E[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float DeltaTime, float NormalizedTime)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText) == 0x000008, "Wrong alignment on UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText");
static_assert(sizeof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText) == 0x000070, "Wrong size on UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, EntryPoint) == 0x000000, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, K2Node_CustomEvent_DeltaTime) == 0x000004, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, K2Node_CustomEvent_NormalizedTime) == 0x000008, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::K2Node_CustomEvent_NormalizedTime' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, Temp_float_Variable) == 0x00001C, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, Temp_float_Variable_1) == 0x000020, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, CallFunc_SetRunnerProgress_Finished) == 0x000024, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::CallFunc_SetRunnerProgress_Finished' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, Temp_bool_Has_Been_Initd_Variable) == 0x000025, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, Temp_bool_IsClosed_Variable) == 0x000026, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, K2Node_Event_IsDesignTime) == 0x000027, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, CallFunc_Array_Get_Item) == 0x000030, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, K2Node_CustomEvent_DeltaTime_1) == 0x000048, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::K2Node_CustomEvent_DeltaTime_1' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, K2Node_CustomEvent_NormalizedTime_1) == 0x00004C, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::K2Node_CustomEvent_NormalizedTime_1' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, CallFunc_MiniTimer_ReturnValue) == 0x000050, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::CallFunc_MiniTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'UI_RunningMultiText_C_ExecuteUbergraph_UI_RunningMultiText::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function UI_RunningMultiText.UI_RunningMultiText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_RunningMultiText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_RunningMultiText_C_PreConstruct) == 0x000001, "Wrong alignment on UI_RunningMultiText_C_PreConstruct");
static_assert(sizeof(UI_RunningMultiText_C_PreConstruct) == 0x000001, "Wrong size on UI_RunningMultiText_C_PreConstruct");
static_assert(offsetof(UI_RunningMultiText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_RunningMultiText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_RunningMultiText.UI_RunningMultiText_C.Completed_B06C42A944ABEA2C4BF8E7AF24421023
// 0x0008 (0x0008 - 0x0000)
struct UI_RunningMultiText_C_Completed_B06C42A944ABEA2C4BF8E7AF24421023 final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalizedTime;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_RunningMultiText_C_Completed_B06C42A944ABEA2C4BF8E7AF24421023) == 0x000004, "Wrong alignment on UI_RunningMultiText_C_Completed_B06C42A944ABEA2C4BF8E7AF24421023");
static_assert(sizeof(UI_RunningMultiText_C_Completed_B06C42A944ABEA2C4BF8E7AF24421023) == 0x000008, "Wrong size on UI_RunningMultiText_C_Completed_B06C42A944ABEA2C4BF8E7AF24421023");
static_assert(offsetof(UI_RunningMultiText_C_Completed_B06C42A944ABEA2C4BF8E7AF24421023, DeltaTime) == 0x000000, "Member 'UI_RunningMultiText_C_Completed_B06C42A944ABEA2C4BF8E7AF24421023::DeltaTime' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_Completed_B06C42A944ABEA2C4BF8E7AF24421023, NormalizedTime) == 0x000004, "Member 'UI_RunningMultiText_C_Completed_B06C42A944ABEA2C4BF8E7AF24421023::NormalizedTime' has a wrong offset!");

// Function UI_RunningMultiText.UI_RunningMultiText_C.OnTick_B06C42A944ABEA2C4BF8E7AF24421023
// 0x0008 (0x0008 - 0x0000)
struct UI_RunningMultiText_C_OnTick_B06C42A944ABEA2C4BF8E7AF24421023 final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalizedTime;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_RunningMultiText_C_OnTick_B06C42A944ABEA2C4BF8E7AF24421023) == 0x000004, "Wrong alignment on UI_RunningMultiText_C_OnTick_B06C42A944ABEA2C4BF8E7AF24421023");
static_assert(sizeof(UI_RunningMultiText_C_OnTick_B06C42A944ABEA2C4BF8E7AF24421023) == 0x000008, "Wrong size on UI_RunningMultiText_C_OnTick_B06C42A944ABEA2C4BF8E7AF24421023");
static_assert(offsetof(UI_RunningMultiText_C_OnTick_B06C42A944ABEA2C4BF8E7AF24421023, DeltaTime) == 0x000000, "Member 'UI_RunningMultiText_C_OnTick_B06C42A944ABEA2C4BF8E7AF24421023::DeltaTime' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_OnTick_B06C42A944ABEA2C4BF8E7AF24421023, NormalizedTime) == 0x000004, "Member 'UI_RunningMultiText_C_OnTick_B06C42A944ABEA2C4BF8E7AF24421023::NormalizedTime' has a wrong offset!");

// Function UI_RunningMultiText.UI_RunningMultiText_C.SetTexts
// 0x0010 (0x0010 - 0x0000)
struct UI_RunningMultiText_C_SetTexts final
{
public:
	TArray<class FText>                           InTexts;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_RunningMultiText_C_SetTexts) == 0x000008, "Wrong alignment on UI_RunningMultiText_C_SetTexts");
static_assert(sizeof(UI_RunningMultiText_C_SetTexts) == 0x000010, "Wrong size on UI_RunningMultiText_C_SetTexts");
static_assert(offsetof(UI_RunningMultiText_C_SetTexts, InTexts) == 0x000000, "Member 'UI_RunningMultiText_C_SetTexts::InTexts' has a wrong offset!");

// Function UI_RunningMultiText.UI_RunningMultiText_C.SetTextRunnerActive
// 0x0001 (0x0001 - 0x0000)
struct UI_RunningMultiText_C_SetTextRunnerActive final
{
public:
	bool                                          Inactive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_RunningMultiText_C_SetTextRunnerActive) == 0x000001, "Wrong alignment on UI_RunningMultiText_C_SetTextRunnerActive");
static_assert(sizeof(UI_RunningMultiText_C_SetTextRunnerActive) == 0x000001, "Wrong size on UI_RunningMultiText_C_SetTextRunnerActive");
static_assert(offsetof(UI_RunningMultiText_C_SetTextRunnerActive, Inactive) == 0x000000, "Member 'UI_RunningMultiText_C_SetTextRunnerActive::Inactive' has a wrong offset!");

// Function UI_RunningMultiText.UI_RunningMultiText_C.SetRunnerProgress
// 0x0048 (0x0048 - 0x0000)
struct UI_RunningMultiText_C_SetRunnerProgress final
{
public:
	float                                         InProgress;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Finished;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C30[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C31[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(UI_RunningMultiText_C_SetRunnerProgress) == 0x000008, "Wrong alignment on UI_RunningMultiText_C_SetRunnerProgress");
static_assert(sizeof(UI_RunningMultiText_C_SetRunnerProgress) == 0x000048, "Wrong size on UI_RunningMultiText_C_SetRunnerProgress");
static_assert(offsetof(UI_RunningMultiText_C_SetRunnerProgress, InProgress) == 0x000000, "Member 'UI_RunningMultiText_C_SetRunnerProgress::InProgress' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetRunnerProgress, Finished) == 0x000004, "Member 'UI_RunningMultiText_C_SetRunnerProgress::Finished' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetRunnerProgress, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'UI_RunningMultiText_C_SetRunnerProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetRunnerProgress, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'UI_RunningMultiText_C_SetRunnerProgress::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetRunnerProgress, CallFunc_Len_ReturnValue) == 0x000010, "Member 'UI_RunningMultiText_C_SetRunnerProgress::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetRunnerProgress, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000014, "Member 'UI_RunningMultiText_C_SetRunnerProgress::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetRunnerProgress, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'UI_RunningMultiText_C_SetRunnerProgress::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetRunnerProgress, CallFunc_GetSubstring_ReturnValue) == 0x000020, "Member 'UI_RunningMultiText_C_SetRunnerProgress::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetRunnerProgress, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'UI_RunningMultiText_C_SetRunnerProgress::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function UI_RunningMultiText.UI_RunningMultiText_C.SetNextLine
// 0x0030 (0x0030 - 0x0000)
struct UI_RunningMultiText_C_SetNextLine final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_RunningMultiText_C_SetNextLine) == 0x000008, "Wrong alignment on UI_RunningMultiText_C_SetNextLine");
static_assert(sizeof(UI_RunningMultiText_C_SetNextLine) == 0x000030, "Wrong size on UI_RunningMultiText_C_SetNextLine");
static_assert(offsetof(UI_RunningMultiText_C_SetNextLine, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'UI_RunningMultiText_C_SetNextLine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetNextLine, CallFunc_Max_ReturnValue) == 0x000004, "Member 'UI_RunningMultiText_C_SetNextLine::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetNextLine, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'UI_RunningMultiText_C_SetNextLine::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetNextLine, Temp_int_Variable) == 0x00000C, "Member 'UI_RunningMultiText_C_SetNextLine::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetNextLine, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'UI_RunningMultiText_C_SetNextLine::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetNextLine, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'UI_RunningMultiText_C_SetNextLine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetNextLine, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'UI_RunningMultiText_C_SetNextLine::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_SetNextLine, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'UI_RunningMultiText_C_SetNextLine::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function UI_RunningMultiText.UI_RunningMultiText_C.PlayCue
// 0x0010 (0x0010 - 0x0000)
struct UI_RunningMultiText_C_PlayCue final
{
public:
	class USoundCue*                              InSound;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_RunningMultiText_C_PlayCue) == 0x000008, "Wrong alignment on UI_RunningMultiText_C_PlayCue");
static_assert(sizeof(UI_RunningMultiText_C_PlayCue) == 0x000010, "Wrong size on UI_RunningMultiText_C_PlayCue");
static_assert(offsetof(UI_RunningMultiText_C_PlayCue, InSound) == 0x000000, "Member 'UI_RunningMultiText_C_PlayCue::InSound' has a wrong offset!");
static_assert(offsetof(UI_RunningMultiText_C_PlayCue, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UI_RunningMultiText_C_PlayCue::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

