#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Mulebay

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace CG
{

// AnimBlueprintGeneratedClass ABP_Mulebay.ABP_Mulebay_C
// 0x00E0 (0x03A0 - 0x02C0)
class UABP_Mulebay_C final : public UAnimInstance
{
public:
	uint8                                         Pad_30B2[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x02F8(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x0340(0x0050)()
	bool                                          IsOpen;                                            // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsOpening;                                         // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsClosing;                                         // 0x0392(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsClosed;                                          // 0x0393(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Mulebay(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Mulebay_C">();
	}
	static class UABP_Mulebay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Mulebay_C>();
	}
};
static_assert(alignof(UABP_Mulebay_C) == 0x000010, "Wrong alignment on UABP_Mulebay_C");
static_assert(sizeof(UABP_Mulebay_C) == 0x0003A0, "Wrong size on UABP_Mulebay_C");
static_assert(offsetof(UABP_Mulebay_C, UberGraphFrame) == 0x0002C0, "Member 'UABP_Mulebay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Mulebay_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UABP_Mulebay_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Mulebay_C, AnimGraphNode_Slot) == 0x0002F8, "Member 'UABP_Mulebay_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Mulebay_C, AnimGraphNode_SequenceEvaluator) == 0x000340, "Member 'UABP_Mulebay_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Mulebay_C, IsOpen) == 0x000390, "Member 'UABP_Mulebay_C::IsOpen' has a wrong offset!");
static_assert(offsetof(UABP_Mulebay_C, IsOpening) == 0x000391, "Member 'UABP_Mulebay_C::IsOpening' has a wrong offset!");
static_assert(offsetof(UABP_Mulebay_C, IsClosing) == 0x000392, "Member 'UABP_Mulebay_C::IsClosing' has a wrong offset!");
static_assert(offsetof(UABP_Mulebay_C, IsClosed) == 0x000393, "Member 'UABP_Mulebay_C::IsClosed' has a wrong offset!");

}

