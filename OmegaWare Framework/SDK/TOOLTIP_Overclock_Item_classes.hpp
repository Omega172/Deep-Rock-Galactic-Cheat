#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TOOLTIP_Overclock_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass TOOLTIP_Overclock_Item.TOOLTIP_Overclock_Item_C
// 0x0060 (0x02C0 - 0x0260)
class UTOOLTIP_Overclock_Item_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_Menu_MinimalWindow_C*            Basic_Menu_MinimalWindow23;                        // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATA_Overclock_CategoryName;                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATA_Overclock_Title;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                EquipBorder;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                HeaderBorder2;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               HeaderOverlay;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               HeaderSize;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_Overclock_Details_C*               ITM_Overclock_Details;                             // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_Overclock_Icon_C*                  ITM_Overclock_Icon;                                // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemUpgrade*                           Overclock;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USchematicCategory*                     Category;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TOOLTIP_Overclock_Item(int32 EntryPoint);
	void SetOverclock(class UItemUpgrade* Param_Overclock);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TOOLTIP_Overclock_Item_C">();
	}
	static class UTOOLTIP_Overclock_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTOOLTIP_Overclock_Item_C>();
	}
};
static_assert(alignof(UTOOLTIP_Overclock_Item_C) == 0x000008, "Wrong alignment on UTOOLTIP_Overclock_Item_C");
static_assert(sizeof(UTOOLTIP_Overclock_Item_C) == 0x0002C0, "Wrong size on UTOOLTIP_Overclock_Item_C");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, UberGraphFrame) == 0x000260, "Member 'UTOOLTIP_Overclock_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, Basic_Menu_MinimalWindow23) == 0x000268, "Member 'UTOOLTIP_Overclock_Item_C::Basic_Menu_MinimalWindow23' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, DATA_Overclock_CategoryName) == 0x000270, "Member 'UTOOLTIP_Overclock_Item_C::DATA_Overclock_CategoryName' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, DATA_Overclock_Title) == 0x000278, "Member 'UTOOLTIP_Overclock_Item_C::DATA_Overclock_Title' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, EquipBorder) == 0x000280, "Member 'UTOOLTIP_Overclock_Item_C::EquipBorder' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, HeaderBorder2) == 0x000288, "Member 'UTOOLTIP_Overclock_Item_C::HeaderBorder2' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, HeaderOverlay) == 0x000290, "Member 'UTOOLTIP_Overclock_Item_C::HeaderOverlay' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, HeaderSize) == 0x000298, "Member 'UTOOLTIP_Overclock_Item_C::HeaderSize' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, ITM_Overclock_Details) == 0x0002A0, "Member 'UTOOLTIP_Overclock_Item_C::ITM_Overclock_Details' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, ITM_Overclock_Icon) == 0x0002A8, "Member 'UTOOLTIP_Overclock_Item_C::ITM_Overclock_Icon' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, Overclock) == 0x0002B0, "Member 'UTOOLTIP_Overclock_Item_C::Overclock' has a wrong offset!");
static_assert(offsetof(UTOOLTIP_Overclock_Item_C, Category) == 0x0002B8, "Member 'UTOOLTIP_Overclock_Item_C::Category' has a wrong offset!");

}

