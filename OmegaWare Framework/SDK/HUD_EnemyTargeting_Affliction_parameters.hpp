#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_EnemyTargeting_Affliction

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function HUD_EnemyTargeting_Affliction.HUD_EnemyTargeting_Affliction_C.ExecuteUbergraph_HUD_EnemyTargeting_Affliction
// 0x00B0 (0x00B0 - 0x0000)
struct HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3478[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnAffliction*                        K2Node_DynamicCast_AsPawn_Affliction;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3479[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0028)()
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0088(0x0028)()
};
static_assert(alignof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction");
static_assert(sizeof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction) == 0x0000B0, "Wrong size on HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, EntryPoint) == 0x000000, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, K2Node_DynamicCast_AsPawn_Affliction) == 0x000010, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::K2Node_DynamicCast_AsPawn_Affliction' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, K2Node_Event_IsDesignTime) == 0x00002C, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, CallFunc_SelectVisibility_IsVisible) == 0x00002D, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, CallFunc_SelectVisibility_VisibilityChanged) == 0x00002E, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, CallFunc_SelectVisibility_New_Visibility) == 0x00002F, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, CallFunc_MenuColors_OutputColor) == 0x000030, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000040, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000078, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction, K2Node_MakeStruct_SlateColor_1) == 0x000088, "Member 'HUD_EnemyTargeting_Affliction_C_ExecuteUbergraph_HUD_EnemyTargeting_Affliction::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function HUD_EnemyTargeting_Affliction.HUD_EnemyTargeting_Affliction_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_EnemyTargeting_Affliction_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_Affliction_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_EnemyTargeting_Affliction_C_PreConstruct");
static_assert(sizeof(HUD_EnemyTargeting_Affliction_C_PreConstruct) == 0x000001, "Wrong size on HUD_EnemyTargeting_Affliction_C_PreConstruct");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_EnemyTargeting_Affliction_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_EnemyTargeting_Affliction.HUD_EnemyTargeting_Affliction_C.SetActive
// 0x0018 (0x0018 - 0x0000)
struct HUD_EnemyTargeting_Affliction_C_SetActive final
{
public:
	bool                                          Inactive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_347A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_Affliction_C_SetActive) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_Affliction_C_SetActive");
static_assert(sizeof(HUD_EnemyTargeting_Affliction_C_SetActive) == 0x000018, "Wrong size on HUD_EnemyTargeting_Affliction_C_SetActive");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_SetActive, Inactive) == 0x000000, "Member 'HUD_EnemyTargeting_Affliction_C_SetActive::Inactive' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_SetActive, CallFunc_SelectVisibility_IsVisible) == 0x000001, "Member 'HUD_EnemyTargeting_Affliction_C_SetActive::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_SetActive, CallFunc_SelectVisibility_VisibilityChanged) == 0x000002, "Member 'HUD_EnemyTargeting_Affliction_C_SetActive::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_SetActive, CallFunc_SelectVisibility_New_Visibility) == 0x000003, "Member 'HUD_EnemyTargeting_Affliction_C_SetActive::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_SetActive, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'HUD_EnemyTargeting_Affliction_C_SetActive::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_SetActive, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'HUD_EnemyTargeting_Affliction_C_SetActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function HUD_EnemyTargeting_Affliction.HUD_EnemyTargeting_Affliction_C.UpdateTarget
// 0x0010 (0x0010 - 0x0000)
struct HUD_EnemyTargeting_Affliction_C_UpdateTarget final
{
public:
	class UPawnAfflictionComponent*               InPawnAfflictions;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAfflictedBy_ReturnValue;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_EnemyTargeting_Affliction_C_UpdateTarget) == 0x000008, "Wrong alignment on HUD_EnemyTargeting_Affliction_C_UpdateTarget");
static_assert(sizeof(HUD_EnemyTargeting_Affliction_C_UpdateTarget) == 0x000010, "Wrong size on HUD_EnemyTargeting_Affliction_C_UpdateTarget");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_UpdateTarget, InPawnAfflictions) == 0x000000, "Member 'HUD_EnemyTargeting_Affliction_C_UpdateTarget::InPawnAfflictions' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_UpdateTarget, IsActive) == 0x000008, "Member 'HUD_EnemyTargeting_Affliction_C_UpdateTarget::IsActive' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_UpdateTarget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'HUD_EnemyTargeting_Affliction_C_UpdateTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_EnemyTargeting_Affliction_C_UpdateTarget, CallFunc_IsAfflictedBy_ReturnValue) == 0x00000A, "Member 'HUD_EnemyTargeting_Affliction_C_UpdateTarget::CallFunc_IsAfflictedBy_ReturnValue' has a wrong offset!");

}

