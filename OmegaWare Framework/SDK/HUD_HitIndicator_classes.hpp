#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_HitIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_HitIndicator.HUD_HitIndicator_C
// 0x0028 (0x02A8 - 0x0280)
class UHUD_HitIndicator_C final : public UFSDUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HitAnim;                                           // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IndicatorImage;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 KillImage;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CurrentPriority;                                   // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HUD_HitIndicator(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void OnHitAnimFinished();
	void OnHitAnimStarted();
	void Construct();
	void OnDamagedEnemy_Event(const TScriptInterface<class IHealth>& EnemyHealth, float Damage, float DamageModifier, float HealthRemaining, bool IsWeakPoint, bool IsRadial);
	void StartAnimation(int32 Param_Priority, float Scale, const struct FLinearColor& Color, bool ShowKillImage);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_HitIndicator_C">();
	}
	static class UHUD_HitIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_HitIndicator_C>();
	}
};
static_assert(alignof(UHUD_HitIndicator_C) == 0x000008, "Wrong alignment on UHUD_HitIndicator_C");
static_assert(sizeof(UHUD_HitIndicator_C) == 0x0002A8, "Wrong size on UHUD_HitIndicator_C");
static_assert(offsetof(UHUD_HitIndicator_C, UberGraphFrame) == 0x000280, "Member 'UHUD_HitIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_HitIndicator_C, HitAnim) == 0x000288, "Member 'UHUD_HitIndicator_C::HitAnim' has a wrong offset!");
static_assert(offsetof(UHUD_HitIndicator_C, IndicatorImage) == 0x000290, "Member 'UHUD_HitIndicator_C::IndicatorImage' has a wrong offset!");
static_assert(offsetof(UHUD_HitIndicator_C, KillImage) == 0x000298, "Member 'UHUD_HitIndicator_C::KillImage' has a wrong offset!");
static_assert(offsetof(UHUD_HitIndicator_C, CurrentPriority) == 0x0002A0, "Member 'UHUD_HitIndicator_C::CurrentPriority' has a wrong offset!");

}

