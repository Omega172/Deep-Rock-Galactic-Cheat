#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_PlayerTemperature

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"
#include "UMG_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_PlayerTemperature.HUD_PlayerTemperature_C
// 0x00A8 (0x0328 - 0x0280)
class UHUD_PlayerTemperature_C final : public UFSDUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear;                                            // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Pulse;                                             // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Fade;                                              // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Warning;                                           // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Arrow01;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrow02;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Arrow03;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ArrowBox;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG;                                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Glow;                                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Temp;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RootSize;                                          // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           TempBar;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UImage*>                         Arrows;                                            // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLinearColor                           Tint_Freeze;                                       // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Faded;                                             // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3275[0x3];                                     // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Tint_Overheated;                                   // 0x0314(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HUD_PlayerTemperature(int32 EntryPoint);
	void OnTemperatureStateChanged(EPlayerTemperatureState State);
	void OnBarVisibilityChanged(bool barVisible);
	void ShowTemperature();
	void OnTemperatureChangeRate_Event(int32 ChangeRate);
	void PreConstruct(bool IsDesignTime);
	void OnTemperatureChanged(float Temperature, float Change);
	void Construct();
	void UpdateArrows();
	void UpdateTemperature(float InTemperature, float InChange);
	void SetFaded(bool FadeOut);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_PlayerTemperature_C">();
	}
	static class UHUD_PlayerTemperature_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_PlayerTemperature_C>();
	}
};
static_assert(alignof(UHUD_PlayerTemperature_C) == 0x000008, "Wrong alignment on UHUD_PlayerTemperature_C");
static_assert(sizeof(UHUD_PlayerTemperature_C) == 0x000328, "Wrong size on UHUD_PlayerTemperature_C");
static_assert(offsetof(UHUD_PlayerTemperature_C, UberGraphFrame) == 0x000280, "Member 'UHUD_PlayerTemperature_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Appear) == 0x000288, "Member 'UHUD_PlayerTemperature_C::Appear' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Pulse) == 0x000290, "Member 'UHUD_PlayerTemperature_C::Pulse' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Fade) == 0x000298, "Member 'UHUD_PlayerTemperature_C::Fade' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Warning) == 0x0002A0, "Member 'UHUD_PlayerTemperature_C::Warning' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Arrow01) == 0x0002A8, "Member 'UHUD_PlayerTemperature_C::Arrow01' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Arrow02) == 0x0002B0, "Member 'UHUD_PlayerTemperature_C::Arrow02' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Arrow03) == 0x0002B8, "Member 'UHUD_PlayerTemperature_C::Arrow03' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, ArrowBox) == 0x0002C0, "Member 'UHUD_PlayerTemperature_C::ArrowBox' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, BG) == 0x0002C8, "Member 'UHUD_PlayerTemperature_C::BG' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Glow) == 0x0002D0, "Member 'UHUD_PlayerTemperature_C::Glow' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Icon_Temp) == 0x0002D8, "Member 'UHUD_PlayerTemperature_C::Icon_Temp' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, RootSize) == 0x0002E0, "Member 'UHUD_PlayerTemperature_C::RootSize' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, TempBar) == 0x0002E8, "Member 'UHUD_PlayerTemperature_C::TempBar' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Arrows) == 0x0002F0, "Member 'UHUD_PlayerTemperature_C::Arrows' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Tint_Freeze) == 0x000300, "Member 'UHUD_PlayerTemperature_C::Tint_Freeze' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Faded) == 0x000310, "Member 'UHUD_PlayerTemperature_C::Faded' has a wrong offset!");
static_assert(offsetof(UHUD_PlayerTemperature_C, Tint_Overheated) == 0x000314, "Member 'UHUD_PlayerTemperature_C::Tint_Overheated' has a wrong offset!");

}

