#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Popup_ModdedSave

#include "Basic.hpp"

#include "Popup_ModdedSave_classes.hpp"
#include "Popup_ModdedSave_parameters.hpp"


namespace CG
{

// Function Popup_ModdedSave.Popup_ModdedSave_C.OnModdedSaveLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UPopup_ModdedSave_C::OnModdedSaveLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "OnModdedSaveLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.OnModdedSaveCancelled__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UPopup_ModdedSave_C::OnModdedSaveCancelled__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "OnModdedSaveCancelled__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.ExecuteUbergraph_Popup_ModdedSave
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPopup_ModdedSave_C::ExecuteUbergraph_Popup_ModdedSave(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "ExecuteUbergraph_Popup_ModdedSave");

	Params::Popup_ModdedSave_C_ExecuteUbergraph_Popup_ModdedSave Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.Cancel
// (BlueprintCallable, BlueprintEvent)

void UPopup_ModdedSave_C::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "Cancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.BndEvt__Button_Cancel_K2Node_ComponentBoundEvent_0_OnReleased__DelegateSignature
// (BlueprintEvent)

void UPopup_ModdedSave_C::BndEvt__Button_Cancel_K2Node_ComponentBoundEvent_0_OnReleased__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "BndEvt__Button_Cancel_K2Node_ComponentBoundEvent_0_OnReleased__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.OnSaveCreated
// (BlueprintCallable, BlueprintEvent)

void UPopup_ModdedSave_C::OnSaveCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "OnSaveCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.OnSaveLoaded
// (BlueprintCallable, BlueprintEvent)

void UPopup_ModdedSave_C::OnSaveLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "OnSaveLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.OnSaveDeleted
// (BlueprintCallable, BlueprintEvent)

void UPopup_ModdedSave_C::OnSaveDeleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "OnSaveDeleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPopup_ModdedSave_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "PreConstruct");

	Params::Popup_ModdedSave_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPopup_ModdedSave_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.Set Create New Saveslot Entry
// (Public, BlueprintCallable, BlueprintEvent)

void UPopup_ModdedSave_C::Set_Create_New_Saveslot_Entry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "Set Create New Saveslot Entry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.SetColors
// (Public, BlueprintCallable, BlueprintEvent)

void UPopup_ModdedSave_C::SetColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "SetColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.BindSaveslotEvents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITM_SaveSlot_Entry_C*            SaveslotWidget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPopup_ModdedSave_C::BindSaveslotEvents(class UITM_SaveSlot_Entry_C* SaveslotWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "BindSaveslotEvents");

	Params::Popup_ModdedSave_C_BindSaveslotEvents Parms{};

	Parms.SaveslotWidget = SaveslotWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.Reset Color on Non Selected Save
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFSDSaveGame*                     SaveSlot                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPopup_ModdedSave_C::Reset_Color_on_Non_Selected_Save(class UFSDSaveGame* SaveSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "Reset Color on Non Selected Save");

	Params::Popup_ModdedSave_C_Reset_Color_on_Non_Selected_Save Parms{};

	Parms.SaveSlot = SaveSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.SetCanCancel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             OptionalTooltipText                                    (BlueprintVisible, BlueprintReadOnly, Parm)

void UPopup_ModdedSave_C::SetCanCancel(bool Can, const class FText& OptionalTooltipText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "SetCanCancel");

	Params::Popup_ModdedSave_C_SetCanCancel Parms{};

	Parms.Can = Can;
	Parms.OptionalTooltipText = std::move(OptionalTooltipText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.CancelButtonTooltip
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UPopup_ModdedSave_C::CancelButtonTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "CancelButtonTooltip");

	Params::Popup_ModdedSave_C_CancelButtonTooltip Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UPopup_ModdedSave_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "OnKeyDown");

	Params::Popup_ModdedSave_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Popup_ModdedSave.Popup_ModdedSave_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UPopup_ModdedSave_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Popup_ModdedSave_C", "OnKeyUp");

	Params::Popup_ModdedSave_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

