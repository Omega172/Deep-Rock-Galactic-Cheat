#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Frozen

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function HUD_Frozen.HUD_Frozen_C.ExecuteUbergraph_HUD_Frozen
// 0x0160 (0x0160 - 0x0000)
struct HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3635[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterState                               K2Node_CustomEvent_newState;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3636[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCharacterBreakOutState*>        CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3637[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EThawInputDirection Direction)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0044(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterState                               CallFunc_GetCurrentState_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3638[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3639[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDefrostProgress_ReturnValue;           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurrentProgress;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EThawInputDirection Direction)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_363A[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EThawInputDirection>                   K2Node_CustomEvent_Inputs;                         // 0x00D0(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_Initial;                        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363B[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterBreakOutState*                CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363C[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TArray<EThawInputDirection>& Inputs, bool Initial)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	EThawInputDirection                           K2Node_CustomEvent_Direction_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EThawInputDirection                           K2Node_CustomEvent_Direction;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363D[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECharacterState NewState)>     K2Node_CreateDelegate_OutputDelegate_3;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_363E[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterStateComponent*               CallFunc_GetCharacterStateComponent_ReturnValue;   // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterBreakOutState*                K2Node_DynamicCast_AsCharacter_Break_Out_State;    // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_363F[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterStateComponent*               CallFunc_GetCharacterStateComponent_ReturnValue_1; // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterBreakOutState*                K2Node_DynamicCast_AsCharacter_Break_Out_State_1;  // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3640[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue_1;       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen) == 0x000008, "Wrong alignment on HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen");
static_assert(sizeof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen) == 0x000160, "Wrong size on HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, EntryPoint) == 0x000000, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, Temp_int_Array_Index_Variable) == 0x000008, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_Event_IsDesignTime) == 0x000018, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CustomEvent_newState) == 0x000019, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CustomEvent_newState' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000020, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000031, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_Event_MyGeometry) == 0x000044, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_Event_InDeltaTime) == 0x00007C, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_GetCurrentState_ReturnValue) == 0x000080, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000084, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_GetDefrostProgress_ReturnValue) == 0x00008C, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_GetDefrostProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_Add_FloatFloat_ReturnValue) == 0x000090, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CustomEvent_CurrentProgress) == 0x000094, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CustomEvent_CurrentProgress' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_FMin_ReturnValue) == 0x000098, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_MenuColors_OutputColor) == 0x00009C, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_MenuColors_OutputColor_1) == 0x0000AC, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000BC, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CustomEvent_Inputs) == 0x0000D0, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CustomEvent_Inputs' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CustomEvent_Initial) == 0x0000E0, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CustomEvent_Initial' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_IsValid_ReturnValue) == 0x0000F5, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000F8, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CustomEvent_Direction_1) == 0x000108, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CustomEvent_Direction_1' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CustomEvent_Direction) == 0x000109, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_CreateDelegate_OutputDelegate_3) == 0x00010C, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_GetCharacterStateComponent_ReturnValue) == 0x000120, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_GetCharacterStateComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_DynamicCast_AsCharacter_Break_Out_State) == 0x000128, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_DynamicCast_AsCharacter_Break_Out_State' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_GetCharacterStateComponent_ReturnValue_1) == 0x000138, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_GetCharacterStateComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_DynamicCast_AsCharacter_Break_Out_State_1) == 0x000140, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_DynamicCast_AsCharacter_Break_Out_State_1' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_SelectInt_ReturnValue) == 0x00014C, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_SelectInt_ReturnValue_1) == 0x000150, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_GetActiveWidgetIndex_ReturnValue_1) == 0x000154, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_GetActiveWidgetIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000158, "Member 'HUD_Frozen_C_ExecuteUbergraph_HUD_Frozen::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function HUD_Frozen.HUD_Frozen_C.CustomEvent_0
// 0x0001 (0x0001 - 0x0000)
struct HUD_Frozen_C_CustomEvent_0 final
{
public:
	EThawInputDirection                           Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Frozen_C_CustomEvent_0) == 0x000001, "Wrong alignment on HUD_Frozen_C_CustomEvent_0");
static_assert(sizeof(HUD_Frozen_C_CustomEvent_0) == 0x000001, "Wrong size on HUD_Frozen_C_CustomEvent_0");
static_assert(offsetof(HUD_Frozen_C_CustomEvent_0, Direction) == 0x000000, "Member 'HUD_Frozen_C_CustomEvent_0::Direction' has a wrong offset!");

// Function HUD_Frozen.HUD_Frozen_C.OnBreakOutInputSuccess_Event_0
// 0x0001 (0x0001 - 0x0000)
struct HUD_Frozen_C_OnBreakOutInputSuccess_Event_0 final
{
public:
	EThawInputDirection                           Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Frozen_C_OnBreakOutInputSuccess_Event_0) == 0x000001, "Wrong alignment on HUD_Frozen_C_OnBreakOutInputSuccess_Event_0");
static_assert(sizeof(HUD_Frozen_C_OnBreakOutInputSuccess_Event_0) == 0x000001, "Wrong size on HUD_Frozen_C_OnBreakOutInputSuccess_Event_0");
static_assert(offsetof(HUD_Frozen_C_OnBreakOutInputSuccess_Event_0, Direction) == 0x000000, "Member 'HUD_Frozen_C_OnBreakOutInputSuccess_Event_0::Direction' has a wrong offset!");

// Function HUD_Frozen.HUD_Frozen_C.ThawInputUpdated
// 0x0018 (0x0018 - 0x0000)
struct HUD_Frozen_C_ThawInputUpdated final
{
public:
	TArray<EThawInputDirection>                   Inputs;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Initial;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Frozen_C_ThawInputUpdated) == 0x000008, "Wrong alignment on HUD_Frozen_C_ThawInputUpdated");
static_assert(sizeof(HUD_Frozen_C_ThawInputUpdated) == 0x000018, "Wrong size on HUD_Frozen_C_ThawInputUpdated");
static_assert(offsetof(HUD_Frozen_C_ThawInputUpdated, Inputs) == 0x000000, "Member 'HUD_Frozen_C_ThawInputUpdated::Inputs' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_ThawInputUpdated, Initial) == 0x000010, "Member 'HUD_Frozen_C_ThawInputUpdated::Initial' has a wrong offset!");

// Function HUD_Frozen.HUD_Frozen_C.SetProgress
// 0x0004 (0x0004 - 0x0000)
struct HUD_Frozen_C_SetProgress final
{
public:
	float                                         Param_CurrentProgress;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Frozen_C_SetProgress) == 0x000004, "Wrong alignment on HUD_Frozen_C_SetProgress");
static_assert(sizeof(HUD_Frozen_C_SetProgress) == 0x000004, "Wrong size on HUD_Frozen_C_SetProgress");
static_assert(offsetof(HUD_Frozen_C_SetProgress, Param_CurrentProgress) == 0x000000, "Member 'HUD_Frozen_C_SetProgress::Param_CurrentProgress' has a wrong offset!");

// Function HUD_Frozen.HUD_Frozen_C.Tick
// 0x003C (0x003C - 0x0000)
struct HUD_Frozen_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Frozen_C_Tick) == 0x000004, "Wrong alignment on HUD_Frozen_C_Tick");
static_assert(sizeof(HUD_Frozen_C_Tick) == 0x00003C, "Wrong size on HUD_Frozen_C_Tick");
static_assert(offsetof(HUD_Frozen_C_Tick, MyGeometry) == 0x000000, "Member 'HUD_Frozen_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(HUD_Frozen_C_Tick, InDeltaTime) == 0x000038, "Member 'HUD_Frozen_C_Tick::InDeltaTime' has a wrong offset!");

// Function HUD_Frozen.HUD_Frozen_C.OnCharacterStateChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct HUD_Frozen_C_OnCharacterStateChanged_Event final
{
public:
	ECharacterState                               NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Frozen_C_OnCharacterStateChanged_Event) == 0x000001, "Wrong alignment on HUD_Frozen_C_OnCharacterStateChanged_Event");
static_assert(sizeof(HUD_Frozen_C_OnCharacterStateChanged_Event) == 0x000001, "Wrong size on HUD_Frozen_C_OnCharacterStateChanged_Event");
static_assert(offsetof(HUD_Frozen_C_OnCharacterStateChanged_Event, NewState) == 0x000000, "Member 'HUD_Frozen_C_OnCharacterStateChanged_Event::NewState' has a wrong offset!");

// Function HUD_Frozen.HUD_Frozen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_Frozen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Frozen_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_Frozen_C_PreConstruct");
static_assert(sizeof(HUD_Frozen_C_PreConstruct) == 0x000001, "Wrong size on HUD_Frozen_C_PreConstruct");
static_assert(offsetof(HUD_Frozen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_Frozen_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

