#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_UnlockedCelebration

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ITM_UnlockedCelebration.ITM_UnlockedCelebration_C
// 0x0068 (0x02C8 - 0x0260)
class UITM_UnlockedCelebration_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimIntro;                                         // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UITM_BigButton_C*                       ContinueButton;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ForgeItemName;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NoiseImage;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           RewardHolder;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_MasteryReward_C*                    UI_MasteryReward;                                  // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 UpperBarCorner;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnFinished;                                        // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UUnlockReward*>                  Unlocks;                                           // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnFinished__DelegateSignature(TArray<class UUnlockReward*>& Rewards);
	void ExecuteUbergraph_ITM_UnlockedCelebration(int32 EntryPoint);
	void ShowRewards(const struct FMasteryItem& Rewards, class UClass* Item);
	void ClickContinue();
	void BndEvt__ContinueButton_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void Construct();
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_UnlockedCelebration_C">();
	}
	static class UITM_UnlockedCelebration_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_UnlockedCelebration_C>();
	}
};
static_assert(alignof(UITM_UnlockedCelebration_C) == 0x000008, "Wrong alignment on UITM_UnlockedCelebration_C");
static_assert(sizeof(UITM_UnlockedCelebration_C) == 0x0002C8, "Wrong size on UITM_UnlockedCelebration_C");
static_assert(offsetof(UITM_UnlockedCelebration_C, UberGraphFrame) == 0x000260, "Member 'UITM_UnlockedCelebration_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, AnimIntro) == 0x000268, "Member 'UITM_UnlockedCelebration_C::AnimIntro' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, ContinueButton) == 0x000270, "Member 'UITM_UnlockedCelebration_C::ContinueButton' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, ForgeItemName) == 0x000278, "Member 'UITM_UnlockedCelebration_C::ForgeItemName' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, Image_0) == 0x000280, "Member 'UITM_UnlockedCelebration_C::Image_0' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, NoiseImage) == 0x000288, "Member 'UITM_UnlockedCelebration_C::NoiseImage' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, RewardHolder) == 0x000290, "Member 'UITM_UnlockedCelebration_C::RewardHolder' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, UI_MasteryReward) == 0x000298, "Member 'UITM_UnlockedCelebration_C::UI_MasteryReward' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, UpperBarCorner) == 0x0002A0, "Member 'UITM_UnlockedCelebration_C::UpperBarCorner' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, OnFinished) == 0x0002A8, "Member 'UITM_UnlockedCelebration_C::OnFinished' has a wrong offset!");
static_assert(offsetof(UITM_UnlockedCelebration_C, Unlocks) == 0x0002B8, "Member 'UITM_UnlockedCelebration_C::Unlocks' has a wrong offset!");

}

