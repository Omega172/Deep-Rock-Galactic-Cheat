#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Armor_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function HUD_Armor_Base.HUD_Armor_Base_C.ExecuteUbergraph_HUD_Armor_Base
// 0x0080 (0x0080 - 0x0000)
struct HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E0[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_health;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34E1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       K2Node_CustomEvent_HealthComponent;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Health)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetArmorPct_ReturnValue;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetArmorPct_ReturnValue_1;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E2[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_InPercent;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E3[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_CustomEvent_Player;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E4[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHealthComponent*                       K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base) == 0x000008, "Wrong alignment on HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base");
static_assert(sizeof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base) == 0x000080, "Wrong size on HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, EntryPoint) == 0x000000, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, CallFunc_MenuColors_OutputColor) == 0x000004, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, Temp_bool_Variable) == 0x000014, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, Temp_object_Variable) == 0x000018, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, K2Node_CustomEvent_health) == 0x000020, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::K2Node_CustomEvent_health' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, K2Node_CustomEvent_HealthComponent) == 0x000028, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::K2Node_CustomEvent_HealthComponent' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, CallFunc_GetArmorPct_ReturnValue) == 0x000040, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::CallFunc_GetArmorPct_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, CallFunc_GetArmorPct_ReturnValue_1) == 0x000044, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::CallFunc_GetArmorPct_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, K2Node_Event_IsDesignTime) == 0x000048, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, K2Node_CustomEvent_InPercent) == 0x00004C, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::K2Node_CustomEvent_InPercent' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, K2Node_CustomEvent_Player) == 0x000058, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, K2Node_Select_Default) == 0x000068, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base, CallFunc_MenuColors_OutputColor_1) == 0x000070, "Member 'HUD_Armor_Base_C_ExecuteUbergraph_HUD_Armor_Base::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");

// Function HUD_Armor_Base.HUD_Armor_Base_C.Bind To Player
// 0x0008 (0x0008 - 0x0000)
struct HUD_Armor_Base_C_Bind_To_Player final
{
public:
	class APlayerCharacter*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Armor_Base_C_Bind_To_Player) == 0x000008, "Wrong alignment on HUD_Armor_Base_C_Bind_To_Player");
static_assert(sizeof(HUD_Armor_Base_C_Bind_To_Player) == 0x000008, "Wrong size on HUD_Armor_Base_C_Bind_To_Player");
static_assert(offsetof(HUD_Armor_Base_C_Bind_To_Player, Player) == 0x000000, "Member 'HUD_Armor_Base_C_Bind_To_Player::Player' has a wrong offset!");

// Function HUD_Armor_Base.HUD_Armor_Base_C.Set Armor Pct
// 0x0004 (0x0004 - 0x0000)
struct HUD_Armor_Base_C_Set_Armor_Pct final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Armor_Base_C_Set_Armor_Pct) == 0x000004, "Wrong alignment on HUD_Armor_Base_C_Set_Armor_Pct");
static_assert(sizeof(HUD_Armor_Base_C_Set_Armor_Pct) == 0x000004, "Wrong size on HUD_Armor_Base_C_Set_Armor_Pct");
static_assert(offsetof(HUD_Armor_Base_C_Set_Armor_Pct, InPercent) == 0x000000, "Member 'HUD_Armor_Base_C_Set_Armor_Pct::InPercent' has a wrong offset!");

// Function HUD_Armor_Base.HUD_Armor_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_Armor_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Armor_Base_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_Armor_Base_C_PreConstruct");
static_assert(sizeof(HUD_Armor_Base_C_PreConstruct) == 0x000001, "Wrong size on HUD_Armor_Base_C_PreConstruct");
static_assert(offsetof(HUD_Armor_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_Armor_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_Armor_Base.HUD_Armor_Base_C.Bind To Health Component
// 0x0008 (0x0008 - 0x0000)
struct HUD_Armor_Base_C_Bind_To_Health_Component final
{
public:
	class UHealthComponent*                       Param_HealthComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Armor_Base_C_Bind_To_Health_Component) == 0x000008, "Wrong alignment on HUD_Armor_Base_C_Bind_To_Health_Component");
static_assert(sizeof(HUD_Armor_Base_C_Bind_To_Health_Component) == 0x000008, "Wrong size on HUD_Armor_Base_C_Bind_To_Health_Component");
static_assert(offsetof(HUD_Armor_Base_C_Bind_To_Health_Component, Param_HealthComponent) == 0x000000, "Member 'HUD_Armor_Base_C_Bind_To_Health_Component::Param_HealthComponent' has a wrong offset!");

// Function HUD_Armor_Base.HUD_Armor_Base_C.ArmorChanged
// 0x0004 (0x0004 - 0x0000)
struct HUD_Armor_Base_C_ArmorChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Armor_Base_C_ArmorChanged) == 0x000004, "Wrong alignment on HUD_Armor_Base_C_ArmorChanged");
static_assert(sizeof(HUD_Armor_Base_C_ArmorChanged) == 0x000004, "Wrong size on HUD_Armor_Base_C_ArmorChanged");
static_assert(offsetof(HUD_Armor_Base_C_ArmorChanged, Health) == 0x000000, "Member 'HUD_Armor_Base_C_ArmorChanged::Health' has a wrong offset!");

}

