#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Overclock_Details_Item

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function ITM_Overclock_Details_Item.ITM_Overclock_Details_Item_C.ExecuteUbergraph_ITM_Overclock_Details_Item
// 0x0008 (0x0008 - 0x0000)
struct ITM_Overclock_Details_Item_C_ExecuteUbergraph_ITM_Overclock_Details_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Overclock_Details_Item_C_ExecuteUbergraph_ITM_Overclock_Details_Item) == 0x000004, "Wrong alignment on ITM_Overclock_Details_Item_C_ExecuteUbergraph_ITM_Overclock_Details_Item");
static_assert(sizeof(ITM_Overclock_Details_Item_C_ExecuteUbergraph_ITM_Overclock_Details_Item) == 0x000008, "Wrong size on ITM_Overclock_Details_Item_C_ExecuteUbergraph_ITM_Overclock_Details_Item");
static_assert(offsetof(ITM_Overclock_Details_Item_C_ExecuteUbergraph_ITM_Overclock_Details_Item, EntryPoint) == 0x000000, "Member 'ITM_Overclock_Details_Item_C_ExecuteUbergraph_ITM_Overclock_Details_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_ExecuteUbergraph_ITM_Overclock_Details_Item, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ITM_Overclock_Details_Item_C_ExecuteUbergraph_ITM_Overclock_Details_Item::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ITM_Overclock_Details_Item.ITM_Overclock_Details_Item_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_Overclock_Details_Item_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Overclock_Details_Item_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_Overclock_Details_Item_C_PreConstruct");
static_assert(sizeof(ITM_Overclock_Details_Item_C_PreConstruct) == 0x000001, "Wrong size on ITM_Overclock_Details_Item_C_PreConstruct");
static_assert(offsetof(ITM_Overclock_Details_Item_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_Overclock_Details_Item_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_Overclock_Details_Item.ITM_Overclock_Details_Item_C.SetData
// 0x0038 (0x0038 - 0x0000)
struct ITM_Overclock_Details_Item_C_SetData final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          InIsAdvantagous;                                   // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3751[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectMenuColor_OutputColor;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclock_Details_Item_C_SetData) == 0x000008, "Wrong alignment on ITM_Overclock_Details_Item_C_SetData");
static_assert(sizeof(ITM_Overclock_Details_Item_C_SetData) == 0x000038, "Wrong size on ITM_Overclock_Details_Item_C_SetData");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetData, InText) == 0x000000, "Member 'ITM_Overclock_Details_Item_C_SetData::InText' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetData, InIsAdvantagous) == 0x000018, "Member 'ITM_Overclock_Details_Item_C_SetData::InIsAdvantagous' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetData, Temp_bool_Variable) == 0x000019, "Member 'ITM_Overclock_Details_Item_C_SetData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetData, Temp_float_Variable) == 0x00001C, "Member 'ITM_Overclock_Details_Item_C_SetData::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetData, Temp_float_Variable_1) == 0x000020, "Member 'ITM_Overclock_Details_Item_C_SetData::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetData, K2Node_Select_Default) == 0x000024, "Member 'ITM_Overclock_Details_Item_C_SetData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetData, CallFunc_SelectMenuColor_OutputColor) == 0x000028, "Member 'ITM_Overclock_Details_Item_C_SetData::CallFunc_SelectMenuColor_OutputColor' has a wrong offset!");

// Function ITM_Overclock_Details_Item.ITM_Overclock_Details_Item_C.SetFontSize
// 0x0038 (0x0038 - 0x0000)
struct ITM_Overclock_Details_Item_C_SetFontSize final
{
public:
	int32                                         NewSize;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3752[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclock_Details_Item_C_SetFontSize) == 0x000008, "Wrong alignment on ITM_Overclock_Details_Item_C_SetFontSize");
static_assert(sizeof(ITM_Overclock_Details_Item_C_SetFontSize) == 0x000038, "Wrong size on ITM_Overclock_Details_Item_C_SetFontSize");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetFontSize, NewSize) == 0x000000, "Member 'ITM_Overclock_Details_Item_C_SetFontSize::NewSize' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetFontSize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'ITM_Overclock_Details_Item_C_SetFontSize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetFontSize, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000008, "Member 'ITM_Overclock_Details_Item_C_SetFontSize::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetFontSize, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000010, "Member 'ITM_Overclock_Details_Item_C_SetFontSize::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetFontSize, K2Node_MakeStruct_Margin) == 0x000018, "Member 'ITM_Overclock_Details_Item_C_SetFontSize::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetFontSize, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'ITM_Overclock_Details_Item_C_SetFontSize::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetFontSize, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'ITM_Overclock_Details_Item_C_SetFontSize::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_Item_C_SetFontSize, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'ITM_Overclock_Details_Item_C_SetFontSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

}

