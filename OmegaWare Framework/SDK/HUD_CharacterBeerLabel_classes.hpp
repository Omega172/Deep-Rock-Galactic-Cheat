#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_CharacterBeerLabel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_CharacterBeerLabel.HUD_CharacterBeerLabel_C
// 0x0018 (0x0278 - 0x0260)
class UHUD_CharacterBeerLabel_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BarBuff;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTemporaryBuff*                         buff;                                              // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HUD_CharacterBeerLabel(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_CharacterBeerLabel_C">();
	}
	static class UHUD_CharacterBeerLabel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_CharacterBeerLabel_C>();
	}
};
static_assert(alignof(UHUD_CharacterBeerLabel_C) == 0x000008, "Wrong alignment on UHUD_CharacterBeerLabel_C");
static_assert(sizeof(UHUD_CharacterBeerLabel_C) == 0x000278, "Wrong size on UHUD_CharacterBeerLabel_C");
static_assert(offsetof(UHUD_CharacterBeerLabel_C, UberGraphFrame) == 0x000260, "Member 'UHUD_CharacterBeerLabel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_CharacterBeerLabel_C, BarBuff) == 0x000268, "Member 'UHUD_CharacterBeerLabel_C::BarBuff' has a wrong offset!");
static_assert(offsetof(UHUD_CharacterBeerLabel_C, buff) == 0x000270, "Member 'UHUD_CharacterBeerLabel_C::buff' has a wrong offset!");

}

