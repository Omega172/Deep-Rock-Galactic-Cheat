#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScreenOverlay_HealthDamage

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"


namespace CG::Params
{

// Function ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C.ExecuteUbergraph_ScreenOverlay_HealthDamage
// 0x0158 (0x0158 - 0x0000)
struct ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359C[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359D[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Duration;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_CustomEvent_Color;                          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Health)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterState                               CallFunc_GetCurrentState_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359F[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A0[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Amount;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthPct_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0090(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterState                               K2Node_CustomEvent_newState;                       // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A1[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECharacterCameraMode NewCameraMode, ECharacterCameraMode OldCameraMode)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDown_ReturnValue;                       // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterCameraMode                          K2Node_CustomEvent_NewCameraMode;                  // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterCameraMode                          K2Node_CustomEvent_OldCameraMode;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDown_ReturnValue_1;                     // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A2[0x1];                                     // 0x00E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_FSDGameUserSettings_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShowBlood_ReturnValue;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A3[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECharacterState NewState)>     K2Node_CreateDelegate_OutputDelegate_3;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float Amount)>                 K2Node_CreateDelegate_OutputDelegate_4;            // 0x0114(0x0010)(ZeroConstructor, NoDestructor)
	ECharacterState                               CallFunc_GetCurrentState_ReturnValue_1;            // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsParalyzed_ReturnValue;                  // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A4[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A5[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_health;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue; // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthPct_ReturnValue_1;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage) == 0x000008, "Wrong alignment on ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage");
static_assert(sizeof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage) == 0x000158, "Wrong size on ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, EntryPoint) == 0x000000, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::EntryPoint' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, Temp_bool_Variable) == 0x000014, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, Temp_struct_Variable) == 0x000018, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, Temp_struct_Variable_1) == 0x000028, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, Temp_bool_Variable_1) == 0x000038, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, Temp_byte_Variable) == 0x000039, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, Temp_byte_Variable_1) == 0x00003A, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CustomEvent_Duration) == 0x00003C, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CustomEvent_Color) == 0x000040, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CustomEvent_Color' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CreateDelegate_OutputDelegate_1) == 0x000050, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000060, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000064, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000068, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_GetCurrentState_ReturnValue) == 0x00006C, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006D, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000070, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_DynamicCast_AsPlayer_Character) == 0x000078, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CustomEvent_Amount) == 0x000084, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_GetHealthPct_ReturnValue) == 0x000088, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_GetHealthPct_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_Lerp_ReturnValue) == 0x00008C, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_Event_MyGeometry) == 0x000090, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_Event_InDeltaTime) == 0x0000C8, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CustomEvent_newState) == 0x0000CC, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CustomEvent_newState' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D0, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_IsDown_ReturnValue) == 0x0000E1, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_IsDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_Not_PreBool_ReturnValue) == 0x0000E2, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CustomEvent_NewCameraMode) == 0x0000E3, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CustomEvent_NewCameraMode' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CustomEvent_OldCameraMode) == 0x0000E4, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CustomEvent_OldCameraMode' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_IsDown_ReturnValue_1) == 0x0000E5, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_IsDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CustomEvent_NewValue) == 0x0000E6, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_FSDGameUserSettings_ReturnValue) == 0x0000E8, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_FSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_Select_Default) == 0x0000F0, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_CanShowBlood_ReturnValue) == 0x000100, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_CanShowBlood_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CreateDelegate_OutputDelegate_3) == 0x000104, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CreateDelegate_OutputDelegate_4) == 0x000114, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_GetCurrentState_ReturnValue_1) == 0x000124, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_GetCurrentState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_IsParalyzed_ReturnValue) == 0x000125, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_IsParalyzed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000126, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_BooleanAND_ReturnValue) == 0x000127, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000128, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00012C, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_MakeStruct_LinearColor) == 0x000130, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_CustomEvent_health) == 0x000144, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_CustomEvent_health' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue) == 0x000148, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_GetHealthPct_ReturnValue_1) == 0x00014C, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_GetHealthPct_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_MapRangeClamped_ReturnValue) == 0x000150, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000154, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage, K2Node_Select_Default_1) == 0x000155, "Member 'ScreenOverlay_HealthDamage_C_ExecuteUbergraph_ScreenOverlay_HealthDamage::K2Node_Select_Default_1' has a wrong offset!");

// Function ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C.OnUpdateHealthImage
// 0x0004 (0x0004 - 0x0000)
struct ScreenOverlay_HealthDamage_C_OnUpdateHealthImage final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_HealthDamage_C_OnUpdateHealthImage) == 0x000004, "Wrong alignment on ScreenOverlay_HealthDamage_C_OnUpdateHealthImage");
static_assert(sizeof(ScreenOverlay_HealthDamage_C_OnUpdateHealthImage) == 0x000004, "Wrong size on ScreenOverlay_HealthDamage_C_OnUpdateHealthImage");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_OnUpdateHealthImage, Health) == 0x000000, "Member 'ScreenOverlay_HealthDamage_C_OnUpdateHealthImage::Health' has a wrong offset!");

// Function ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C.UpdateBloodColor
// 0x0001 (0x0001 - 0x0000)
struct ScreenOverlay_HealthDamage_C_UpdateBloodColor final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScreenOverlay_HealthDamage_C_UpdateBloodColor) == 0x000001, "Wrong alignment on ScreenOverlay_HealthDamage_C_UpdateBloodColor");
static_assert(sizeof(ScreenOverlay_HealthDamage_C_UpdateBloodColor) == 0x000001, "Wrong size on ScreenOverlay_HealthDamage_C_UpdateBloodColor");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_UpdateBloodColor, NewValue) == 0x000000, "Member 'ScreenOverlay_HealthDamage_C_UpdateBloodColor::NewValue' has a wrong offset!");

// Function ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C.OnCameraModeChanged
// 0x0002 (0x0002 - 0x0000)
struct ScreenOverlay_HealthDamage_C_OnCameraModeChanged final
{
public:
	ECharacterCameraMode                          NewCameraMode;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterCameraMode                          OldCameraMode;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_HealthDamage_C_OnCameraModeChanged) == 0x000001, "Wrong alignment on ScreenOverlay_HealthDamage_C_OnCameraModeChanged");
static_assert(sizeof(ScreenOverlay_HealthDamage_C_OnCameraModeChanged) == 0x000002, "Wrong size on ScreenOverlay_HealthDamage_C_OnCameraModeChanged");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_OnCameraModeChanged, NewCameraMode) == 0x000000, "Member 'ScreenOverlay_HealthDamage_C_OnCameraModeChanged::NewCameraMode' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_OnCameraModeChanged, OldCameraMode) == 0x000001, "Member 'ScreenOverlay_HealthDamage_C_OnCameraModeChanged::OldCameraMode' has a wrong offset!");

// Function ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C.OnCharacterStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ScreenOverlay_HealthDamage_C_OnCharacterStateChanged final
{
public:
	ECharacterState                               NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_HealthDamage_C_OnCharacterStateChanged) == 0x000001, "Wrong alignment on ScreenOverlay_HealthDamage_C_OnCharacterStateChanged");
static_assert(sizeof(ScreenOverlay_HealthDamage_C_OnCharacterStateChanged) == 0x000001, "Wrong size on ScreenOverlay_HealthDamage_C_OnCharacterStateChanged");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_OnCharacterStateChanged, NewState) == 0x000000, "Member 'ScreenOverlay_HealthDamage_C_OnCharacterStateChanged::NewState' has a wrong offset!");

// Function ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C.Tick
// 0x003C (0x003C - 0x0000)
struct ScreenOverlay_HealthDamage_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_HealthDamage_C_Tick) == 0x000004, "Wrong alignment on ScreenOverlay_HealthDamage_C_Tick");
static_assert(sizeof(ScreenOverlay_HealthDamage_C_Tick) == 0x00003C, "Wrong size on ScreenOverlay_HealthDamage_C_Tick");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_Tick, MyGeometry) == 0x000000, "Member 'ScreenOverlay_HealthDamage_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_Tick, InDeltaTime) == 0x000038, "Member 'ScreenOverlay_HealthDamage_C_Tick::InDeltaTime' has a wrong offset!");

// Function ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C.OnDamageTaken_Event
// 0x0004 (0x0004 - 0x0000)
struct ScreenOverlay_HealthDamage_C_OnDamageTaken_Event final
{
public:
	float                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_HealthDamage_C_OnDamageTaken_Event) == 0x000004, "Wrong alignment on ScreenOverlay_HealthDamage_C_OnDamageTaken_Event");
static_assert(sizeof(ScreenOverlay_HealthDamage_C_OnDamageTaken_Event) == 0x000004, "Wrong size on ScreenOverlay_HealthDamage_C_OnDamageTaken_Event");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_OnDamageTaken_Event, Amount) == 0x000000, "Member 'ScreenOverlay_HealthDamage_C_OnDamageTaken_Event::Amount' has a wrong offset!");

// Function ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C.Begin Splat
// 0x0014 (0x0014 - 0x0000)
struct ScreenOverlay_HealthDamage_C_Begin_Splat final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Param_Color;                                       // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_HealthDamage_C_Begin_Splat) == 0x000004, "Wrong alignment on ScreenOverlay_HealthDamage_C_Begin_Splat");
static_assert(sizeof(ScreenOverlay_HealthDamage_C_Begin_Splat) == 0x000014, "Wrong size on ScreenOverlay_HealthDamage_C_Begin_Splat");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_Begin_Splat, Duration) == 0x000000, "Member 'ScreenOverlay_HealthDamage_C_Begin_Splat::Duration' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_Begin_Splat, Param_Color) == 0x000004, "Member 'ScreenOverlay_HealthDamage_C_Begin_Splat::Param_Color' has a wrong offset!");

// Function ScreenOverlay_HealthDamage.ScreenOverlay_HealthDamage_C.CheckForLowHealth
// 0x0014 (0x0014 - 0x0000)
struct ScreenOverlay_HealthDamage_C_CheckForLowHealth final
{
public:
	float                                         StartAnimTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A6[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthPct_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ScreenOverlay_HealthDamage_C_CheckForLowHealth) == 0x000004, "Wrong alignment on ScreenOverlay_HealthDamage_C_CheckForLowHealth");
static_assert(sizeof(ScreenOverlay_HealthDamage_C_CheckForLowHealth) == 0x000014, "Wrong size on ScreenOverlay_HealthDamage_C_CheckForLowHealth");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_CheckForLowHealth, StartAnimTime) == 0x000000, "Member 'ScreenOverlay_HealthDamage_C_CheckForLowHealth::StartAnimTime' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_CheckForLowHealth, Temp_bool_Variable) == 0x000004, "Member 'ScreenOverlay_HealthDamage_C_CheckForLowHealth::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_CheckForLowHealth, Temp_byte_Variable) == 0x000005, "Member 'ScreenOverlay_HealthDamage_C_CheckForLowHealth::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_CheckForLowHealth, Temp_byte_Variable_1) == 0x000006, "Member 'ScreenOverlay_HealthDamage_C_CheckForLowHealth::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_CheckForLowHealth, CallFunc_GetHealthPct_ReturnValue) == 0x000008, "Member 'ScreenOverlay_HealthDamage_C_CheckForLowHealth::CallFunc_GetHealthPct_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_CheckForLowHealth, CallFunc_MapRangeClamped_ReturnValue) == 0x00000C, "Member 'ScreenOverlay_HealthDamage_C_CheckForLowHealth::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_CheckForLowHealth, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'ScreenOverlay_HealthDamage_C_CheckForLowHealth::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenOverlay_HealthDamage_C_CheckForLowHealth, K2Node_Select_Default) == 0x000011, "Member 'ScreenOverlay_HealthDamage_C_CheckForLowHealth::K2Node_Select_Default' has a wrong offset!");

}

