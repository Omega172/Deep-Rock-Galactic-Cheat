#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RichTextInput

#include "Basic.hpp"

#include "UI_RichTextInput_classes.hpp"
#include "UI_RichTextInput_parameters.hpp"


namespace CG
{

// Function UI_RichTextInput.UI_RichTextInput_C.ExecuteUbergraph_UI_RichTextInput
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_RichTextInput_C::ExecuteUbergraph_UI_RichTextInput(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RichTextInput_C", "ExecuteUbergraph_UI_RichTextInput");

	Params::UI_RichTextInput_C_ExecuteUbergraph_UI_RichTextInput Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_RichTextInput.UI_RichTextInput_C.ReceiveInputUnknown
// (Event, Protected, BlueprintEvent)

void UUI_RichTextInput_C::ReceiveInputUnknown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RichTextInput_C", "ReceiveInputUnknown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_RichTextInput.UI_RichTextInput_C.ReceiveInputDetails
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FInputDisplay                    InDisplay                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_RichTextInput_C::ReceiveInputDetails(const struct FInputDisplay& InDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RichTextInput_C", "ReceiveInputDetails");

	Params::UI_RichTextInput_C_ReceiveInputDetails Parms{};

	Parms.InDisplay = std::move(InDisplay);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_RichTextInput.UI_RichTextInput_C.ShowAsIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       InTexture                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     InTint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_RichTextInput_C::ShowAsIcon(class UTexture2D* InTexture, const struct FLinearColor& InTint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RichTextInput_C", "ShowAsIcon");

	Params::UI_RichTextInput_C_ShowAsIcon Parms{};

	Parms.InTexture = InTexture;
	Parms.InTint = std::move(InTint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_RichTextInput.UI_RichTextInput_C.SetSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InHeightOverride                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InWidthOverride                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InMinDesiredWidth                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_RichTextInput_C::SetSize(float InHeightOverride, float InWidthOverride, float InMinDesiredWidth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RichTextInput_C", "SetSize");

	Params::UI_RichTextInput_C_SetSize Parms{};

	Parms.InHeightOverride = InHeightOverride;
	Parms.InWidthOverride = InWidthOverride;
	Parms.InMinDesiredWidth = InMinDesiredWidth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_RichTextInput.UI_RichTextInput_C.ShowAsText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     InTint                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_RichTextInput_C::ShowAsText(const class FText& InText, const struct FLinearColor& InTint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RichTextInput_C", "ShowAsText");

	Params::UI_RichTextInput_C_ShowAsText Parms{};

	Parms.InText = std::move(InText);
	Parms.InTint = std::move(InTint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_RichTextInput.UI_RichTextInput_C.SetInteraction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputInteraction                       InInteraction                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_RichTextInput_C::SetInteraction(EInputInteraction InInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RichTextInput_C", "SetInteraction");

	Params::UI_RichTextInput_C_SetInteraction Parms{};

	Parms.InInteraction = InInteraction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_RichTextInput.UI_RichTextInput_C.ShowFromDisplayDetails
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputDisplay                    Details                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_RichTextInput_C::ShowFromDisplayDetails(const struct FInputDisplay& Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_RichTextInput_C", "ShowFromDisplayDetails");

	Params::UI_RichTextInput_C_ShowFromDisplayDetails Parms{};

	Parms.Details = std::move(Details);

	UObject::ProcessEvent(Func, &Parms);
}

}

