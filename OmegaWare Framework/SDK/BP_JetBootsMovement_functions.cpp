#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JetBootsMovement

#include "Basic.hpp"

#include "BP_JetBootsMovement_classes.hpp"
#include "BP_JetBootsMovement_parameters.hpp"


namespace CG
{

// Function BP_JetBootsMovement.BP_JetBootsMovement_C.ExecuteUbergraph_BP_JetBootsMovement
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JetBootsMovement_C::ExecuteUbergraph_BP_JetBootsMovement(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "ExecuteUbergraph_BP_JetBootsMovement");

	Params::BP_JetBootsMovement_C_ExecuteUbergraph_BP_JetBootsMovement Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.Receive_OnActiveChangedServer
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Param_IsActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FromTakeOff                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_JetBootsMovement_C::Receive_OnActiveChangedServer(bool Param_IsActive, bool FromTakeOff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "Receive_OnActiveChangedServer");

	Params::BP_JetBootsMovement_C_Receive_OnActiveChangedServer Parms{};

	Parms.Param_IsActive = Param_IsActive;
	Parms.FromTakeOff = FromTakeOff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.Receive_OnTakeOffLocal
// (Event, Public, BlueprintEvent)

void UBP_JetBootsMovement_C::Receive_OnTakeOffLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "Receive_OnTakeOffLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.Receive_OnActiveChangedNonLocal
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Param_IsActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FromTakeOff                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_JetBootsMovement_C::Receive_OnActiveChangedNonLocal(bool Param_IsActive, bool FromTakeOff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "Receive_OnActiveChangedNonLocal");

	Params::BP_JetBootsMovement_C_Receive_OnActiveChangedNonLocal Parms{};

	Parms.Param_IsActive = Param_IsActive;
	Parms.FromTakeOff = FromTakeOff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.Receive_OnOverheatedChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Param_OverHeated                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_JetBootsMovement_C::Receive_OnOverheatedChanged(bool Param_OverHeated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "Receive_OnOverheatedChanged");

	Params::BP_JetBootsMovement_C_Receive_OnOverheatedChanged Parms{};

	Parms.Param_OverHeated = Param_OverHeated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.Receive_OnDestroy
// (Event, Public, BlueprintEvent)

void UBP_JetBootsMovement_C::Receive_OnDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "Receive_OnDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.OnFuelUsed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   JetFuel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_OverHeated                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_JetBootsMovement_C::OnFuelUsed(float JetFuel, bool Param_OverHeated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "OnFuelUsed");

	Params::BP_JetBootsMovement_C_OnFuelUsed Parms{};

	Parms.JetFuel = JetFuel;
	Parms.Param_OverHeated = Param_OverHeated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.BindToFuelUsed
// (BlueprintCallable, BlueprintEvent)

void UBP_JetBootsMovement_C::BindToFuelUsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "BindToFuelUsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.Receive_OnActiveChangedLocal
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Param_IsActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    FromTakeOff                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_JetBootsMovement_C::Receive_OnActiveChangedLocal(bool Param_IsActive, bool FromTakeOff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "Receive_OnActiveChangedLocal");

	Params::BP_JetBootsMovement_C_Receive_OnActiveChangedLocal Parms{};

	Parms.Param_IsActive = Param_IsActive;
	Parms.FromTakeOff = FromTakeOff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.Receive_OnCharacterSet
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerCharacter*                 Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_JetBootsMovement_C::Receive_OnCharacterSet(class APlayerCharacter* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "Receive_OnCharacterSet");

	Params::BP_JetBootsMovement_C_Receive_OnCharacterSet Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_JetBootsMovement.BP_JetBootsMovement_C.FuelUpdated_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   JetFuel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_OverHeated                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_JetBootsMovement_C::FuelUpdated_Event_0(float JetFuel, bool Param_OverHeated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_JetBootsMovement_C", "FuelUpdated_Event_0");

	Params::BP_JetBootsMovement_C_FuelUpdated_Event_0 Parms{};

	Parms.JetFuel = JetFuel;
	Parms.Param_OverHeated = Param_OverHeated;

	UObject::ProcessEvent(Func, &Parms);
}

}

