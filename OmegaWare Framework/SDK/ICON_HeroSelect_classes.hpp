#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ICON_HeroSelect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"
#include "UMG_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ICON_HeroSelect.ICON_HeroSelect_C
// 0x0150 (0x03D0 - 0x0280)
class UICON_HeroSelect_C final : public UFSDUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_ButtonScalable2_C*               BTN_Retire;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_1;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_MaskedImage_C*                      CharacterIcon;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ClassName;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ClassName_InnerBorder;                             // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ClassName_OuterBorder;                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExtensionBG;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExtensionFiller;                                   // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ICON_BG;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Border;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_SeasonChallengeIcon_C*             Icon_Challenge;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Selection;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITEM_SpaceRig_ClassLevel_C*            ITEM_SpaceRig_ClassLevel;                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_RetirementBadge_C*                 ITM_RetirementBadge;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharSelect_HeroSelect_Dots_C*          PlayerDots;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        PromotionSwitcher;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         PromotionText;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_RoundedImage_C*                     UI_RoundedImage;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CharacterID;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCharacterSelected;                               // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowRetirement;                                    // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399A[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBasic_ToolTip_C*                       ToolTip;                                           // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRetirementHovered;                               // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRetirementUnhovered;                             // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRetireClicked;                                   // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AFSDPlayerState*                        PlayerState;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyShowCharacterNotInUse;                         // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldBeEnabled;                                   // 0x03A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_399B[0x6];                                     // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           MyState;                                           // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   States;                                            // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelectable;                                      // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          CanPromote;                                        // 0x03C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          Hovered;                                           // 0x03CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnCharacterSelected__DelegateSignature(class UPlayerCharacterID* Param_Character);
	void OnHovered__DelegateSignature(class UPlayerCharacterID* Param_Character);
	void OnRetirementHovered__DelegateSignature(class UPlayerCharacterID* Param_Character);
	void OnRetirementUnhovered__DelegateSignature(class UPlayerCharacterID* Param_Character);
	void OnRetireClicked__DelegateSignature(class UPlayerCharacterID* Param_Character);
	void OnUnhovered__DelegateSignature(class UPlayerCharacterID* Param_CharacterID);
	void ExecuteUbergraph_ICON_HeroSelect(int32 EntryPoint);
	void Testselectcharacter();
	void SetChallengeIcon(bool InHovered, class UTexture2D* Icon, const struct FLinearColor& Color);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Update_Retirement_Button();
	void BndEvt__BTN_Retire_K2Node_ComponentBoundEvent_63_OnClicked__DelegateSignature();
	void BndEvt__BTN_Retire_K2Node_ComponentBoundEvent_0_OnUnhovered__DelegateSignature();
	void BndEvt__BTN_Retire_K2Node_ComponentBoundEvent_25_OnHovered__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void Init(class UPlayerCharacterID* Param_Character);
	void OnCharacterStatsChanged_Event(class AFSDPlayerState* Param_PlayerState);
	void SelectedCharacterChanged(TSubclassOf<class APlayerCharacter> NewCharacter);
	void On_Click();
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetCharacterClass(class UPlayerCharacterID* Param_Class);
	void IsSelected(bool* Param_IsSelected);
	void UpdateSelected();
	void SetScale(float Scale);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void GetSelectedClass(class UPlayerCharacterID** DesiredCharacterClass);
	bool IsEligibleForPromotion();
	void InternalUpdateHovered();

	bool IsInteractable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ICON_HeroSelect_C">();
	}
	static class UICON_HeroSelect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UICON_HeroSelect_C>();
	}
};
static_assert(alignof(UICON_HeroSelect_C) == 0x000008, "Wrong alignment on UICON_HeroSelect_C");
static_assert(sizeof(UICON_HeroSelect_C) == 0x0003D0, "Wrong size on UICON_HeroSelect_C");
static_assert(offsetof(UICON_HeroSelect_C, UberGraphFrame) == 0x000280, "Member 'UICON_HeroSelect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, BTN_Retire) == 0x000288, "Member 'UICON_HeroSelect_C::BTN_Retire' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, CanvasPanel_1) == 0x000290, "Member 'UICON_HeroSelect_C::CanvasPanel_1' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, CharacterIcon) == 0x000298, "Member 'UICON_HeroSelect_C::CharacterIcon' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ClassName) == 0x0002A0, "Member 'UICON_HeroSelect_C::ClassName' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ClassName_InnerBorder) == 0x0002A8, "Member 'UICON_HeroSelect_C::ClassName_InnerBorder' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ClassName_OuterBorder) == 0x0002B0, "Member 'UICON_HeroSelect_C::ClassName_OuterBorder' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ExtensionBG) == 0x0002B8, "Member 'UICON_HeroSelect_C::ExtensionBG' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ExtensionFiller) == 0x0002C0, "Member 'UICON_HeroSelect_C::ExtensionFiller' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ICON_BG) == 0x0002C8, "Member 'UICON_HeroSelect_C::ICON_BG' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, Icon_Border) == 0x0002D0, "Member 'UICON_HeroSelect_C::Icon_Border' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, Icon_Challenge) == 0x0002D8, "Member 'UICON_HeroSelect_C::Icon_Challenge' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, Icon_Selection) == 0x0002E0, "Member 'UICON_HeroSelect_C::Icon_Selection' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ITEM_SpaceRig_ClassLevel) == 0x0002E8, "Member 'UICON_HeroSelect_C::ITEM_SpaceRig_ClassLevel' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ITM_RetirementBadge) == 0x0002F0, "Member 'UICON_HeroSelect_C::ITM_RetirementBadge' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, Overlay_0) == 0x0002F8, "Member 'UICON_HeroSelect_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, PlayerDots) == 0x000300, "Member 'UICON_HeroSelect_C::PlayerDots' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, PromotionSwitcher) == 0x000308, "Member 'UICON_HeroSelect_C::PromotionSwitcher' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, PromotionText) == 0x000310, "Member 'UICON_HeroSelect_C::PromotionText' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, UI_RoundedImage) == 0x000318, "Member 'UICON_HeroSelect_C::UI_RoundedImage' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, CharacterID) == 0x000320, "Member 'UICON_HeroSelect_C::CharacterID' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, OnCharacterSelected) == 0x000328, "Member 'UICON_HeroSelect_C::OnCharacterSelected' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, OnHovered) == 0x000338, "Member 'UICON_HeroSelect_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ShowRetirement) == 0x000348, "Member 'UICON_HeroSelect_C::ShowRetirement' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ToolTip) == 0x000350, "Member 'UICON_HeroSelect_C::ToolTip' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, OnUnhovered) == 0x000358, "Member 'UICON_HeroSelect_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, OnRetirementHovered) == 0x000368, "Member 'UICON_HeroSelect_C::OnRetirementHovered' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, OnRetirementUnhovered) == 0x000378, "Member 'UICON_HeroSelect_C::OnRetirementUnhovered' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, OnRetireClicked) == 0x000388, "Member 'UICON_HeroSelect_C::OnRetireClicked' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, PlayerState) == 0x000398, "Member 'UICON_HeroSelect_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, OnlyShowCharacterNotInUse) == 0x0003A0, "Member 'UICON_HeroSelect_C::OnlyShowCharacterNotInUse' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, ShouldBeEnabled) == 0x0003A1, "Member 'UICON_HeroSelect_C::ShouldBeEnabled' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, MyState) == 0x0003A8, "Member 'UICON_HeroSelect_C::MyState' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, States) == 0x0003B0, "Member 'UICON_HeroSelect_C::States' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, PlayerCharacter) == 0x0003C0, "Member 'UICON_HeroSelect_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, IsSelectable) == 0x0003C8, "Member 'UICON_HeroSelect_C::IsSelectable' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, CanPromote) == 0x0003C9, "Member 'UICON_HeroSelect_C::CanPromote' has a wrong offset!");
static_assert(offsetof(UICON_HeroSelect_C, Hovered) == 0x0003CA, "Member 'UICON_HeroSelect_C::Hovered' has a wrong offset!");

}

