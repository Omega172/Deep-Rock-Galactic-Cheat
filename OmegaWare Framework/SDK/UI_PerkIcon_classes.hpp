#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PerkIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass UI_PerkIcon.UI_PerkIcon_C
// 0x0028 (0x0288 - 0x0260)
class UUI_PerkIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               IconSizeBox;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PerkIcon;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PerkLevel;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         ImageDimension;                                    // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShowPerkLevel;                                     // 0x0284(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_UI_PerkIcon(int32 EntryPoint);
	void Set_Perk_Asset_Last_Claimed(class UPerkAsset* PerkAsset);
	void PreConstruct(bool IsDesignTime);
	void SetDimensions(float InDiminsions);
	void ShowAs(class UTexture2D* InIconTexture, const struct FLinearColor& InIconColor, int32 InRank);
	void ShowPerkByRank(class UPerkAsset* InPerk, int32 InRank);
	void ShowPerkAs(class UPerkAsset* InPerk, const struct FLinearColor& InIconColor, int32 InRank);
	void SetPerkLevelVisibility(bool InVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_PerkIcon_C">();
	}
	static class UUI_PerkIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_PerkIcon_C>();
	}
};
static_assert(alignof(UUI_PerkIcon_C) == 0x000008, "Wrong alignment on UUI_PerkIcon_C");
static_assert(sizeof(UUI_PerkIcon_C) == 0x000288, "Wrong size on UUI_PerkIcon_C");
static_assert(offsetof(UUI_PerkIcon_C, UberGraphFrame) == 0x000260, "Member 'UUI_PerkIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_PerkIcon_C, IconSizeBox) == 0x000268, "Member 'UUI_PerkIcon_C::IconSizeBox' has a wrong offset!");
static_assert(offsetof(UUI_PerkIcon_C, PerkIcon) == 0x000270, "Member 'UUI_PerkIcon_C::PerkIcon' has a wrong offset!");
static_assert(offsetof(UUI_PerkIcon_C, PerkLevel) == 0x000278, "Member 'UUI_PerkIcon_C::PerkLevel' has a wrong offset!");
static_assert(offsetof(UUI_PerkIcon_C, ImageDimension) == 0x000280, "Member 'UUI_PerkIcon_C::ImageDimension' has a wrong offset!");
static_assert(offsetof(UUI_PerkIcon_C, ShowPerkLevel) == 0x000284, "Member 'UUI_PerkIcon_C::ShowPerkLevel' has a wrong offset!");

}

