#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScreenOverlay_GenericAffliction

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"
#include "UMG_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ScreenOverlay_GenericAffliction.ScreenOverlay_GenericAffliction_C
// 0x0020 (0x0290 - 0x0270)
class UScreenOverlay_GenericAffliction_C final : public UPlayerAfflictionOverlayWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimFading;                                        // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 AfflictionImage;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         FadeDuration;                                      // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ScreenOverlay_GenericAffliction(int32 EntryPoint);
	void OnAnimFadingFinished();
	void Play_Fade(EUMGSequencePlayMode PlayMode);
	void ReceiveEndOverlay();
	void ReceiveBeginOverlay(class UTexture2D* InTexture, const struct FLinearColor& InTint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ScreenOverlay_GenericAffliction_C">();
	}
	static class UScreenOverlay_GenericAffliction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScreenOverlay_GenericAffliction_C>();
	}
};
static_assert(alignof(UScreenOverlay_GenericAffliction_C) == 0x000008, "Wrong alignment on UScreenOverlay_GenericAffliction_C");
static_assert(sizeof(UScreenOverlay_GenericAffliction_C) == 0x000290, "Wrong size on UScreenOverlay_GenericAffliction_C");
static_assert(offsetof(UScreenOverlay_GenericAffliction_C, UberGraphFrame) == 0x000270, "Member 'UScreenOverlay_GenericAffliction_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_GenericAffliction_C, AnimFading) == 0x000278, "Member 'UScreenOverlay_GenericAffliction_C::AnimFading' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_GenericAffliction_C, AfflictionImage) == 0x000280, "Member 'UScreenOverlay_GenericAffliction_C::AfflictionImage' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_GenericAffliction_C, FadeDuration) == 0x000288, "Member 'UScreenOverlay_GenericAffliction_C::FadeDuration' has a wrong offset!");

}

