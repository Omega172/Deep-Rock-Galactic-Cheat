#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Donkey

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// BlueprintGeneratedClass BP_Donkey.BP_Donkey_C
// 0x0198 (0x0578 - 0x03E0)
class ABP_Donkey_C final : public AMolly
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   TerrainScannerMesh;                                // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Oxygen_Leak;                                       // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Screen_007;                                     // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FrontPlane1;                                       // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Screen_005;                                     // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FrontPlane;                                        // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GasCanister_air_Mule1;                           // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GasCanister_air_Mule;                            // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_GasCanister1;                                   // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_GasCanister;                                    // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOxygenSourceComponent*                 OxygenSource;                                      // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      PlayerRideCapsule;                                 // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioDepositing;                                   // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Donkey_Button;                                  // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EscapeButton;                                      // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          UseBox_ResourceBank;                               // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       UseSphere_Return;                                  // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USingleUsableComponent*                 ReturnToMissionUsable;                             // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box1;                                              // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorTrackingComponent*                ActorTracking;                                     // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightCone;                                         // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FloodLight;                                        // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URadarPointComponent*                   RadarPoint;                                        // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTrayOpen;                                        // 0x04C8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2EF8[0x3];                                     // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DestinationKeyName;                                // 0x04CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EF9[0x4];                                     // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DonkeyDestinationMarker_C*          DonkeyMarker;                                      // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ControlledKeyName;                                 // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DropShipPosKey;                                    // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   GotoDropshipKey;                                   // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BeingDepositedToName;                              // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HeadingForDropShip;                                // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EFA[0x3];                                     // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverlapsPlayer;                                    // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             PlayerOverlapsChanged;                             // 0x0508(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FTimerHandle                           BreadCrumbTimer;                                   // 0x0518(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerStartRideTime;                               // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EFB[0x4];                                     // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDAchievement*                        MollyRiderAchievement;                             // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADonkey_BreadCrumb_C*                   LastCrumb;                                         // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimeoutHandle;                                     // 0x0538(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BreadCrumpClass;                                   // 0x0540(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   Users;                                             // 0x0548(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         ShowButtonDelay;                                   // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EFC[0x4];                                     // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           TraySocketNames;                                   // 0x0560(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNiagaraSystem*                         CurrentTrayEffect;                                 // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PlayerOverlapsChanged__DelegateSignature(int32 OverlapCount);
	void ExecuteUbergraph_BP_Donkey(int32 EntryPoint);
	void AddTrayEffect(class UNiagaraSystem* Effect, int32 NumberOfTraysAffected);
	void BndEvt__PathfinderMovement_K2Node_ComponentBoundEvent_8_PathFinished__DelegateSignature(bool Success);
	void SetGotoDropShip(const struct FVector& Location);
	void OnPlayerLeft(class AFSDPlayerState* Param_PlayerState);
	void SetControlledByDropShip(bool Control);
	void OnRep_IsDown();
	void EnableButton();
	void BndEvt__OxygenSource_K2Node_ComponentBoundEvent_9_OxygenActiveDelegate__DelegateSignature(bool IsActive);
	void Update_Button_State();
	void BndEvt__Capsule_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Capsule_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__ResourceBank_K2Node_ComponentBoundEvent_1_ResourceBankEvent__DelegateSignature(class APlayerCharacter* User);
	void BndEvt__ResourceBank_K2Node_ComponentBoundEvent_0_ResourceBankEvent__DelegateSignature(class APlayerCharacter* User);
	void SpawnBreadCrumb();
	void BndEvt__ReturnToMissionUsable_K2Node_ComponentBoundEvent_0_UsableChangedSignature__DelegateSignature(bool CanUse);
	void BndEvt__ReturnToMissionUsable_K2Node_ComponentBoundEvent_1_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
	void BndEvt__Box1_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Box1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void On_Goto_Dropship();
	void SetDonkeyPos(const struct FVector& Pos);
	void OnDonkeyCalled(const struct FVector& Position, class APlayerCharacter* Requester);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetDestination(const struct FVector& Destination, class APlayerCharacter* InCalledBy);
	void Set_Controlled_by_Drop_Ship(bool Control);
	void GotoDropship(const struct FVector& Pos);
	void OnRep_IsTrayOpen();
	void HandlePhotosensitivity();
	void UpdateStopCallRequests();

	class UDialogDataAsset* GetCallingShout() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Donkey_C">();
	}
	static class ABP_Donkey_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Donkey_C>();
	}
};
static_assert(alignof(ABP_Donkey_C) == 0x000008, "Wrong alignment on ABP_Donkey_C");
static_assert(sizeof(ABP_Donkey_C) == 0x000578, "Wrong size on ABP_Donkey_C");
static_assert(offsetof(ABP_Donkey_C, UberGraphFrame) == 0x0003E0, "Member 'ABP_Donkey_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, TerrainScannerMesh) == 0x0003E8, "Member 'ABP_Donkey_C::TerrainScannerMesh' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, Sphere) == 0x0003F0, "Member 'ABP_Donkey_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, Oxygen_Leak) == 0x0003F8, "Member 'ABP_Donkey_C::Oxygen_Leak' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, SM_Screen_007) == 0x000400, "Member 'ABP_Donkey_C::SM_Screen_007' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, FrontPlane1) == 0x000408, "Member 'ABP_Donkey_C::FrontPlane1' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, SM_Screen_005) == 0x000410, "Member 'ABP_Donkey_C::SM_Screen_005' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, FrontPlane) == 0x000418, "Member 'ABP_Donkey_C::FrontPlane' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, P_GasCanister_air_Mule1) == 0x000420, "Member 'ABP_Donkey_C::P_GasCanister_air_Mule1' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, P_GasCanister_air_Mule) == 0x000428, "Member 'ABP_Donkey_C::P_GasCanister_air_Mule' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, SM_GasCanister1) == 0x000430, "Member 'ABP_Donkey_C::SM_GasCanister1' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, SM_GasCanister) == 0x000438, "Member 'ABP_Donkey_C::SM_GasCanister' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, OxygenSource) == 0x000440, "Member 'ABP_Donkey_C::OxygenSource' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, PlayerRideCapsule) == 0x000448, "Member 'ABP_Donkey_C::PlayerRideCapsule' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, AudioDepositing) == 0x000450, "Member 'ABP_Donkey_C::AudioDepositing' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, PointLight) == 0x000458, "Member 'ABP_Donkey_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, SM_Donkey_Button) == 0x000460, "Member 'ABP_Donkey_C::SM_Donkey_Button' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, EscapeButton) == 0x000468, "Member 'ABP_Donkey_C::EscapeButton' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, Widget) == 0x000470, "Member 'ABP_Donkey_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, UseBox_ResourceBank) == 0x000478, "Member 'ABP_Donkey_C::UseBox_ResourceBank' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, UseSphere_Return) == 0x000480, "Member 'ABP_Donkey_C::UseSphere_Return' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, ReturnToMissionUsable) == 0x000488, "Member 'ABP_Donkey_C::ReturnToMissionUsable' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, Box1) == 0x000490, "Member 'ABP_Donkey_C::Box1' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, ActorTracking) == 0x000498, "Member 'ABP_Donkey_C::ActorTracking' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, LightCone) == 0x0004A0, "Member 'ABP_Donkey_C::LightCone' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, SpotLight) == 0x0004A8, "Member 'ABP_Donkey_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, FloodLight) == 0x0004B0, "Member 'ABP_Donkey_C::FloodLight' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, Box) == 0x0004B8, "Member 'ABP_Donkey_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, RadarPoint) == 0x0004C0, "Member 'ABP_Donkey_C::RadarPoint' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, IsTrayOpen) == 0x0004C8, "Member 'ABP_Donkey_C::IsTrayOpen' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, DestinationKeyName) == 0x0004CC, "Member 'ABP_Donkey_C::DestinationKeyName' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, DonkeyMarker) == 0x0004D8, "Member 'ABP_Donkey_C::DonkeyMarker' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, ControlledKeyName) == 0x0004E0, "Member 'ABP_Donkey_C::ControlledKeyName' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, DropShipPosKey) == 0x0004E8, "Member 'ABP_Donkey_C::DropShipPosKey' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, GotoDropshipKey) == 0x0004F0, "Member 'ABP_Donkey_C::GotoDropshipKey' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, BeingDepositedToName) == 0x0004F8, "Member 'ABP_Donkey_C::BeingDepositedToName' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, HeadingForDropShip) == 0x000500, "Member 'ABP_Donkey_C::HeadingForDropShip' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, OverlapsPlayer) == 0x000504, "Member 'ABP_Donkey_C::OverlapsPlayer' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, PlayerOverlapsChanged) == 0x000508, "Member 'ABP_Donkey_C::PlayerOverlapsChanged' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, BreadCrumbTimer) == 0x000518, "Member 'ABP_Donkey_C::BreadCrumbTimer' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, PlayerStartRideTime) == 0x000520, "Member 'ABP_Donkey_C::PlayerStartRideTime' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, MollyRiderAchievement) == 0x000528, "Member 'ABP_Donkey_C::MollyRiderAchievement' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, LastCrumb) == 0x000530, "Member 'ABP_Donkey_C::LastCrumb' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, TimeoutHandle) == 0x000538, "Member 'ABP_Donkey_C::TimeoutHandle' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, BreadCrumpClass) == 0x000540, "Member 'ABP_Donkey_C::BreadCrumpClass' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, Users) == 0x000548, "Member 'ABP_Donkey_C::Users' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, ShowButtonDelay) == 0x000558, "Member 'ABP_Donkey_C::ShowButtonDelay' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, TraySocketNames) == 0x000560, "Member 'ABP_Donkey_C::TraySocketNames' has a wrong offset!");
static_assert(offsetof(ABP_Donkey_C, CurrentTrayEffect) == 0x000570, "Member 'ABP_Donkey_C::CurrentTrayEffect' has a wrong offset!");

}

