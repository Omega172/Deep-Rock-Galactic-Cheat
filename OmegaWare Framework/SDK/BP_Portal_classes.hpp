#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Portal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace CG
{

// BlueprintGeneratedClass BP_Portal.BP_Portal_C
// 0x0028 (0x0248 - 0x0220)
class ABP_Portal_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Prim_GeoSphere_20segments;                      // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               NewVar_0;                                          // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                SceneReference;                                    // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Portal(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Portal_C">();
	}
	static class ABP_Portal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Portal_C>();
	}
};
static_assert(alignof(ABP_Portal_C) == 0x000008, "Wrong alignment on ABP_Portal_C");
static_assert(sizeof(ABP_Portal_C) == 0x000248, "Wrong size on ABP_Portal_C");
static_assert(offsetof(ABP_Portal_C, UberGraphFrame) == 0x000220, "Member 'ABP_Portal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Portal_C, SM_Prim_GeoSphere_20segments) == 0x000228, "Member 'ABP_Portal_C::SM_Prim_GeoSphere_20segments' has a wrong offset!");
static_assert(offsetof(ABP_Portal_C, DefaultSceneRoot) == 0x000230, "Member 'ABP_Portal_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Portal_C, NewVar_0) == 0x000238, "Member 'ABP_Portal_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_Portal_C, SceneReference) == 0x000240, "Member 'ABP_Portal_C::SceneReference' has a wrong offset!");

}

