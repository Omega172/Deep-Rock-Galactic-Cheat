#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_HostIcon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function ITM_HostIcon.ITM_HostIcon_C.ExecuteUbergraph_ITM_HostIcon
// 0x0018 (0x0018 - 0x0000)
struct ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor;         // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon) == 0x000004, "Wrong alignment on ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon");
static_assert(sizeof(ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon) == 0x000018, "Wrong size on ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon");
static_assert(offsetof(ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon, EntryPoint) == 0x000000, "Member 'ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon, CallFunc_MenuColorsAndOpacity_OutputColor) == 0x000004, "Member 'ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon::CallFunc_MenuColorsAndOpacity_OutputColor' has a wrong offset!");
static_assert(offsetof(ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon, K2Node_Event_IsDesignTime) == 0x000014, "Member 'ITM_HostIcon_C_ExecuteUbergraph_ITM_HostIcon::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ITM_HostIcon.ITM_HostIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_HostIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_HostIcon_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_HostIcon_C_PreConstruct");
static_assert(sizeof(ITM_HostIcon_C_PreConstruct) == 0x000001, "Wrong size on ITM_HostIcon_C_PreConstruct");
static_assert(offsetof(ITM_HostIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_HostIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_HostIcon.ITM_HostIcon_C.SetSize
// 0x0004 (0x0004 - 0x0000)
struct ITM_HostIcon_C_SetSize final
{
public:
	float                                         Param_Size;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_HostIcon_C_SetSize) == 0x000004, "Wrong alignment on ITM_HostIcon_C_SetSize");
static_assert(sizeof(ITM_HostIcon_C_SetSize) == 0x000004, "Wrong size on ITM_HostIcon_C_SetSize");
static_assert(offsetof(ITM_HostIcon_C_SetSize, Param_Size) == 0x000000, "Member 'ITM_HostIcon_C_SetSize::Param_Size' has a wrong offset!");

}

