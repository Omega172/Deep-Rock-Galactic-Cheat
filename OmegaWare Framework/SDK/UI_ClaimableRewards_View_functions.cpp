#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ClaimableRewards_View

#include "Basic.hpp"

#include "UI_ClaimableRewards_View_classes.hpp"
#include "UI_ClaimableRewards_View_parameters.hpp"


namespace CG
{

// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.OnMissionControlStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  MissionControlAudio                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClaimableRewards_View_C::OnMissionControlStarted__DelegateSignature(class UAudioComponent* MissionControlAudio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "OnMissionControlStarted__DelegateSignature");

	Params::UI_ClaimableRewards_View_C_OnMissionControlStarted__DelegateSignature Parms{};

	Parms.MissionControlAudio = MissionControlAudio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.OnMissionControlFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::OnMissionControlFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "OnMissionControlFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.OnRewardsClaimed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::OnRewardsClaimed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "OnRewardsClaimed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.OnRewardsAndMissionControlFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::OnRewardsAndMissionControlFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "OnRewardsAndMissionControlFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.ExecuteUbergraph_UI_ClaimableRewards_View
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClaimableRewards_View_C::ExecuteUbergraph_UI_ClaimableRewards_View(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "ExecuteUbergraph_UI_ClaimableRewards_View");

	Params::UI_ClaimableRewards_View_C_ExecuteUbergraph_UI_ClaimableRewards_View Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.ReceiveBeginFlow
// (Event, Protected, BlueprintEvent)

void UUI_ClaimableRewards_View_C::ReceiveBeginFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "ReceiveBeginFlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.ReceiveDataChanged
// (Event, Protected, BlueprintEvent)

void UUI_ClaimableRewards_View_C::ReceiveDataChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "ReceiveDataChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.ReceiveEndFlow
// (Event, Protected, BlueprintEvent)

void UUI_ClaimableRewards_View_C::ReceiveEndFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "ReceiveEndFlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.OnRewardClaimed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClaimableRewardEntryWidget*      InEntryWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClaimableRewards_View_C::OnRewardClaimed(class UClaimableRewardEntryWidget* InEntryWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "OnRewardClaimed");

	Params::UI_ClaimableRewards_View_C_OnRewardClaimed Parms{};

	Parms.InEntryWidget = InEntryWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.Move In Rewards
// (BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::Move_In_Rewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "Move In Rewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.ShowMouseCursor
// (BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::ShowMouseCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "ShowMouseCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.ShowBlur
// (BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::ShowBlur()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "ShowBlur");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.Start Mission Control Speak
// (BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::Start_Mission_Control_Speak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "Start Mission Control Speak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.OnAudioFinished_Event
// (BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::OnAudioFinished_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "OnAudioFinished_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.StopAudio
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::StopAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "StopAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.TryFinish
// (Private, BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_View_C::TryFinish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "TryFinish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.SetupView
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FClaimableRewardView             InViewData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UUI_ClaimableRewards_View_C::SetupView(const struct FClaimableRewardView& InViewData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "SetupView");

	Params::UI_ClaimableRewards_View_C_SetupView Parms{};

	Parms.InViewData = std::move(InViewData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.GetLine
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UHorizontalBox*                   Param_EntryBox                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClaimableRewards_View_C::GetLine(class UHorizontalBox** Param_EntryBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "GetLine");

	Params::UI_ClaimableRewards_View_C_GetLine Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_EntryBox != nullptr)
		*Param_EntryBox = Parms.Param_EntryBox;
}


// Function UI_ClaimableRewards_View.UI_ClaimableRewards_View_C.GetEntryWidgetClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftClassPtr<class UClass>             InOverridetClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
// class UClass*                           OutWidgetClass                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClaimableRewards_View_C::GetEntryWidgetClass(TSoftClassPtr<class UClass> InOverridetClass, class UClass** OutWidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_View_C", "GetEntryWidgetClass");

	Params::UI_ClaimableRewards_View_C_GetEntryWidgetClass Parms{};

	Parms.InOverridetClass = InOverridetClass;

	UObject::ProcessEvent(Func, &Parms);

	if (OutWidgetClass != nullptr)
		*OutWidgetClass = Parms.OutWidgetClass;
}

}

