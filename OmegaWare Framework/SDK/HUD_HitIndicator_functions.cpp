#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_HitIndicator

#include "Basic.hpp"

#include "HUD_HitIndicator_classes.hpp"
#include "HUD_HitIndicator_parameters.hpp"


namespace CG
{

// Function HUD_HitIndicator.HUD_HitIndicator_C.ExecuteUbergraph_HUD_HitIndicator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_HitIndicator_C::ExecuteUbergraph_HUD_HitIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HitIndicator_C", "ExecuteUbergraph_HUD_HitIndicator");

	Params::HUD_HitIndicator_C_ExecuteUbergraph_HUD_HitIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_HitIndicator.HUD_HitIndicator_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_HitIndicator_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HitIndicator_C", "PreConstruct");

	Params::HUD_HitIndicator_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_HitIndicator.HUD_HitIndicator_C.OnHitAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UHUD_HitIndicator_C::OnHitAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HitIndicator_C", "OnHitAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_HitIndicator.HUD_HitIndicator_C.OnHitAnimStarted
// (BlueprintCallable, BlueprintEvent)

void UHUD_HitIndicator_C::OnHitAnimStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HitIndicator_C", "OnHitAnimStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_HitIndicator.HUD_HitIndicator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UHUD_HitIndicator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HitIndicator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD_HitIndicator.HUD_HitIndicator_C.OnDamagedEnemy_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IHealth>         EnemyHealth                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DamageModifier                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HealthRemaining                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsWeakPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsRadial                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_HitIndicator_C::OnDamagedEnemy_Event(const TScriptInterface<class IHealth>& EnemyHealth, float Damage, float DamageModifier, float HealthRemaining, bool IsWeakPoint, bool IsRadial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HitIndicator_C", "OnDamagedEnemy_Event");

	Params::HUD_HitIndicator_C_OnDamagedEnemy_Event Parms{};

	Parms.EnemyHealth = EnemyHealth;
	Parms.Damage = Damage;
	Parms.DamageModifier = DamageModifier;
	Parms.HealthRemaining = HealthRemaining;
	Parms.IsWeakPoint = IsWeakPoint;
	Parms.IsRadial = IsRadial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD_HitIndicator.HUD_HitIndicator_C.StartAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Priority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowKillImage                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_HitIndicator_C::StartAnimation(int32 Param_Priority, float Scale, const struct FLinearColor& Color, bool ShowKillImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_HitIndicator_C", "StartAnimation");

	Params::HUD_HitIndicator_C_StartAnimation Parms{};

	Parms.Param_Priority = Param_Priority;
	Parms.Scale = Scale;
	Parms.Color = std::move(Color);
	Parms.ShowKillImage = ShowKillImage;

	UObject::ProcessEvent(Func, &Parms);
}

}

