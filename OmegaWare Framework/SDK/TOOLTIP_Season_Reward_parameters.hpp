#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TOOLTIP_Season_Reward

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace CG::Params
{

// Function TOOLTIP_Season_Reward.TOOLTIP_Season_Reward_C.ExecuteUbergraph_TOOLTIP_Season_Reward
// 0x0170 (0x0170 - 0x0000)
struct TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UReward*                                K2Node_CustomEvent_Reward;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowCost_1;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Cost_1;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowCost;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391F[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Cost;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3920[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Count;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0040(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemSkin*                              K2Node_CustomEvent_InSkin;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemID*                                K2Node_CustomEvent_InOptionalItem;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     K2Node_CustomEvent_InOptionalCharacter;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetSkinText_Title;                        // 0x0078(0x0018)()
	class FText                                   CallFunc_GetSkinText_Category;                     // 0x0090(0x0018)()
	class FText                                   CallFunc_GetSkinText_Description;                  // 0x00A8(0x0018)()
	bool                                          CallFunc_GetSkinText_HasOptionalCharacterID;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3921[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_GetSkinText_CharacterID;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_CustomEvent_DynMat;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UReward*                                K2Node_CustomEvent_Reward_1;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowCost_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3922[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Cost_2;                         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3923[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetRewardText_Title;                      // 0x00F8(0x0018)()
	class FText                                   CallFunc_GetRewardText_Category;                   // 0x0110(0x0018)()
	class FText                                   CallFunc_GetRewardText_Description;                // 0x0128(0x0018)()
	bool                                          CallFunc_GetRewardText_HasOptionalCharacterID;     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3924[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_GetRewardText_CharacterID;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_InBottomText;                   // 0x0150(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward) == 0x000008, "Wrong alignment on TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward");
static_assert(sizeof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward) == 0x000170, "Wrong size on TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, EntryPoint) == 0x000000, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::EntryPoint' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_Reward) == 0x000008, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_Reward' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_ShowCost_1) == 0x000010, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_ShowCost_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_Cost_1) == 0x000014, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_Cost_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_ShowCost) == 0x000018, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_ShowCost' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_Cost) == 0x00001C, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_Cost' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_SelectVisibility_IsVisible) == 0x000038, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_SelectVisibility_VisibilityChanged) == 0x000039, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_SelectVisibility_New_Visibility) == 0x00003A, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_Count) == 0x00003C, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000040, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_PlayAnimation_ReturnValue) == 0x000058, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_InSkin) == 0x000060, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_InSkin' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_InOptionalItem) == 0x000068, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_InOptionalItem' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_InOptionalCharacter) == 0x000070, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_InOptionalCharacter' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetSkinText_Title) == 0x000078, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetSkinText_Title' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetSkinText_Category) == 0x000090, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetSkinText_Category' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetSkinText_Description) == 0x0000A8, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetSkinText_Description' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetSkinText_HasOptionalCharacterID) == 0x0000C0, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetSkinText_HasOptionalCharacterID' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetSkinText_CharacterID) == 0x0000C8, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetSkinText_CharacterID' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000D0, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_DynMat) == 0x0000D8, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_DynMat' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_Reward_1) == 0x0000E0, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_Reward_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_ShowCost_2) == 0x0000E8, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_ShowCost_2' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_Cost_2) == 0x0000EC, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_Cost_2' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetRewardText_Title) == 0x0000F8, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetRewardText_Title' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetRewardText_Category) == 0x000110, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetRewardText_Category' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetRewardText_Description) == 0x000128, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetRewardText_Description' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetRewardText_HasOptionalCharacterID) == 0x000140, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetRewardText_HasOptionalCharacterID' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_GetRewardText_CharacterID) == 0x000148, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_GetRewardText_CharacterID' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, K2Node_CustomEvent_InBottomText) == 0x000150, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::K2Node_CustomEvent_InBottomText' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_TextIsEmpty_ReturnValue) == 0x000168, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_SelectVisibility_IsVisible_1) == 0x000169, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x00016A, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward, CallFunc_SelectVisibility_New_Visibility_1) == 0x00016B, "Member 'TOOLTIP_Season_Reward_C_ExecuteUbergraph_TOOLTIP_Season_Reward::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");

// Function TOOLTIP_Season_Reward.TOOLTIP_Season_Reward_C.SetBottomText
// 0x0018 (0x0018 - 0x0000)
struct TOOLTIP_Season_Reward_C_SetBottomText final
{
public:
	class FText                                   InBottomText;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(TOOLTIP_Season_Reward_C_SetBottomText) == 0x000008, "Wrong alignment on TOOLTIP_Season_Reward_C_SetBottomText");
static_assert(sizeof(TOOLTIP_Season_Reward_C_SetBottomText) == 0x000018, "Wrong size on TOOLTIP_Season_Reward_C_SetBottomText");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetBottomText, InBottomText) == 0x000000, "Member 'TOOLTIP_Season_Reward_C_SetBottomText::InBottomText' has a wrong offset!");

// Function TOOLTIP_Season_Reward.TOOLTIP_Season_Reward_C.SetDataFromSkin
// 0x0018 (0x0018 - 0x0000)
struct TOOLTIP_Season_Reward_C_SetDataFromSkin final
{
public:
	class UItemSkin*                              InSkin;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemID*                                InOptionalItem;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     InOptionalCharacter;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TOOLTIP_Season_Reward_C_SetDataFromSkin) == 0x000008, "Wrong alignment on TOOLTIP_Season_Reward_C_SetDataFromSkin");
static_assert(sizeof(TOOLTIP_Season_Reward_C_SetDataFromSkin) == 0x000018, "Wrong size on TOOLTIP_Season_Reward_C_SetDataFromSkin");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetDataFromSkin, InSkin) == 0x000000, "Member 'TOOLTIP_Season_Reward_C_SetDataFromSkin::InSkin' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetDataFromSkin, InOptionalItem) == 0x000008, "Member 'TOOLTIP_Season_Reward_C_SetDataFromSkin::InOptionalItem' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetDataFromSkin, InOptionalCharacter) == 0x000010, "Member 'TOOLTIP_Season_Reward_C_SetDataFromSkin::InOptionalCharacter' has a wrong offset!");

// Function TOOLTIP_Season_Reward.TOOLTIP_Season_Reward_C.Setup
// 0x0008 (0x0008 - 0x0000)
struct TOOLTIP_Season_Reward_C_Setup final
{
public:
	bool                                          ShowCost;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3925[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cost;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TOOLTIP_Season_Reward_C_Setup) == 0x000004, "Wrong alignment on TOOLTIP_Season_Reward_C_Setup");
static_assert(sizeof(TOOLTIP_Season_Reward_C_Setup) == 0x000008, "Wrong size on TOOLTIP_Season_Reward_C_Setup");
static_assert(offsetof(TOOLTIP_Season_Reward_C_Setup, ShowCost) == 0x000000, "Member 'TOOLTIP_Season_Reward_C_Setup::ShowCost' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_Setup, Cost) == 0x000004, "Member 'TOOLTIP_Season_Reward_C_Setup::Cost' has a wrong offset!");

// Function TOOLTIP_Season_Reward.TOOLTIP_Season_Reward_C.SetDataFromReward
// 0x0010 (0x0010 - 0x0000)
struct TOOLTIP_Season_Reward_C_SetDataFromReward final
{
public:
	class UReward*                                Param_Reward;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCost;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3926[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cost;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TOOLTIP_Season_Reward_C_SetDataFromReward) == 0x000008, "Wrong alignment on TOOLTIP_Season_Reward_C_SetDataFromReward");
static_assert(sizeof(TOOLTIP_Season_Reward_C_SetDataFromReward) == 0x000010, "Wrong size on TOOLTIP_Season_Reward_C_SetDataFromReward");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetDataFromReward, Param_Reward) == 0x000000, "Member 'TOOLTIP_Season_Reward_C_SetDataFromReward::Param_Reward' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetDataFromReward, ShowCost) == 0x000008, "Member 'TOOLTIP_Season_Reward_C_SetDataFromReward::ShowCost' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetDataFromReward, Cost) == 0x00000C, "Member 'TOOLTIP_Season_Reward_C_SetDataFromReward::Cost' has a wrong offset!");

// Function TOOLTIP_Season_Reward.TOOLTIP_Season_Reward_C.SetCount
// 0x0004 (0x0004 - 0x0000)
struct TOOLTIP_Season_Reward_C_SetCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TOOLTIP_Season_Reward_C_SetCount) == 0x000004, "Wrong alignment on TOOLTIP_Season_Reward_C_SetCount");
static_assert(sizeof(TOOLTIP_Season_Reward_C_SetCount) == 0x000004, "Wrong size on TOOLTIP_Season_Reward_C_SetCount");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetCount, Count) == 0x000000, "Member 'TOOLTIP_Season_Reward_C_SetCount::Count' has a wrong offset!");

// Function TOOLTIP_Season_Reward.TOOLTIP_Season_Reward_C.SetData
// 0x0018 (0x0018 - 0x0000)
struct TOOLTIP_Season_Reward_C_SetData final
{
public:
	class UMaterialInstanceDynamic*               DynMat;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UReward*                                Param_Reward;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowCost;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3927[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Cost;                                              // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TOOLTIP_Season_Reward_C_SetData) == 0x000008, "Wrong alignment on TOOLTIP_Season_Reward_C_SetData");
static_assert(sizeof(TOOLTIP_Season_Reward_C_SetData) == 0x000018, "Wrong size on TOOLTIP_Season_Reward_C_SetData");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetData, DynMat) == 0x000000, "Member 'TOOLTIP_Season_Reward_C_SetData::DynMat' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetData, Param_Reward) == 0x000008, "Member 'TOOLTIP_Season_Reward_C_SetData::Param_Reward' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetData, ShowCost) == 0x000010, "Member 'TOOLTIP_Season_Reward_C_SetData::ShowCost' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetData, Cost) == 0x000014, "Member 'TOOLTIP_Season_Reward_C_SetData::Cost' has a wrong offset!");

// Function TOOLTIP_Season_Reward.TOOLTIP_Season_Reward_C.SetInfo
// 0x0070 (0x0070 - 0x0000)
struct TOOLTIP_Season_Reward_C_SetInfo final
{
public:
	class FText                                   InTitle;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InCategory;                                        // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InDescription;                                     // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UPlayerCharacterID*                     InCharacterID;                                     // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InShowIcon;                                        // 0x0050(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3928[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0058(0x0018)()
};
static_assert(alignof(TOOLTIP_Season_Reward_C_SetInfo) == 0x000008, "Wrong alignment on TOOLTIP_Season_Reward_C_SetInfo");
static_assert(sizeof(TOOLTIP_Season_Reward_C_SetInfo) == 0x000070, "Wrong size on TOOLTIP_Season_Reward_C_SetInfo");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, InTitle) == 0x000000, "Member 'TOOLTIP_Season_Reward_C_SetInfo::InTitle' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, InCategory) == 0x000018, "Member 'TOOLTIP_Season_Reward_C_SetInfo::InCategory' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, InDescription) == 0x000030, "Member 'TOOLTIP_Season_Reward_C_SetInfo::InDescription' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, InCharacterID) == 0x000048, "Member 'TOOLTIP_Season_Reward_C_SetInfo::InCharacterID' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, InShowIcon) == 0x000050, "Member 'TOOLTIP_Season_Reward_C_SetInfo::InShowIcon' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, CallFunc_TextIsEmpty_ReturnValue) == 0x000051, "Member 'TOOLTIP_Season_Reward_C_SetInfo::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, CallFunc_SelectVisibility_IsVisible) == 0x000052, "Member 'TOOLTIP_Season_Reward_C_SetInfo::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, CallFunc_SelectVisibility_VisibilityChanged) == 0x000053, "Member 'TOOLTIP_Season_Reward_C_SetInfo::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, CallFunc_SelectVisibility_New_Visibility) == 0x000054, "Member 'TOOLTIP_Season_Reward_C_SetInfo::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(TOOLTIP_Season_Reward_C_SetInfo, CallFunc_TextToUpper_ReturnValue) == 0x000058, "Member 'TOOLTIP_Season_Reward_C_SetInfo::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

}

