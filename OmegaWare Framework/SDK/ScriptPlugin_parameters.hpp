#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScriptPlugin

#include "Basic.hpp"


namespace CG::Params
{

// Function ScriptPlugin.ScriptContextComponent.CallScriptFunction
// 0x0010 (0x0010 - 0x0000)
struct ScriptContextComponent_CallScriptFunction final
{
public:
	class FString                                 FunctionName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptContextComponent_CallScriptFunction) == 0x000008, "Wrong alignment on ScriptContextComponent_CallScriptFunction");
static_assert(sizeof(ScriptContextComponent_CallScriptFunction) == 0x000010, "Wrong size on ScriptContextComponent_CallScriptFunction");
static_assert(offsetof(ScriptContextComponent_CallScriptFunction, FunctionName) == 0x000000, "Member 'ScriptContextComponent_CallScriptFunction::FunctionName' has a wrong offset!");

// Function ScriptPlugin.ScriptContext.CallScriptFunction
// 0x0010 (0x0010 - 0x0000)
struct ScriptContext_CallScriptFunction final
{
public:
	class FString                                 FunctionName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptContext_CallScriptFunction) == 0x000008, "Wrong alignment on ScriptContext_CallScriptFunction");
static_assert(sizeof(ScriptContext_CallScriptFunction) == 0x000010, "Wrong size on ScriptContext_CallScriptFunction");
static_assert(offsetof(ScriptContext_CallScriptFunction, FunctionName) == 0x000000, "Member 'ScriptContext_CallScriptFunction::FunctionName' has a wrong offset!");

// Function ScriptPlugin.ScriptPluginComponent.CallScriptFunction
// 0x0018 (0x0018 - 0x0000)
struct ScriptPluginComponent_CallScriptFunction final
{
public:
	class FString                                 FunctionName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_102E[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(ScriptPluginComponent_CallScriptFunction) == 0x000008, "Wrong alignment on ScriptPluginComponent_CallScriptFunction");
static_assert(sizeof(ScriptPluginComponent_CallScriptFunction) == 0x000018, "Wrong size on ScriptPluginComponent_CallScriptFunction");
static_assert(offsetof(ScriptPluginComponent_CallScriptFunction, FunctionName) == 0x000000, "Member 'ScriptPluginComponent_CallScriptFunction::FunctionName' has a wrong offset!");
static_assert(offsetof(ScriptPluginComponent_CallScriptFunction, ReturnValue) == 0x000010, "Member 'ScriptPluginComponent_CallScriptFunction::ReturnValue' has a wrong offset!");

// Function ScriptPlugin.ScriptTestActor.TestFunction
// 0x0010 (0x0010 - 0x0000)
struct ScriptTestActor_TestFunction final
{
public:
	float                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InFactor;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMultiply;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1030[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ScriptTestActor_TestFunction) == 0x000004, "Wrong alignment on ScriptTestActor_TestFunction");
static_assert(sizeof(ScriptTestActor_TestFunction) == 0x000010, "Wrong size on ScriptTestActor_TestFunction");
static_assert(offsetof(ScriptTestActor_TestFunction, InValue) == 0x000000, "Member 'ScriptTestActor_TestFunction::InValue' has a wrong offset!");
static_assert(offsetof(ScriptTestActor_TestFunction, InFactor) == 0x000004, "Member 'ScriptTestActor_TestFunction::InFactor' has a wrong offset!");
static_assert(offsetof(ScriptTestActor_TestFunction, bMultiply) == 0x000008, "Member 'ScriptTestActor_TestFunction::bMultiply' has a wrong offset!");
static_assert(offsetof(ScriptTestActor_TestFunction, ReturnValue) == 0x00000C, "Member 'ScriptTestActor_TestFunction::ReturnValue' has a wrong offset!");

}

