#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_GrenadeThrow

#include "Basic.hpp"

#include "ITM_GrenadeThrow_classes.hpp"
#include "ITM_GrenadeThrow_parameters.hpp"


namespace CG
{

// Function ITM_GrenadeThrow.ITM_GrenadeThrow_C.ExecuteUbergraph_ITM_GrenadeThrow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AITM_GrenadeThrow_C::ExecuteUbergraph_ITM_GrenadeThrow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_GrenadeThrow_C", "ExecuteUbergraph_ITM_GrenadeThrow");

	Params::ITM_GrenadeThrow_C_ExecuteUbergraph_ITM_GrenadeThrow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_GrenadeThrow.ITM_GrenadeThrow_C.UpdateCookTime
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AITM_GrenadeThrow_C::UpdateCookTime(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_GrenadeThrow_C", "UpdateCookTime");

	Params::ITM_GrenadeThrow_C_UpdateCookTime Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_GrenadeThrow.ITM_GrenadeThrow_C.GrenadeThrown
// (BlueprintCallable, BlueprintEvent)

void AITM_GrenadeThrow_C::GrenadeThrown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_GrenadeThrow_C", "GrenadeThrown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_GrenadeThrow.ITM_GrenadeThrow_C.Set Is Visible
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AITM_GrenadeThrow_C::Set_Is_Visible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_GrenadeThrow_C", "Set Is Visible");

	Params::ITM_GrenadeThrow_C_Set_Is_Visible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_GrenadeThrow.ITM_GrenadeThrow_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AITM_GrenadeThrow_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_GrenadeThrow_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_GrenadeThrow.ITM_GrenadeThrow_C.RecieveUnequipped
// (Event, Protected, BlueprintEvent)

void AITM_GrenadeThrow_C::RecieveUnequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_GrenadeThrow_C", "RecieveUnequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_GrenadeThrow.ITM_GrenadeThrow_C.RecieveEquipped
// (Event, Protected, BlueprintEvent)

void AITM_GrenadeThrow_C::RecieveEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_GrenadeThrow_C", "RecieveEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITM_GrenadeThrow.ITM_GrenadeThrow_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AITM_GrenadeThrow_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_GrenadeThrow_C", "ReceiveTick");

	Params::ITM_GrenadeThrow_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITM_GrenadeThrow.ITM_GrenadeThrow_C.UpdateSpline
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AITM_GrenadeThrow_C::UpdateSpline(TArray<struct FVector>& Array, float& DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITM_GrenadeThrow_C", "UpdateSpline");

	Params::ITM_GrenadeThrow_C_UpdateSpline Parms{};

	Parms.Array = std::move(Array);
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
	DeltaTime = Parms.DeltaTime;
}

}

