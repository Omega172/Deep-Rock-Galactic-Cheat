#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Hologram_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace CG
{

// BlueprintGeneratedClass BP_Hologram_Base.BP_Hologram_Base_C
// 0x0040 (0x0260 - 0x0220)
class ABP_Hologram_Base_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Hologram5;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hologram6;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hologram4;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingSceneComponent*                RotatingScene;                                     // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             HologramMaterials;                                 // 0x0250(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_Hologram_Base(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetHologramMaterials(TArray<class UMaterialInterface*>& InMaterials);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Hologram_Base_C">();
	}
	static class ABP_Hologram_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Hologram_Base_C>();
	}
};
static_assert(alignof(ABP_Hologram_Base_C) == 0x000008, "Wrong alignment on ABP_Hologram_Base_C");
static_assert(sizeof(ABP_Hologram_Base_C) == 0x000260, "Wrong size on ABP_Hologram_Base_C");
static_assert(offsetof(ABP_Hologram_Base_C, UberGraphFrame) == 0x000220, "Member 'ABP_Hologram_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Hologram_Base_C, Hologram5) == 0x000228, "Member 'ABP_Hologram_Base_C::Hologram5' has a wrong offset!");
static_assert(offsetof(ABP_Hologram_Base_C, Hologram6) == 0x000230, "Member 'ABP_Hologram_Base_C::Hologram6' has a wrong offset!");
static_assert(offsetof(ABP_Hologram_Base_C, Hologram4) == 0x000238, "Member 'ABP_Hologram_Base_C::Hologram4' has a wrong offset!");
static_assert(offsetof(ABP_Hologram_Base_C, RotatingScene) == 0x000240, "Member 'ABP_Hologram_Base_C::RotatingScene' has a wrong offset!");
static_assert(offsetof(ABP_Hologram_Base_C, DefaultSceneRoot) == 0x000248, "Member 'ABP_Hologram_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Hologram_Base_C, HologramMaterials) == 0x000250, "Member 'ABP_Hologram_Base_C::HologramMaterials' has a wrong offset!");

}

