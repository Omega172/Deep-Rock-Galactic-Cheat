#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_TutorialWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_TutorialWidget.HUD_TutorialWidget_C
// 0x0040 (0x02C8 - 0x0288)
class UHUD_TutorialWidget_C final : public UTutorialWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Exit;                                              // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UITM_BasicTutorialWindow_C*             ITM_BasicTutorialWindow;                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         AnimationSpeed;                                    // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AA[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DefaultHeader;                                     // 0x02A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsChangingHintText;                                // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_HUD_TutorialWidget(int32 EntryPoint);
	void ContinueChange();
	void BndEvt__ITM_BasicTutorialWindow_K2Node_ComponentBoundEvent_1_CompleteAnimationFinished__DelegateSignature();
	void BndEvt__ITM_BasicTutorialWindow_K2Node_ComponentBoundEvent_0_RemoveAnimationFinished__DelegateSignature();
	void OnHide(bool Watched);
	void Construct();
	void OnShow(const class FText& Text, const class FText& Title, const class FText& TaskText, class UTexture2D* Image);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_TutorialWidget_C">();
	}
	static class UHUD_TutorialWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_TutorialWidget_C>();
	}
};
static_assert(alignof(UHUD_TutorialWidget_C) == 0x000008, "Wrong alignment on UHUD_TutorialWidget_C");
static_assert(sizeof(UHUD_TutorialWidget_C) == 0x0002C8, "Wrong size on UHUD_TutorialWidget_C");
static_assert(offsetof(UHUD_TutorialWidget_C, UberGraphFrame) == 0x000288, "Member 'UHUD_TutorialWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_TutorialWidget_C, Exit) == 0x000290, "Member 'UHUD_TutorialWidget_C::Exit' has a wrong offset!");
static_assert(offsetof(UHUD_TutorialWidget_C, ITM_BasicTutorialWindow) == 0x000298, "Member 'UHUD_TutorialWidget_C::ITM_BasicTutorialWindow' has a wrong offset!");
static_assert(offsetof(UHUD_TutorialWidget_C, AnimationSpeed) == 0x0002A0, "Member 'UHUD_TutorialWidget_C::AnimationSpeed' has a wrong offset!");
static_assert(offsetof(UHUD_TutorialWidget_C, DefaultHeader) == 0x0002A8, "Member 'UHUD_TutorialWidget_C::DefaultHeader' has a wrong offset!");
static_assert(offsetof(UHUD_TutorialWidget_C, IsChangingHintText) == 0x0002C0, "Member 'UHUD_TutorialWidget_C::IsChangingHintText' has a wrong offset!");

}

