#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FSDAnsel

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "FSDAnsel_structs.hpp"


namespace CG
{

// Class FSDAnsel.FSDAnselFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UFSDAnselFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void ConstrainCameraByDistance(class UObject* WorldContextObject, const struct FVector& NewCameraLocation, const struct FVector& PreviousCameraLocation, const struct FVector& OriginalCameraLocation, struct FVector* OutCameraLocation, float MaxDistance);
	static void ConstrainCameraByGeometry(class UObject* WorldContextObject, const struct FVector& NewCameraLocation, const struct FVector& PreviousCameraLocation, const struct FVector& OriginalCameraLocation, struct FVector* OutCameraLocation);
	static bool IsPhotographyAllowed();
	static bool IsPhotographyAvailable();
	static void SetAutoPause(const bool bShouldAutoPause);
	static void SetAutoPostprocess(const bool bShouldAutoPostprocess);
	static void SetCameraConstraintCameraSize(const float CameraSize);
	static void SetCameraConstraintDistance(const float MaxCameraDistance);
	static void SetCameraMovementSpeed(const float TranslationSpeed);
	static void SetIsPhotographyAllowed(const bool bIsPhotographyAllowed);
	static void SetSettleFrames(const int32 NumSettleFrames);
	static void SetUIControlVisibility(class UObject* WorldContextObject, const EUIControlEffectTarget UIControlTarget, const bool bIsVisible);
	static void StartPhotographySession(class UObject* WorldContextObject);
	static void StopPhotographySession(class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FSDAnselFunctionLibrary">();
	}
	static class UFSDAnselFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFSDAnselFunctionLibrary>();
	}
};
static_assert(alignof(UFSDAnselFunctionLibrary) == 0x000008, "Wrong alignment on UFSDAnselFunctionLibrary");
static_assert(sizeof(UFSDAnselFunctionLibrary) == 0x000028, "Wrong size on UFSDAnselFunctionLibrary");

}

