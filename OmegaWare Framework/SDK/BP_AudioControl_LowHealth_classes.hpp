#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioControl_LowHealth

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace CG
{

// BlueprintGeneratedClass BP_AudioControl_LowHealth.BP_AudioControl_LowHealth_C
// 0x00A8 (0x0158 - 0x00B0)
class UBP_AudioControl_LowHealth_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          WasAbove;                                          // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14F9[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        IronWillIsSpawned;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USubmixEffectSubmixEQPreset*            LowHealthEq;                                       // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Off;                                               // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14FA[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        Health_Low_Cue;                                    // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       PlayerCharacter;                                   // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerHealthComponent*                 PlayerHealthComponent;                             // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USubmixEffectReverbPreset*              LowHealthReverb;                                   // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FadeInCurve;                                       // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTimeLeft;                                      // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInTime;                                        // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFadingIn;                                        // 0x010C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14FB[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeOutTime;                                       // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PrevIsLowHealth;                                   // 0x0114(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14FC[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HealthChange;                                      // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLowHealthOn;                                     // 0x011C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14FD[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        Temperature_Low_Cue;                               // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              PlagueInfected;                                    // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Temperature_VeryLow_Cue;                           // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USubmixEffectStereoDelayPreset*         PlagueInfectedAudioEcho;                           // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USubmixEffectFilterPreset*              PlagueInfectedFilter;                              // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        InfectedSound;                                     // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Infection_Level_max;                               // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Infection_Level_Current;                           // 0x0154(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AudioControl_LowHealth(int32 EntryPoint);
	void OnDeahtAndDestroyed();
	void OnDestroyed_Event(class AActor* DestroyedActor);
	void OnDeath_Event(class UHealthComponentBase* HealthComponent);
	void HandleLowHealthMuffling(bool TurnOn);
	void HandleHeartbeat(bool TurnOn);
	void FadeOutLowHealth();
	void FadeInLowHealth();
	void HealthChanged(float Amount);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	bool ShouldSetTimestamp(bool IsActivate);
	void SetSoundFromAlpha(float FadeAlpha);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AudioControl_LowHealth_C">();
	}
	static class UBP_AudioControl_LowHealth_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AudioControl_LowHealth_C>();
	}
};
static_assert(alignof(UBP_AudioControl_LowHealth_C) == 0x000008, "Wrong alignment on UBP_AudioControl_LowHealth_C");
static_assert(sizeof(UBP_AudioControl_LowHealth_C) == 0x000158, "Wrong size on UBP_AudioControl_LowHealth_C");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, UberGraphFrame) == 0x0000B0, "Member 'UBP_AudioControl_LowHealth_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, WasAbove) == 0x0000B8, "Member 'UBP_AudioControl_LowHealth_C::WasAbove' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, IronWillIsSpawned) == 0x0000C0, "Member 'UBP_AudioControl_LowHealth_C::IronWillIsSpawned' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, LowHealthEq) == 0x0000C8, "Member 'UBP_AudioControl_LowHealth_C::LowHealthEq' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, Off) == 0x0000D0, "Member 'UBP_AudioControl_LowHealth_C::Off' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, Health_Low_Cue) == 0x0000D8, "Member 'UBP_AudioControl_LowHealth_C::Health_Low_Cue' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, PlayerCharacter) == 0x0000E0, "Member 'UBP_AudioControl_LowHealth_C::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, PlayerHealthComponent) == 0x0000E8, "Member 'UBP_AudioControl_LowHealth_C::PlayerHealthComponent' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, LowHealthReverb) == 0x0000F0, "Member 'UBP_AudioControl_LowHealth_C::LowHealthReverb' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, FadeInCurve) == 0x0000F8, "Member 'UBP_AudioControl_LowHealth_C::FadeInCurve' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, FadeTimeLeft) == 0x000100, "Member 'UBP_AudioControl_LowHealth_C::FadeTimeLeft' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, FadeInTime) == 0x000104, "Member 'UBP_AudioControl_LowHealth_C::FadeInTime' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, Alpha) == 0x000108, "Member 'UBP_AudioControl_LowHealth_C::Alpha' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, IsFadingIn) == 0x00010C, "Member 'UBP_AudioControl_LowHealth_C::IsFadingIn' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, FadeOutTime) == 0x000110, "Member 'UBP_AudioControl_LowHealth_C::FadeOutTime' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, PrevIsLowHealth) == 0x000114, "Member 'UBP_AudioControl_LowHealth_C::PrevIsLowHealth' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, HealthChange) == 0x000118, "Member 'UBP_AudioControl_LowHealth_C::HealthChange' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, IsLowHealthOn) == 0x00011C, "Member 'UBP_AudioControl_LowHealth_C::IsLowHealthOn' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, Temperature_Low_Cue) == 0x000120, "Member 'UBP_AudioControl_LowHealth_C::Temperature_Low_Cue' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, PlagueInfected) == 0x000128, "Member 'UBP_AudioControl_LowHealth_C::PlagueInfected' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, Temperature_VeryLow_Cue) == 0x000130, "Member 'UBP_AudioControl_LowHealth_C::Temperature_VeryLow_Cue' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, PlagueInfectedAudioEcho) == 0x000138, "Member 'UBP_AudioControl_LowHealth_C::PlagueInfectedAudioEcho' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, PlagueInfectedFilter) == 0x000140, "Member 'UBP_AudioControl_LowHealth_C::PlagueInfectedFilter' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, InfectedSound) == 0x000148, "Member 'UBP_AudioControl_LowHealth_C::InfectedSound' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, Infection_Level_max) == 0x000150, "Member 'UBP_AudioControl_LowHealth_C::Infection_Level_max' has a wrong offset!");
static_assert(offsetof(UBP_AudioControl_LowHealth_C, Infection_Level_Current) == 0x000154, "Member 'UBP_AudioControl_LowHealth_C::Infection_Level_Current' has a wrong offset!");

}

