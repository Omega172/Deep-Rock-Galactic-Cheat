#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_LoadOut_PerksEquip_Slot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ITM_LoadOut_PerksEquip_Slot.ITM_LoadOut_PerksEquip_Slot_C
// 0x0088 (0x02E8 - 0x0260)
class UITM_LoadOut_PerksEquip_Slot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetSwitcher*                        ContentSwitcher;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ImageTinted_C*                      LockedIcon;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SelectionBorder;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SlotButton;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PerkBackground_C*                   UI_PerkBackground;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PerkIcon_C*                         UI_PerkIcon;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EPerkUsageType                                SlotType;                                          // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3C88[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPerkAsset*                             PerkAsset;                                         // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsLocked;                                          // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          Hovered;                                           // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSelected;                                        // 0x02AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C89[0x5];                                     // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             OverrideLockIcon;                                  // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   LockedToolTip;                                     // 0x02C8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UUI_Perk_ToolTip_C*                     PerkToolTip;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnClicked__DelegateSignature(class UITM_LoadOut_PerksEquip_Slot_C* SlotWidget);
	void ExecuteUbergraph_ITM_LoadOut_PerksEquip_Slot(int32 EntryPoint);
	void BndEvt__SlotButton_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__SlotButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__SlotButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void UpdateIconAndBackground();
	void SetLockedIcon(class UTexture2D* InTexture);
	void SetLocked(bool Param_IsLocked);
	void SetPerkAsset(class UPerkAsset* Param_PerkAsset);
	void GetPerkAsset(class UPerkAsset** Param_PerkAsset);
	void GetSlotType(EPerkUsageType* Param_SlotType);
	void GetIsLocked(bool* Param_IsLocked);
	void SetHovered(bool Param_Hovered);
	void SetSelected(bool InSelected);
	void UpdateSelectionBorder();
	void GetIsSelected(bool* Param_IsSelected);
	class UWidget* GetPerkToolTip();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_LoadOut_PerksEquip_Slot_C">();
	}
	static class UITM_LoadOut_PerksEquip_Slot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_LoadOut_PerksEquip_Slot_C>();
	}
};
static_assert(alignof(UITM_LoadOut_PerksEquip_Slot_C) == 0x000008, "Wrong alignment on UITM_LoadOut_PerksEquip_Slot_C");
static_assert(sizeof(UITM_LoadOut_PerksEquip_Slot_C) == 0x0002E8, "Wrong size on UITM_LoadOut_PerksEquip_Slot_C");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, UberGraphFrame) == 0x000260, "Member 'UITM_LoadOut_PerksEquip_Slot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, ContentSwitcher) == 0x000268, "Member 'UITM_LoadOut_PerksEquip_Slot_C::ContentSwitcher' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, LockedIcon) == 0x000270, "Member 'UITM_LoadOut_PerksEquip_Slot_C::LockedIcon' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, SelectionBorder) == 0x000278, "Member 'UITM_LoadOut_PerksEquip_Slot_C::SelectionBorder' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, SlotButton) == 0x000280, "Member 'UITM_LoadOut_PerksEquip_Slot_C::SlotButton' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, UI_PerkBackground) == 0x000288, "Member 'UITM_LoadOut_PerksEquip_Slot_C::UI_PerkBackground' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, UI_PerkIcon) == 0x000290, "Member 'UITM_LoadOut_PerksEquip_Slot_C::UI_PerkIcon' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, SlotType) == 0x000298, "Member 'UITM_LoadOut_PerksEquip_Slot_C::SlotType' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, PerkAsset) == 0x0002A0, "Member 'UITM_LoadOut_PerksEquip_Slot_C::PerkAsset' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, IsLocked) == 0x0002A8, "Member 'UITM_LoadOut_PerksEquip_Slot_C::IsLocked' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, Hovered) == 0x0002A9, "Member 'UITM_LoadOut_PerksEquip_Slot_C::Hovered' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, IsSelected) == 0x0002AA, "Member 'UITM_LoadOut_PerksEquip_Slot_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, OverrideLockIcon) == 0x0002B0, "Member 'UITM_LoadOut_PerksEquip_Slot_C::OverrideLockIcon' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, OnClicked) == 0x0002B8, "Member 'UITM_LoadOut_PerksEquip_Slot_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, LockedToolTip) == 0x0002C8, "Member 'UITM_LoadOut_PerksEquip_Slot_C::LockedToolTip' has a wrong offset!");
static_assert(offsetof(UITM_LoadOut_PerksEquip_Slot_C, PerkToolTip) == 0x0002E0, "Member 'UITM_LoadOut_PerksEquip_Slot_C::PerkToolTip' has a wrong offset!");

}

