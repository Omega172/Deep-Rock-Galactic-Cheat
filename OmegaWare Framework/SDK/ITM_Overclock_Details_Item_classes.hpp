#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Overclock_Details_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ITM_Overclock_Details_Item.ITM_Overclock_Details_Item_C
// 0x0038 (0x0298 - 0x0260)
class UITM_Overclock_Details_Item_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 AdvantagousIcon;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DetailText;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0278(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          IsAdvantagous;                                     // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3750[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FontSize;                                          // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ITM_Overclock_Details_Item(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetData(const class FText& InText, bool InIsAdvantagous);
	void SetFontSize(int32 NewSize);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_Overclock_Details_Item_C">();
	}
	static class UITM_Overclock_Details_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_Overclock_Details_Item_C>();
	}
};
static_assert(alignof(UITM_Overclock_Details_Item_C) == 0x000008, "Wrong alignment on UITM_Overclock_Details_Item_C");
static_assert(sizeof(UITM_Overclock_Details_Item_C) == 0x000298, "Wrong size on UITM_Overclock_Details_Item_C");
static_assert(offsetof(UITM_Overclock_Details_Item_C, UberGraphFrame) == 0x000260, "Member 'UITM_Overclock_Details_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Details_Item_C, AdvantagousIcon) == 0x000268, "Member 'UITM_Overclock_Details_Item_C::AdvantagousIcon' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Details_Item_C, DetailText) == 0x000270, "Member 'UITM_Overclock_Details_Item_C::DetailText' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Details_Item_C, Text) == 0x000278, "Member 'UITM_Overclock_Details_Item_C::Text' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Details_Item_C, IsAdvantagous) == 0x000290, "Member 'UITM_Overclock_Details_Item_C::IsAdvantagous' has a wrong offset!");
static_assert(offsetof(UITM_Overclock_Details_Item_C, FontSize) == 0x000294, "Member 'UITM_Overclock_Details_Item_C::FontSize' has a wrong offset!");

}

