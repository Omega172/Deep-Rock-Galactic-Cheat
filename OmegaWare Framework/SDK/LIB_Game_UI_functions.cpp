#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LIB_Game_UI

#include "Basic.hpp"

#include "LIB_Game_UI_classes.hpp"
#include "LIB_Game_UI_parameters.hpp"


namespace CG
{

// Function LIB_Game_UI.LIB_Game_UI_C.GetVanitySlotTitle
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EVanitySlot                             InVanitySlot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UpperCase                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             OutTitle                                               (Parm, OutParm)

void ULIB_Game_UI_C::GetVanitySlotTitle(EVanitySlot InVanitySlot, bool UpperCase, class UObject* __WorldContext, class FText* OutTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_Game_UI_C", "GetVanitySlotTitle");

	Params::LIB_Game_UI_C_GetVanitySlotTitle Parms{};

	Parms.InVanitySlot = InVanitySlot;
	Parms.UpperCase = UpperCase;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutTitle != nullptr)
		*OutTitle = std::move(Parms.OutTitle);
}


// Function LIB_Game_UI.LIB_Game_UI_C.GetPickaxePartLocationTitle
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPickaxePartLocation                    InPartLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UpperCase                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    LongName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             OutTitle                                               (Parm, OutParm)

void ULIB_Game_UI_C::GetPickaxePartLocationTitle(EPickaxePartLocation InPartLocation, bool UpperCase, bool LongName, class UObject* __WorldContext, class FText* OutTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_Game_UI_C", "GetPickaxePartLocationTitle");

	Params::LIB_Game_UI_C_GetPickaxePartLocationTitle Parms{};

	Parms.InPartLocation = InPartLocation;
	Parms.UpperCase = UpperCase;
	Parms.LongName = LongName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (OutTitle != nullptr)
		*OutTitle = std::move(Parms.OutTitle);
}


// Function LIB_Game_UI.LIB_Game_UI_C.GetEnemyFamilyInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EEnemyFamily                            Family                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (Parm, OutParm)
// class UTexture2D*                       Icon                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULIB_Game_UI_C::GetEnemyFamilyInfo(EEnemyFamily Family, class UObject* __WorldContext, class FText* Param_Name, class UTexture2D** Icon, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_Game_UI_C", "GetEnemyFamilyInfo");

	Params::LIB_Game_UI_C_GetEnemyFamilyInfo Parms{};

	Parms.Family = Family;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);

	if (Icon != nullptr)
		*Icon = Parms.Icon;

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function LIB_Game_UI.LIB_Game_UI_C.GetEnemyTypeInfo
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EEnemyType                              Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Display_Text                                           (Parm, OutParm)
// class UTexture2D*                       Icon                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     IconColor                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULIB_Game_UI_C::GetEnemyTypeInfo(EEnemyType Type, class UObject* __WorldContext, class FText* Display_Text, class UTexture2D** Icon, struct FLinearColor* IconColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_Game_UI_C", "GetEnemyTypeInfo");

	Params::LIB_Game_UI_C_GetEnemyTypeInfo Parms{};

	Parms.Type = Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Display_Text != nullptr)
		*Display_Text = std::move(Parms.Display_Text);

	if (Icon != nullptr)
		*Icon = Parms.Icon;

	if (IconColor != nullptr)
		*IconColor = std::move(Parms.IconColor);
}


// Function LIB_Game_UI.LIB_Game_UI_C.GetArmorTypeInfo
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EArmorType                              Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Display_Text                                           (Parm, OutParm)
// class UTexture2D*                       Icon                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULIB_Game_UI_C::GetArmorTypeInfo(EArmorType Type, class UObject* __WorldContext, class FText* Display_Text, class UTexture2D** Icon, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_Game_UI_C", "GetArmorTypeInfo");

	Params::LIB_Game_UI_C_GetArmorTypeInfo Parms{};

	Parms.Type = Type;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Display_Text != nullptr)
		*Display_Text = std::move(Parms.Display_Text);

	if (Icon != nullptr)
		*Icon = Parms.Icon;

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function LIB_Game_UI.LIB_Game_UI_C.GetEnemyFamilyName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EEnemyFamily                            Family                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (Parm, OutParm)

void ULIB_Game_UI_C::GetEnemyFamilyName(EEnemyFamily Family, class UObject* __WorldContext, class FText* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_Game_UI_C", "GetEnemyFamilyName");

	Params::LIB_Game_UI_C_GetEnemyFamilyName Parms{};

	Parms.Family = Family;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function LIB_Game_UI.LIB_Game_UI_C.GetRewardText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UReward*                          Reward                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Title                                                  (Parm, OutParm)
// class FText                             Category                                               (Parm, OutParm)
// class FText                             Description                                            (Parm, OutParm)
// bool                                    HasOptionalCharacterID                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPlayerCharacterID*               CharacterID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULIB_Game_UI_C::GetRewardText(class UReward* Reward, class UObject* __WorldContext, class FText* Title, class FText* Category, class FText* Description, bool* HasOptionalCharacterID, class UPlayerCharacterID** CharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_Game_UI_C", "GetRewardText");

	Params::LIB_Game_UI_C_GetRewardText Parms{};

	Parms.Reward = Reward;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Title != nullptr)
		*Title = std::move(Parms.Title);

	if (Category != nullptr)
		*Category = std::move(Parms.Category);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);

	if (HasOptionalCharacterID != nullptr)
		*HasOptionalCharacterID = Parms.HasOptionalCharacterID;

	if (CharacterID != nullptr)
		*CharacterID = Parms.CharacterID;
}


// Function LIB_Game_UI.LIB_Game_UI_C.GetRewardIcon
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UReward*                          Reward                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Icon                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULIB_Game_UI_C::GetRewardIcon(class UReward* Reward, class UObject* __WorldContext, class UTexture** Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_Game_UI_C", "GetRewardIcon");

	Params::LIB_Game_UI_C_GetRewardIcon Parms{};

	Parms.Reward = Reward;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Icon != nullptr)
		*Icon = Parms.Icon;
}


// Function LIB_Game_UI.LIB_Game_UI_C.GetSkinText
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UItemSkin*                        InSkin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UItemID*                          InOptionalItem                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPlayerCharacterID*               InOptionalCharacter                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Title                                                  (Parm, OutParm)
// class FText                             Category                                               (Parm, OutParm)
// class FText                             Description                                            (Parm, OutParm)
// bool                                    HasOptionalCharacterID                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UPlayerCharacterID*               CharacterID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULIB_Game_UI_C::GetSkinText(class UItemSkin* InSkin, class UItemID* InOptionalItem, class UPlayerCharacterID* InOptionalCharacter, class UObject* __WorldContext, class FText* Title, class FText* Category, class FText* Description, bool* HasOptionalCharacterID, class UPlayerCharacterID** CharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LIB_Game_UI_C", "GetSkinText");

	Params::LIB_Game_UI_C_GetSkinText Parms{};

	Parms.InSkin = InSkin;
	Parms.InOptionalItem = InOptionalItem;
	Parms.InOptionalCharacter = InOptionalCharacter;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Title != nullptr)
		*Title = std::move(Parms.Title);

	if (Category != nullptr)
		*Category = std::move(Parms.Category);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);

	if (HasOptionalCharacterID != nullptr)
		*HasOptionalCharacterID = Parms.HasOptionalCharacterID;

	if (CharacterID != nullptr)
		*CharacterID = Parms.CharacterID;
}

}

