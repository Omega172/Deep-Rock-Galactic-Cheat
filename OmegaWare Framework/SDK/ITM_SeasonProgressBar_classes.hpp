#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_SeasonProgressBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ITM_SeasonProgressBar.ITM_SeasonProgressBar_C
// 0x0098 (0x02F8 - 0x0260)
class UITM_SeasonProgressBar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TrailTurnBlue;                                     // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewLevel;                                          // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Icon_PerformancePoint;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_258;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_NormalClaim;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_LevelPercent;                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Trail;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_NextLevel;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_PrevLevel;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Slash;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_TotalXP;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_XP;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowPPIcon;                                        // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E2[0x3];                                     // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimTime;                                          // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             XPCountFinished;                                   // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsCountingMissionXP;                               // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30E3[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentLevelTotal;                                 // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             LevelReached;                                      // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void XPCountFinished__DelegateSignature();
	void LevelReached__DelegateSignature(int32 Level);
	void ExecuteUbergraph_ITM_SeasonProgressBar(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void ContinueCount();
	void UpdateXPText(int32 CurrXP);
	void UpdateTextFromXP(int32 XP);
	void UpdateText(int32 CurrentLevel, float Percent);
	void AnimateXP(int32 FromLevel, int32 ToLevel, float FromPercent, float ToPercent, int32 FromXP, int32 ToXP);
	void AnimateCount(int32 SeasonXP, int32 AddedXP, const TArray<struct FSeasonEvent>& SeasonEvents);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_SeasonProgressBar_C">();
	}
	static class UITM_SeasonProgressBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_SeasonProgressBar_C>();
	}
};
static_assert(alignof(UITM_SeasonProgressBar_C) == 0x000008, "Wrong alignment on UITM_SeasonProgressBar_C");
static_assert(sizeof(UITM_SeasonProgressBar_C) == 0x0002F8, "Wrong size on UITM_SeasonProgressBar_C");
static_assert(offsetof(UITM_SeasonProgressBar_C, UberGraphFrame) == 0x000260, "Member 'UITM_SeasonProgressBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, TrailTurnBlue) == 0x000268, "Member 'UITM_SeasonProgressBar_C::TrailTurnBlue' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, NewLevel) == 0x000270, "Member 'UITM_SeasonProgressBar_C::NewLevel' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, Icon_PerformancePoint) == 0x000278, "Member 'UITM_SeasonProgressBar_C::Icon_PerformancePoint' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, Image_258) == 0x000280, "Member 'UITM_SeasonProgressBar_C::Image_258' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, Image_NormalClaim) == 0x000288, "Member 'UITM_SeasonProgressBar_C::Image_NormalClaim' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, ProgressBar_LevelPercent) == 0x000290, "Member 'UITM_SeasonProgressBar_C::ProgressBar_LevelPercent' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, ProgressBar_Trail) == 0x000298, "Member 'UITM_SeasonProgressBar_C::ProgressBar_Trail' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, Text_NextLevel) == 0x0002A0, "Member 'UITM_SeasonProgressBar_C::Text_NextLevel' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, Text_PrevLevel) == 0x0002A8, "Member 'UITM_SeasonProgressBar_C::Text_PrevLevel' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, TextBlock_Slash) == 0x0002B0, "Member 'UITM_SeasonProgressBar_C::TextBlock_Slash' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, TextBlock_TotalXP) == 0x0002B8, "Member 'UITM_SeasonProgressBar_C::TextBlock_TotalXP' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, TextBlock_XP) == 0x0002C0, "Member 'UITM_SeasonProgressBar_C::TextBlock_XP' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, ShowPPIcon) == 0x0002C8, "Member 'UITM_SeasonProgressBar_C::ShowPPIcon' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, AnimTime) == 0x0002CC, "Member 'UITM_SeasonProgressBar_C::AnimTime' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, XPCountFinished) == 0x0002D0, "Member 'UITM_SeasonProgressBar_C::XPCountFinished' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, IsCountingMissionXP) == 0x0002E0, "Member 'UITM_SeasonProgressBar_C::IsCountingMissionXP' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, CurrentLevelTotal) == 0x0002E4, "Member 'UITM_SeasonProgressBar_C::CurrentLevelTotal' has a wrong offset!");
static_assert(offsetof(UITM_SeasonProgressBar_C, LevelReached) == 0x0002E8, "Member 'UITM_SeasonProgressBar_C::LevelReached' has a wrong offset!");

}

