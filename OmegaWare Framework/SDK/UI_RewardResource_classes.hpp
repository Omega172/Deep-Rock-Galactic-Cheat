#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RewardResource

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass UI_RewardResource.UI_RewardResource_C
// 0x0040 (0x02A8 - 0x0268)
class UUI_RewardResource_C final : public URewardWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CelebrateAnim;                                     // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBasic_AnimatedNumber_C*                Basic_AnimatedNumber;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ResourceIcon;                                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_2;                                         // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UResourceData*                          Resource;                                          // 0x0290(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0298(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_33AC[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        AudioCounting;                                     // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_RewardResource(int32 EntryPoint);
	void PlayReceiveAnim();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_RewardResource_C">();
	}
	static class UUI_RewardResource_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_RewardResource_C>();
	}
};
static_assert(alignof(UUI_RewardResource_C) == 0x000008, "Wrong alignment on UUI_RewardResource_C");
static_assert(sizeof(UUI_RewardResource_C) == 0x0002A8, "Wrong size on UUI_RewardResource_C");
static_assert(offsetof(UUI_RewardResource_C, UberGraphFrame) == 0x000268, "Member 'UUI_RewardResource_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_RewardResource_C, CelebrateAnim) == 0x000270, "Member 'UUI_RewardResource_C::CelebrateAnim' has a wrong offset!");
static_assert(offsetof(UUI_RewardResource_C, Basic_AnimatedNumber) == 0x000278, "Member 'UUI_RewardResource_C::Basic_AnimatedNumber' has a wrong offset!");
static_assert(offsetof(UUI_RewardResource_C, ResourceIcon) == 0x000280, "Member 'UUI_RewardResource_C::ResourceIcon' has a wrong offset!");
static_assert(offsetof(UUI_RewardResource_C, SizeBox_2) == 0x000288, "Member 'UUI_RewardResource_C::SizeBox_2' has a wrong offset!");
static_assert(offsetof(UUI_RewardResource_C, Resource) == 0x000290, "Member 'UUI_RewardResource_C::Resource' has a wrong offset!");
static_assert(offsetof(UUI_RewardResource_C, Amount) == 0x000298, "Member 'UUI_RewardResource_C::Amount' has a wrong offset!");
static_assert(offsetof(UUI_RewardResource_C, AudioCounting) == 0x0002A0, "Member 'UUI_RewardResource_C::AudioCounting' has a wrong offset!");

}

