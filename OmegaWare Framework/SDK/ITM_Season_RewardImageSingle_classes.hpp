#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Season_RewardImageSingle

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_SkinWidgetTypes_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ITM_Season_RewardImageSingle.ITM_Season_RewardImageSingle_C
// 0x0128 (0x0388 - 0x0260)
class UITM_Season_RewardImageSingle_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimRewardMove;                                    // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMoveTick;                                      // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHover;                                           // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RewardGained;                                      // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ImageReady;                                        // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_Outer;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 I_SkinType;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Glow;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Main;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Shadow;                                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_MatrixCore;                                // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Outer;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Skin;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_3;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UReward*                                Reward;                                            // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowToolTip;                                       // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B4[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynMaterial;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayRewardGained;                                  // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B5[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             RewardGainFinished;                                // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ImageIsReady;                                      // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          DoHoverAnim;                                       // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRenderTextureReady;                              // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B6[0x6];                                     // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MaterialBase;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShowClaimedEvent;                                  // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShowGlow;                                          // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37B7[0x6];                                     // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 RenderTex;                                         // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESeasonVisibilityState                        NodeState;                                         // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B8[0x7];                                     // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_SkinIcon_C*                        SkinWidget;                                        // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DimOutline;                                        // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               BoughtColor;                                       // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void RewardGainFinished__DelegateSignature();
	void ImageIsReady__DelegateSignature();
	void OnHovered__DelegateSignature();
	void OnUnhovered__DelegateSignature();
	void OnClicked__DelegateSignature();
	void ExecuteUbergraph_ITM_Season_RewardImageSingle(int32 EntryPoint);
	void UpdateWidgetColor();
	void SetSkin(class UItemSkin* Item);
	void SetActiveLook(ESeasonVisibilityState IsActiveLook);
	void ChangeSize(const struct FVector2D& Param_Size);
	void SetVanityIcon(class UVanityItem* Item);
	void SetDoHover(bool InDoHover);
	void BndEvt__Button_Outer_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void AnimHoverFinished();
	void OnImageReady();
	void SetTextureReady(class UTextureRenderTarget2D* OptionalTexture);
	void BndEvt__Button_Outer_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_Outer_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void OnRewardGainFinished();
	void SetDataFromDynMat(class UMaterialInstanceDynamic* DynMat, class UReward* Param_Reward, bool Param_ShowToolTip);
	void ImageReadyTick();
	void SetData(class UReward* Param_Reward, bool Param_ShowToolTip, bool Param_PlayRewardGained, const bool Param_DoHoverAnim, bool ShowClaimedEffects, ESeasonVisibilityState InNodeState, ENUM_MenuColors Param_BoughtColor);
	void PreConstruct(bool IsDesignTime);
	void AnimTick();
	class UWidget* Get_Image_Main_ToolTipWidget();
	void GetPickaxe(class UPlayerCharacterID* CharacterID, class UItemID** Output);
	void Set_Skin_Icon(class UItemSkin* InSkin, class UMaterialInterface* InMaterial, ENUM_SkinWidgetTypes InBucketIcon);
	void SetupMaterial();
	void SequenceEvent__ENTRYPOINTITM_Season_RewardImageSingle_0();
	void SequenceEvent__ENTRYPOINTITM_Season_RewardImageSingle_1();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITM_Season_RewardImageSingle_C">();
	}
	static class UITM_Season_RewardImageSingle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITM_Season_RewardImageSingle_C>();
	}
};
static_assert(alignof(UITM_Season_RewardImageSingle_C) == 0x000008, "Wrong alignment on UITM_Season_RewardImageSingle_C");
static_assert(sizeof(UITM_Season_RewardImageSingle_C) == 0x000388, "Wrong size on UITM_Season_RewardImageSingle_C");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, UberGraphFrame) == 0x000260, "Member 'UITM_Season_RewardImageSingle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, AnimRewardMove) == 0x000268, "Member 'UITM_Season_RewardImageSingle_C::AnimRewardMove' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, AnimMoveTick) == 0x000270, "Member 'UITM_Season_RewardImageSingle_C::AnimMoveTick' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, OnHover) == 0x000278, "Member 'UITM_Season_RewardImageSingle_C::OnHover' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, RewardGained) == 0x000280, "Member 'UITM_Season_RewardImageSingle_C::RewardGained' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, ImageReady) == 0x000288, "Member 'UITM_Season_RewardImageSingle_C::ImageReady' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, Button_Outer) == 0x000290, "Member 'UITM_Season_RewardImageSingle_C::Button_Outer' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, I_SkinType) == 0x000298, "Member 'UITM_Season_RewardImageSingle_C::I_SkinType' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, Image_Glow) == 0x0002A0, "Member 'UITM_Season_RewardImageSingle_C::Image_Glow' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, Image_Main) == 0x0002A8, "Member 'UITM_Season_RewardImageSingle_C::Image_Main' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, Image_Shadow) == 0x0002B0, "Member 'UITM_Season_RewardImageSingle_C::Image_Shadow' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, Overlay_MatrixCore) == 0x0002B8, "Member 'UITM_Season_RewardImageSingle_C::Overlay_MatrixCore' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, Overlay_Outer) == 0x0002C0, "Member 'UITM_Season_RewardImageSingle_C::Overlay_Outer' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, Overlay_Skin) == 0x0002C8, "Member 'UITM_Season_RewardImageSingle_C::Overlay_Skin' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, SizeBox_3) == 0x0002D0, "Member 'UITM_Season_RewardImageSingle_C::SizeBox_3' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, Size) == 0x0002D8, "Member 'UITM_Season_RewardImageSingle_C::Size' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, Reward) == 0x0002E0, "Member 'UITM_Season_RewardImageSingle_C::Reward' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, ShowToolTip) == 0x0002E8, "Member 'UITM_Season_RewardImageSingle_C::ShowToolTip' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, DynMaterial) == 0x0002F0, "Member 'UITM_Season_RewardImageSingle_C::DynMaterial' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, PlayRewardGained) == 0x0002F8, "Member 'UITM_Season_RewardImageSingle_C::PlayRewardGained' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, RewardGainFinished) == 0x000300, "Member 'UITM_Season_RewardImageSingle_C::RewardGainFinished' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, ImageIsReady) == 0x000310, "Member 'UITM_Season_RewardImageSingle_C::ImageIsReady' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, DoHoverAnim) == 0x000320, "Member 'UITM_Season_RewardImageSingle_C::DoHoverAnim' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, IsRenderTextureReady) == 0x000321, "Member 'UITM_Season_RewardImageSingle_C::IsRenderTextureReady' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, MaterialBase) == 0x000328, "Member 'UITM_Season_RewardImageSingle_C::MaterialBase' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, OnHovered) == 0x000330, "Member 'UITM_Season_RewardImageSingle_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, OnUnhovered) == 0x000340, "Member 'UITM_Season_RewardImageSingle_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, OnClicked) == 0x000350, "Member 'UITM_Season_RewardImageSingle_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, ShowClaimedEvent) == 0x000360, "Member 'UITM_Season_RewardImageSingle_C::ShowClaimedEvent' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, ShowGlow) == 0x000361, "Member 'UITM_Season_RewardImageSingle_C::ShowGlow' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, RenderTex) == 0x000368, "Member 'UITM_Season_RewardImageSingle_C::RenderTex' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, NodeState) == 0x000370, "Member 'UITM_Season_RewardImageSingle_C::NodeState' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, SkinWidget) == 0x000378, "Member 'UITM_Season_RewardImageSingle_C::SkinWidget' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, DimOutline) == 0x000380, "Member 'UITM_Season_RewardImageSingle_C::DimOutline' has a wrong offset!");
static_assert(offsetof(UITM_Season_RewardImageSingle_C, BoughtColor) == 0x000381, "Member 'UITM_Season_RewardImageSingle_C::BoughtColor' has a wrong offset!");

}

