#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadarPointInterface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function RadarPointInterface.RadarPointInterface_C.InitPoint
// 0x0010 (0x0010 - 0x0000)
struct RadarPointInterface_C_InitPoint final
{
public:
	class URadarPointComponent*                   RadarComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RadarPointInterface_C_InitPoint) == 0x000008, "Wrong alignment on RadarPointInterface_C_InitPoint");
static_assert(sizeof(RadarPointInterface_C_InitPoint) == 0x000010, "Wrong size on RadarPointInterface_C_InitPoint");
static_assert(offsetof(RadarPointInterface_C_InitPoint, RadarComponent) == 0x000000, "Member 'RadarPointInterface_C_InitPoint::RadarComponent' has a wrong offset!");
static_assert(offsetof(RadarPointInterface_C_InitPoint, Success) == 0x000008, "Member 'RadarPointInterface_C_InitPoint::Success' has a wrong offset!");

// Function RadarPointInterface.RadarPointInterface_C.Get3dPosition
// 0x000C (0x000C - 0x0000)
struct RadarPointInterface_C_Get3dPosition final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RadarPointInterface_C_Get3dPosition) == 0x000004, "Wrong alignment on RadarPointInterface_C_Get3dPosition");
static_assert(sizeof(RadarPointInterface_C_Get3dPosition) == 0x00000C, "Wrong size on RadarPointInterface_C_Get3dPosition");
static_assert(offsetof(RadarPointInterface_C_Get3dPosition, Pos) == 0x000000, "Member 'RadarPointInterface_C_Get3dPosition::Pos' has a wrong offset!");

// Function RadarPointInterface.RadarPointInterface_C.UpdatePoint
// 0x000C (0x000C - 0x0000)
struct RadarPointInterface_C_UpdatePoint final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VerticalDist;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Destroy;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RadarPointInterface_C_UpdatePoint) == 0x000004, "Wrong alignment on RadarPointInterface_C_UpdatePoint");
static_assert(sizeof(RadarPointInterface_C_UpdatePoint) == 0x00000C, "Wrong size on RadarPointInterface_C_UpdatePoint");
static_assert(offsetof(RadarPointInterface_C_UpdatePoint, Alpha) == 0x000000, "Member 'RadarPointInterface_C_UpdatePoint::Alpha' has a wrong offset!");
static_assert(offsetof(RadarPointInterface_C_UpdatePoint, VerticalDist) == 0x000004, "Member 'RadarPointInterface_C_UpdatePoint::VerticalDist' has a wrong offset!");
static_assert(offsetof(RadarPointInterface_C_UpdatePoint, Destroy) == 0x000008, "Member 'RadarPointInterface_C_UpdatePoint::Destroy' has a wrong offset!");

}

