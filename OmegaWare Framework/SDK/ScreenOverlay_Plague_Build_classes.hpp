#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScreenOverlay_Plague_Build

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass ScreenOverlay_Plague_Build.ScreenOverlay_Plague_Build_C
// 0x0048 (0x02A8 - 0x0260)
class UScreenOverlay_Plague_Build_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimJitter;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimPulse;                                         // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimFading;                                        // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 AfflictionImage;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       Player;                                            // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timer;                                             // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ScreenOverlay_Plague_Build(int32 EntryPoint);
	void OnCameraModeChanged(ECharacterCameraMode NewCameraMode, ECharacterCameraMode OldCameraMode);
	void End_Splat();
	void OnCharacterStateChanged(ECharacterState NewState);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ScreenOverlay_Plague_Build_C">();
	}
	static class UScreenOverlay_Plague_Build_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScreenOverlay_Plague_Build_C>();
	}
};
static_assert(alignof(UScreenOverlay_Plague_Build_C) == 0x000008, "Wrong alignment on UScreenOverlay_Plague_Build_C");
static_assert(sizeof(UScreenOverlay_Plague_Build_C) == 0x0002A8, "Wrong size on UScreenOverlay_Plague_Build_C");
static_assert(offsetof(UScreenOverlay_Plague_Build_C, UberGraphFrame) == 0x000260, "Member 'UScreenOverlay_Plague_Build_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_Plague_Build_C, AnimJitter) == 0x000268, "Member 'UScreenOverlay_Plague_Build_C::AnimJitter' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_Plague_Build_C, AnimPulse) == 0x000270, "Member 'UScreenOverlay_Plague_Build_C::AnimPulse' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_Plague_Build_C, AnimFading) == 0x000278, "Member 'UScreenOverlay_Plague_Build_C::AnimFading' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_Plague_Build_C, AfflictionImage) == 0x000280, "Member 'UScreenOverlay_Plague_Build_C::AfflictionImage' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_Plague_Build_C, Color) == 0x000288, "Member 'UScreenOverlay_Plague_Build_C::Color' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_Plague_Build_C, Player) == 0x000298, "Member 'UScreenOverlay_Plague_Build_C::Player' has a wrong offset!");
static_assert(offsetof(UScreenOverlay_Plague_Build_C, Timer) == 0x0002A0, "Member 'UScreenOverlay_Plague_Build_C::Timer' has a wrong offset!");

}

