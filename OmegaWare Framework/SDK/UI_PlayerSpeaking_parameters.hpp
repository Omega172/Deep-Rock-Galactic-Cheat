#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PlayerSpeaking

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace CG::Params
{

// Function UI_PlayerSpeaking.UI_PlayerSpeaking_C.OnChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct UI_PlayerSpeaking_C_OnChanged__DelegateSignature final
{
public:
	bool                                          InTalking;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PlayerSpeaking_C_OnChanged__DelegateSignature) == 0x000001, "Wrong alignment on UI_PlayerSpeaking_C_OnChanged__DelegateSignature");
static_assert(sizeof(UI_PlayerSpeaking_C_OnChanged__DelegateSignature) == 0x000001, "Wrong size on UI_PlayerSpeaking_C_OnChanged__DelegateSignature");
static_assert(offsetof(UI_PlayerSpeaking_C_OnChanged__DelegateSignature, InTalking) == 0x000000, "Member 'UI_PlayerSpeaking_C_OnChanged__DelegateSignature::InTalking' has a wrong offset!");

// Function UI_PlayerSpeaking.UI_PlayerSpeaking_C.ExecuteUbergraph_UI_PlayerSpeaking
// 0x0048 (0x0048 - 0x0000)
struct UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsTalking;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33B0[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        K2Node_CustomEvent_NewPlayerState;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsTalking)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsTalking)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking) == 0x000008, "Wrong alignment on UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking");
static_assert(sizeof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking) == 0x000048, "Wrong size on UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, EntryPoint) == 0x000000, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, Temp_bool_Variable) == 0x000004, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, Temp_byte_Variable) == 0x000005, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, CallFunc_IsValid_ReturnValue_1) == 0x000007, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, Temp_bool_Variable_1) == 0x000008, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, Temp_byte_Variable_1) == 0x000009, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, Temp_byte_Variable_2) == 0x00000A, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, K2Node_Select_Default) == 0x00000B, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, K2Node_Event_IsDesignTime) == 0x00000C, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, K2Node_CustomEvent_IsTalking) == 0x00000D, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::K2Node_CustomEvent_IsTalking' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, K2Node_Select_Default_1) == 0x000018, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, K2Node_CustomEvent_NewPlayerState) == 0x000020, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::K2Node_CustomEvent_NewPlayerState' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'UI_PlayerSpeaking_C_ExecuteUbergraph_UI_PlayerSpeaking::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function UI_PlayerSpeaking.UI_PlayerSpeaking_C.SetPlayerState
// 0x0008 (0x0008 - 0x0000)
struct UI_PlayerSpeaking_C_SetPlayerState final
{
public:
	class AFSDPlayerState*                        NewPlayerState;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PlayerSpeaking_C_SetPlayerState) == 0x000008, "Wrong alignment on UI_PlayerSpeaking_C_SetPlayerState");
static_assert(sizeof(UI_PlayerSpeaking_C_SetPlayerState) == 0x000008, "Wrong size on UI_PlayerSpeaking_C_SetPlayerState");
static_assert(offsetof(UI_PlayerSpeaking_C_SetPlayerState, NewPlayerState) == 0x000000, "Member 'UI_PlayerSpeaking_C_SetPlayerState::NewPlayerState' has a wrong offset!");

// Function UI_PlayerSpeaking.UI_PlayerSpeaking_C.OnTalkingChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_PlayerSpeaking_C_OnTalkingChanged final
{
public:
	bool                                          IsTalking;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PlayerSpeaking_C_OnTalkingChanged) == 0x000001, "Wrong alignment on UI_PlayerSpeaking_C_OnTalkingChanged");
static_assert(sizeof(UI_PlayerSpeaking_C_OnTalkingChanged) == 0x000001, "Wrong size on UI_PlayerSpeaking_C_OnTalkingChanged");
static_assert(offsetof(UI_PlayerSpeaking_C_OnTalkingChanged, IsTalking) == 0x000000, "Member 'UI_PlayerSpeaking_C_OnTalkingChanged::IsTalking' has a wrong offset!");

// Function UI_PlayerSpeaking.UI_PlayerSpeaking_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_PlayerSpeaking_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PlayerSpeaking_C_PreConstruct) == 0x000001, "Wrong alignment on UI_PlayerSpeaking_C_PreConstruct");
static_assert(sizeof(UI_PlayerSpeaking_C_PreConstruct) == 0x000001, "Wrong size on UI_PlayerSpeaking_C_PreConstruct");
static_assert(offsetof(UI_PlayerSpeaking_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_PlayerSpeaking_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

