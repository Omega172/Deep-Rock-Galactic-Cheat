#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_ThrowCarriable

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace CG::Params
{

// Function HUD_ThrowCarriable.HUD_ThrowCarriable_C.ExecuteUbergraph_HUD_ThrowCarriable
// 0x0030 (0x0030 - 0x0000)
struct HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Progress, float TimeToCancel, bool IsDone)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3350[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Progress;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_timeToCancel;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isDone;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3351[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable) == 0x000004, "Wrong alignment on HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable");
static_assert(sizeof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable) == 0x000030, "Wrong size on HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, EntryPoint) == 0x000000, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, Temp_byte_Variable) == 0x000014, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, Temp_byte_Variable_1) == 0x000015, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, K2Node_CustomEvent_Progress) == 0x000018, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::K2Node_CustomEvent_Progress' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, K2Node_CustomEvent_timeToCancel) == 0x00001C, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::K2Node_CustomEvent_timeToCancel' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, K2Node_CustomEvent_isDone) == 0x000020, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::K2Node_CustomEvent_isDone' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, Temp_bool_Variable) == 0x000021, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000024, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, K2Node_MathExpression_ReturnValue) == 0x000028, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, K2Node_Select_Default) == 0x00002C, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002D, "Member 'HUD_ThrowCarriable_C_ExecuteUbergraph_HUD_ThrowCarriable::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function HUD_ThrowCarriable.HUD_ThrowCarriable_C.OnThrowCarriableProgress_Event
// 0x000C (0x000C - 0x0000)
struct HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToCancel;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDone;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event) == 0x000004, "Wrong alignment on HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event");
static_assert(sizeof(HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event) == 0x00000C, "Wrong size on HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event");
static_assert(offsetof(HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event, Progress) == 0x000000, "Member 'HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event::Progress' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event, TimeToCancel) == 0x000004, "Member 'HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event::TimeToCancel' has a wrong offset!");
static_assert(offsetof(HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event, IsDone) == 0x000008, "Member 'HUD_ThrowCarriable_C_OnThrowCarriableProgress_Event::IsDone' has a wrong offset!");

}

