#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ClaimableRewards_Entry

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.ExecuteUbergraph_UI_ClaimableRewards_Entry
// 0x0098 (0x0098 - 0x0000)
struct UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InStartDelay;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C01[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_2;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C02[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry) == 0x000008, "Wrong alignment on UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry");
static_assert(sizeof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry) == 0x000098, "Wrong size on UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, EntryPoint) == 0x000000, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, K2Node_Event_InStartDelay) == 0x000004, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::K2Node_Event_InStartDelay' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, K2Node_Event_IsDesignTime) == 0x000018, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, CallFunc_PlayAnimation_ReturnValue_2) == 0x000030, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, CallFunc_MenuColors_OutputColor) == 0x000038, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, CallFunc_MenuColors_OutputColor_1) == 0x000048, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, CallFunc_MenuColors_OutputColor_2) == 0x000058, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::CallFunc_MenuColors_OutputColor_2' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000068, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, CallFunc_SpawnSound2D_ReturnValue) == 0x000070, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, K2Node_DynamicCast_AsMaterial_Interface) == 0x000078, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, K2Node_DynamicCast_AsTexture_2D) == 0x000088, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.ReceiveMoveIn
// 0x0004 (0x0004 - 0x0000)
struct UI_ClaimableRewards_Entry_C_ReceiveMoveIn final
{
public:
	float                                         InStartDelay;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ClaimableRewards_Entry_C_ReceiveMoveIn) == 0x000004, "Wrong alignment on UI_ClaimableRewards_Entry_C_ReceiveMoveIn");
static_assert(sizeof(UI_ClaimableRewards_Entry_C_ReceiveMoveIn) == 0x000004, "Wrong size on UI_ClaimableRewards_Entry_C_ReceiveMoveIn");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_ReceiveMoveIn, InStartDelay) == 0x000000, "Member 'UI_ClaimableRewards_Entry_C_ReceiveMoveIn::InStartDelay' has a wrong offset!");

// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_ClaimableRewards_Entry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_ClaimableRewards_Entry_C_PreConstruct) == 0x000001, "Wrong alignment on UI_ClaimableRewards_Entry_C_PreConstruct");
static_assert(sizeof(UI_ClaimableRewards_Entry_C_PreConstruct) == 0x000001, "Wrong size on UI_ClaimableRewards_Entry_C_PreConstruct");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_ClaimableRewards_Entry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.Refresh
// 0x0070 (0x0070 - 0x0000)
struct UI_ClaimableRewards_Entry_C_Refresh final
{
public:
	class FText                                   DefaultButtonText;                                 // 0x0000(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C03[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C04[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAsyncManager*                          CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C05[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0040(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0058(0x0018)()
};
static_assert(alignof(UI_ClaimableRewards_Entry_C_Refresh) == 0x000008, "Wrong alignment on UI_ClaimableRewards_Entry_C_Refresh");
static_assert(sizeof(UI_ClaimableRewards_Entry_C_Refresh) == 0x000070, "Wrong size on UI_ClaimableRewards_Entry_C_Refresh");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_Refresh, DefaultButtonText) == 0x000000, "Member 'UI_ClaimableRewards_Entry_C_Refresh::DefaultButtonText' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_Refresh, Temp_bool_Variable) == 0x000018, "Member 'UI_ClaimableRewards_Entry_C_Refresh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_Refresh, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'UI_ClaimableRewards_Entry_C_Refresh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_Refresh, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'UI_ClaimableRewards_Entry_C_Refresh::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_Refresh, CallFunc_TextIsEmpty_ReturnValue) == 0x000038, "Member 'UI_ClaimableRewards_Entry_C_Refresh::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_Refresh, K2Node_Select_Default) == 0x000040, "Member 'UI_ClaimableRewards_Entry_C_Refresh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ClaimableRewards_Entry_C_Refresh, CallFunc_TextToUpper_ReturnValue) == 0x000058, "Member 'UI_ClaimableRewards_Entry_C_Refresh::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

}

