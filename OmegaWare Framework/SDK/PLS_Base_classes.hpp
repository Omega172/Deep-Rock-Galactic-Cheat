#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PLS_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PLS_Passes_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// BlueprintGeneratedClass PLS_Base.PLS_Base_C
// 0x0040 (0x04F8 - 0x04B8)
class APLS_Base_C : public AProceduralSetup
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              OutlineMaterial;                                   // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class URoomGenerator*>                 Starting_Rooms;                                    // 0x04D0(0x0010)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             CompletedGenerationPass;                           // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMusicLibrary*                          MusicOverride;                                     // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CompletedGenerationPass__DelegateSignature(int32 Pass, EPLS_Passes PLS_Pass);
	void ExecuteUbergraph_PLS_Base(int32 EntryPoint);
	void StartMusicAndAmbient(int32 Music);
	void Generate_CriticalLargePass_Client();
	void Generate_CriticalLargePass();
	void Generate_Pass_6();
	void Generate_Pass_2();
	void OnCarverDataRecieved(EDebrisItemPass Pass);
	void Generate_Pass_0_Client();
	void Generate_Pass_0();
	void CarveTunnels();
	void GenerateLandscapeFromData(int32 Param_Seed, const TArray<struct FRoomNode>& Param_Rooms, const TArray<struct FPathObstacle>& Obstacles);
	void StartGenerationOnClient(class AFSDPlayerController* Client);
	void Generate_Tunnels();
	void CreateGraphSecondPass();
	void AddRoomToInitialState(const struct FRoomNode& RoomNode);
	void OnPLSDataRecieved();
	void BeginLiveGeneration();
	void Generate_Pass_7();
	void Generate_Pass_4();
	void GenerateLandscape();
	void Generate_Pass_5_Clients();
	void Generate_Pass_5_Server();
	void Final_Pass();
	void Generate_Pass_3();
	void Generate_Pass_1();
	void Generate_Graph();
	void CreateSpawn();
	void FinalCommitDone();
	void BaseLayerCommitDone();
	void ReceiveBeginPlay();
	void OnLoaded_C0B2FCB247E1A2F8766E5E93EBF80DF8(TSubclassOf<class UObject> Loaded);
	void OnLoaded_11827D59481E498DEC10999DAE2915BF(TSubclassOf<class UObject> Loaded);
	void GetRandomRoom(TArray<class URoomGenerator*>& Param_Rooms, bool RemoveRoom, class URoomGenerator** Room);
	void CreateCaveGraph();
	void SaveInitialState();
	void PlayMusicAndAmbient(int32 MusicIndex);
	void CallGenerationComplete(int32 Pass, EPLS_Passes PLS_Pass);
	bool HasSelectedCharacter();
	void SpawnCriticalItems(ECriticalItemPass Pass);
	class UProceduralController* GetProceduralController();
	void EnsureSafelandingsite();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PLS_Base_C">();
	}
	static class APLS_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APLS_Base_C>();
	}
};
static_assert(alignof(APLS_Base_C) == 0x000008, "Wrong alignment on APLS_Base_C");
static_assert(sizeof(APLS_Base_C) == 0x0004F8, "Wrong size on APLS_Base_C");
static_assert(offsetof(APLS_Base_C, UberGraphFrame) == 0x0004B8, "Member 'APLS_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APLS_Base_C, DefaultSceneRoot) == 0x0004C0, "Member 'APLS_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APLS_Base_C, OutlineMaterial) == 0x0004C8, "Member 'APLS_Base_C::OutlineMaterial' has a wrong offset!");
static_assert(offsetof(APLS_Base_C, Starting_Rooms) == 0x0004D0, "Member 'APLS_Base_C::Starting_Rooms' has a wrong offset!");
static_assert(offsetof(APLS_Base_C, CompletedGenerationPass) == 0x0004E0, "Member 'APLS_Base_C::CompletedGenerationPass' has a wrong offset!");
static_assert(offsetof(APLS_Base_C, MusicOverride) == 0x0004F0, "Member 'APLS_Base_C::MusicOverride' has a wrong offset!");

}

