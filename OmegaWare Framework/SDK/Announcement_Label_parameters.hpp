#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Announcement_Label

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function Announcement_Label.Announcement_Label_C.ExecuteUbergraph_Announcement_Label
// 0x0060 (0x0060 - 0x0000)
struct Announcement_Label_C_ExecuteUbergraph_Announcement_Label final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341C[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0038(0x0028)()
};
static_assert(alignof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label) == 0x000008, "Wrong alignment on Announcement_Label_C_ExecuteUbergraph_Announcement_Label");
static_assert(sizeof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label) == 0x000060, "Wrong size on Announcement_Label_C_ExecuteUbergraph_Announcement_Label");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, EntryPoint) == 0x000000, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::EntryPoint' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, Temp_bool_Variable) == 0x000004, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, Temp_byte_Variable) == 0x000005, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, Temp_byte_Variable_1) == 0x000006, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, K2Node_Event_IsDesignTime) == 0x000007, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, K2Node_Select_Default) == 0x000021, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, CallFunc_MenuColors_OutputColor) == 0x000024, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Announcement_Label_C_ExecuteUbergraph_Announcement_Label, K2Node_MakeStruct_SlateColor) == 0x000038, "Member 'Announcement_Label_C_ExecuteUbergraph_Announcement_Label::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function Announcement_Label.Announcement_Label_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Announcement_Label_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Announcement_Label_C_PreConstruct) == 0x000001, "Wrong alignment on Announcement_Label_C_PreConstruct");
static_assert(sizeof(Announcement_Label_C_PreConstruct) == 0x000001, "Wrong size on Announcement_Label_C_PreConstruct");
static_assert(offsetof(Announcement_Label_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Announcement_Label_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

