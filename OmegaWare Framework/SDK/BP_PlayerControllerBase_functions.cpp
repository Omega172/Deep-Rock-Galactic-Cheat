#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerControllerBase

#include "Basic.hpp"

#include "BP_PlayerControllerBase_classes.hpp"
#include "BP_PlayerControllerBase_parameters.hpp"


namespace CG
{

// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.ReplyToInviteRequest__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Reply                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerControllerBase_C::ReplyToInviteRequest__DelegateSignature(int32 Reply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "ReplyToInviteRequest__DelegateSignature");

	Params::BP_PlayerControllerBase_C_ReplyToInviteRequest__DelegateSignature Parms{};

	Parms.Reply = Reply;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.ExecuteUbergraph_BP_PlayerControllerBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerControllerBase_C::ExecuteUbergraph_BP_PlayerControllerBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "ExecuteUbergraph_BP_PlayerControllerBase");

	Params::BP_PlayerControllerBase_C_ExecuteUbergraph_BP_PlayerControllerBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.Event On Join Request Reply
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Reply                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerControllerBase_C::Event_On_Join_Request_Reply(int32 Reply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "Event On Join Request Reply");

	Params::BP_PlayerControllerBase_C_Event_On_Join_Request_Reply Parms{};

	Parms.Reply = Reply;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.OnJoinRequest
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDiscordUserDataSDK              JoinRequest                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_PlayerControllerBase_C::OnJoinRequest(const struct FDiscordUserDataSDK& JoinRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "OnJoinRequest");

	Params::BP_PlayerControllerBase_C_OnJoinRequest Parms{};

	Parms.JoinRequest = std::move(JoinRequest);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.SpawnHUDAsync
// (Event, Public, BlueprintEvent)

void ABP_PlayerControllerBase_C::SpawnHUDAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "SpawnHUDAsync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::CustomEvent_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "CustomEvent_1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.Reset Player Location
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::Reset_Player_Location()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "Reset Player Location");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.ChangeUserReply
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Yes                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerControllerBase_C::ChangeUserReply(bool Yes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "ChangeUserReply");

	Params::BP_PlayerControllerBase_C_ChangeUserReply Parms{};

	Parms.Yes = Yes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.ChangeUser
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::ChangeUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "ChangeUser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.Setup Change User
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::Setup_Change_User()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "Setup Change User");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.AdjustCamera
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::AdjustCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "AdjustCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.UpdateAnalytics
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::UpdateAnalytics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "UpdateAnalytics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.OnCharacterCanRetire_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class APlayerCharacter>     CharacterClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_PlayerControllerBase_C::OnCharacterCanRetire_Event(TSubclassOf<class APlayerCharacter> CharacterClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "OnCharacterCanRetire_Event");

	Params::BP_PlayerControllerBase_C_OnCharacterCanRetire_Event Parms{};

	Parms.CharacterClass = CharacterClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.Setup Retirement Notification
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::Setup_Retirement_Notification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "Setup Retirement Notification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.Setup Invite Handling
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::Setup_Invite_Handling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "Setup Invite Handling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.Return Client Camera
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::Return_Client_Camera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "Return Client Camera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.SetPhotographyMode
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerControllerBase_C::SetPhotographyMode(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "SetPhotographyMode");

	Params::BP_PlayerControllerBase_C_SetPhotographyMode Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerControllerBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.InpActEvt_Ctrl_O_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_PlayerControllerBase_C::InpActEvt_Ctrl_O_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "InpActEvt_Ctrl_O_K2Node_InputKeyEvent_0");

	Params::BP_PlayerControllerBase_C_InpActEvt_Ctrl_O_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.InpActEvt_IgnoreInvite_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_PlayerControllerBase_C::InpActEvt_IgnoreInvite_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "InpActEvt_IgnoreInvite_K2Node_InputActionEvent_0");

	Params::BP_PlayerControllerBase_C_InpActEvt_IgnoreInvite_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.InpActEvt_RejectInvite_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_PlayerControllerBase_C::InpActEvt_RejectInvite_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "InpActEvt_RejectInvite_K2Node_InputActionEvent_1");

	Params::BP_PlayerControllerBase_C_InpActEvt_RejectInvite_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.InpActEvt_AcceptInvite_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_PlayerControllerBase_C::InpActEvt_AcceptInvite_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "InpActEvt_AcceptInvite_K2Node_InputActionEvent_2");

	Params::BP_PlayerControllerBase_C_InpActEvt_AcceptInvite_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.CreateInviteRequestIfNotCreated
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::CreateInviteRequestIfNotCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "CreateInviteRequestIfNotCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.StopAnsel
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::StopAnsel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "StopAnsel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.StartAnsel
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::StartAnsel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "StartAnsel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.ReStartAnsel
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::ReStartAnsel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "ReStartAnsel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.GetUnlockedItems
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemCategory                           Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Unlocked_Items                                         (Parm, OutParm)

void ABP_PlayerControllerBase_C::GetUnlockedItems(EItemCategory Category, TArray<class UClass*>* Unlocked_Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "GetUnlockedItems");

	Params::BP_PlayerControllerBase_C_GetUnlockedItems Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);

	if (Unlocked_Items != nullptr)
		*Unlocked_Items = std::move(Parms.Unlocked_Items);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.SetUnlockAnalytics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Primary                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>                   Secundary                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_PlayerControllerBase_C::SetUnlockAnalytics(TArray<class UClass*>& Primary, TArray<class UClass*>& Secundary)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "SetUnlockAnalytics");

	Params::BP_PlayerControllerBase_C_SetUnlockAnalytics Parms{};

	Parms.Primary = std::move(Primary);
	Parms.Secundary = std::move(Secundary);

	UObject::ProcessEvent(Func, &Parms);

	Primary = std::move(Parms.Primary);
	Secundary = std::move(Parms.Secundary);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.SetClassAnalytics
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerControllerBase_C::SetClassAnalytics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "SetClassAnalytics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.ItemFilter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ItemClass                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerControllerBase_C::ItemFilter(class UClass* ItemClass, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "ItemFilter");

	Params::BP_PlayerControllerBase_C_ItemFilter Parms{};

	Parms.ItemClass = ItemClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.SetHasShownCharacterSelector
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasShown                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerControllerBase_C::SetHasShownCharacterSelector(bool HasShown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "SetHasShownCharacterSelector");

	Params::BP_PlayerControllerBase_C_SetHasShownCharacterSelector Parms{};

	Parms.HasShown = HasShown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.SetIsEscapeMenuEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEscapeMenuEnabled                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerControllerBase_C::SetIsEscapeMenuEnabled(bool IsEscapeMenuEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "SetIsEscapeMenuEnabled");

	Params::BP_PlayerControllerBase_C_SetIsEscapeMenuEnabled Parms{};

	Parms.IsEscapeMenuEnabled = IsEscapeMenuEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerControllerBase.BP_PlayerControllerBase_C.GetEditorCharacterClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPlayerCharacterID*               Character_Class                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerControllerBase_C::GetEditorCharacterClass(class UPlayerCharacterID** Character_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerControllerBase_C", "GetEditorCharacterClass");

	Params::BP_PlayerControllerBase_C_GetEditorCharacterClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Character_Class != nullptr)
		*Character_Class = Parms.Character_Class;
}

}

