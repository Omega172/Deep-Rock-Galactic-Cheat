#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_CrosshairManager

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "UMG_structs.hpp"


namespace CG::Params
{

// Function HUD_CrosshairManager.HUD_CrosshairManager_C.ExecuteUbergraph_HUD_CrosshairManager
// 0x00D0 (0x00D0 - 0x0000)
struct HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Visible)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UResourceBank* ResourceBank)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UResourceBank* ResourceBank)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(ECharacterCameraMode NewCameraMode, ECharacterCameraMode OldCameraMode)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(ECharacterState NewState)>     K2Node_CreateDelegate_OutputDelegate_4;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_Visible;                        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3678[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UResourceBank*                          K2Node_CustomEvent_ResourceBank_1;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UResourceBank*                          K2Node_CustomEvent_ResourceBank;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterCameraMode                          K2Node_CustomEvent_NewCameraMode;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterCameraMode                          K2Node_CustomEvent_OldCameraMode;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3679[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterUseComponent*                 CallFunc_GetUseComponent_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterState                               K2Node_CustomEvent_newState;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_367A[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367B[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AItem* Item)>            K2Node_CreateDelegate_OutputDelegate_6;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_367C[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  CallFunc_GetEquippedItem_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager) == 0x000008, "Wrong alignment on HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager");
static_assert(sizeof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager) == 0x0000D0, "Wrong size on HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, EntryPoint) == 0x000000, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x000054, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CustomEvent_Visible) == 0x000064, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CustomEvent_Visible' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CustomEvent_ResourceBank_1) == 0x000068, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CustomEvent_ResourceBank_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CustomEvent_ResourceBank) == 0x000070, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CustomEvent_ResourceBank' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CustomEvent_NewCameraMode) == 0x000078, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CustomEvent_NewCameraMode' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CustomEvent_OldCameraMode) == 0x000079, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CustomEvent_OldCameraMode' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, CallFunc_GetUseComponent_ReturnValue) == 0x000080, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::CallFunc_GetUseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CustomEvent_newState) == 0x000088, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CustomEvent_newState' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000090, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_DynamicCast_AsPlayer_Character) == 0x000098, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000A4, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, CallFunc_GetEquippedItem_ReturnValue) == 0x0000B8, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::CallFunc_GetEquippedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000C0, "Member 'HUD_CrosshairManager_C_ExecuteUbergraph_HUD_CrosshairManager::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");

// Function HUD_CrosshairManager.HUD_CrosshairManager_C.OnCharacterStateChanged
// 0x0001 (0x0001 - 0x0000)
struct HUD_CrosshairManager_C_OnCharacterStateChanged final
{
public:
	ECharacterState                               NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_CrosshairManager_C_OnCharacterStateChanged) == 0x000001, "Wrong alignment on HUD_CrosshairManager_C_OnCharacterStateChanged");
static_assert(sizeof(HUD_CrosshairManager_C_OnCharacterStateChanged) == 0x000001, "Wrong size on HUD_CrosshairManager_C_OnCharacterStateChanged");
static_assert(offsetof(HUD_CrosshairManager_C_OnCharacterStateChanged, NewState) == 0x000000, "Member 'HUD_CrosshairManager_C_OnCharacterStateChanged::NewState' has a wrong offset!");

// Function HUD_CrosshairManager.HUD_CrosshairManager_C.OnCameraModeChanged_Event
// 0x0002 (0x0002 - 0x0000)
struct HUD_CrosshairManager_C_OnCameraModeChanged_Event final
{
public:
	ECharacterCameraMode                          NewCameraMode;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterCameraMode                          OldCameraMode;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_CrosshairManager_C_OnCameraModeChanged_Event) == 0x000001, "Wrong alignment on HUD_CrosshairManager_C_OnCameraModeChanged_Event");
static_assert(sizeof(HUD_CrosshairManager_C_OnCameraModeChanged_Event) == 0x000002, "Wrong size on HUD_CrosshairManager_C_OnCameraModeChanged_Event");
static_assert(offsetof(HUD_CrosshairManager_C_OnCameraModeChanged_Event, NewCameraMode) == 0x000000, "Member 'HUD_CrosshairManager_C_OnCameraModeChanged_Event::NewCameraMode' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_OnCameraModeChanged_Event, OldCameraMode) == 0x000001, "Member 'HUD_CrosshairManager_C_OnCameraModeChanged_Event::OldCameraMode' has a wrong offset!");

// Function HUD_CrosshairManager.HUD_CrosshairManager_C.OnDepositingBegin_Event
// 0x0008 (0x0008 - 0x0000)
struct HUD_CrosshairManager_C_OnDepositingBegin_Event final
{
public:
	class UResourceBank*                          ResourceBank;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_CrosshairManager_C_OnDepositingBegin_Event) == 0x000008, "Wrong alignment on HUD_CrosshairManager_C_OnDepositingBegin_Event");
static_assert(sizeof(HUD_CrosshairManager_C_OnDepositingBegin_Event) == 0x000008, "Wrong size on HUD_CrosshairManager_C_OnDepositingBegin_Event");
static_assert(offsetof(HUD_CrosshairManager_C_OnDepositingBegin_Event, ResourceBank) == 0x000000, "Member 'HUD_CrosshairManager_C_OnDepositingBegin_Event::ResourceBank' has a wrong offset!");

// Function HUD_CrosshairManager.HUD_CrosshairManager_C.OnDepositingEnd_Event
// 0x0008 (0x0008 - 0x0000)
struct HUD_CrosshairManager_C_OnDepositingEnd_Event final
{
public:
	class UResourceBank*                          ResourceBank;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_CrosshairManager_C_OnDepositingEnd_Event) == 0x000008, "Wrong alignment on HUD_CrosshairManager_C_OnDepositingEnd_Event");
static_assert(sizeof(HUD_CrosshairManager_C_OnDepositingEnd_Event) == 0x000008, "Wrong size on HUD_CrosshairManager_C_OnDepositingEnd_Event");
static_assert(offsetof(HUD_CrosshairManager_C_OnDepositingEnd_Event, ResourceBank) == 0x000000, "Member 'HUD_CrosshairManager_C_OnDepositingEnd_Event::ResourceBank' has a wrong offset!");

// Function HUD_CrosshairManager.HUD_CrosshairManager_C.OnToggleMapTool
// 0x0001 (0x0001 - 0x0000)
struct HUD_CrosshairManager_C_OnToggleMapTool final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_CrosshairManager_C_OnToggleMapTool) == 0x000001, "Wrong alignment on HUD_CrosshairManager_C_OnToggleMapTool");
static_assert(sizeof(HUD_CrosshairManager_C_OnToggleMapTool) == 0x000001, "Wrong size on HUD_CrosshairManager_C_OnToggleMapTool");
static_assert(offsetof(HUD_CrosshairManager_C_OnToggleMapTool, Visible) == 0x000000, "Member 'HUD_CrosshairManager_C_OnToggleMapTool::Visible' has a wrong offset!");

// Function HUD_CrosshairManager.HUD_CrosshairManager_C.SetCrosshair
// 0x0068 (0x0068 - 0x0000)
struct HUD_CrosshairManager_C_SetCrosshair final
{
public:
	class AItem*                                  InEquippedItem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            NewCrosshair;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCrosshairAggregator*                   Aggregator;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367D[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetOrCreateCrosshair_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367E[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetSwitcherSlot*                    K2Node_DynamicCast_AsWidget_Switcher_Slot;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasChild_ReturnValue;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367F[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCrosshairAggregator*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_CrosshairManager_C_SetCrosshair) == 0x000008, "Wrong alignment on HUD_CrosshairManager_C_SetCrosshair");
static_assert(sizeof(HUD_CrosshairManager_C_SetCrosshair) == 0x000068, "Wrong size on HUD_CrosshairManager_C_SetCrosshair");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, InEquippedItem) == 0x000000, "Member 'HUD_CrosshairManager_C_SetCrosshair::InEquippedItem' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, NewCrosshair) == 0x000008, "Member 'HUD_CrosshairManager_C_SetCrosshair::NewCrosshair' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, Aggregator) == 0x000010, "Member 'HUD_CrosshairManager_C_SetCrosshair::Aggregator' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_GetOrCreateCrosshair_ReturnValue) == 0x000020, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_GetOrCreateCrosshair_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_IsValid_ReturnValue_3) == 0x000029, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_PlayAnimationForward_ReturnValue) == 0x000030, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, K2Node_DynamicCast_AsWidget_Switcher_Slot) == 0x000040, "Member 'HUD_CrosshairManager_C_SetCrosshair::K2Node_DynamicCast_AsWidget_Switcher_Slot' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'HUD_CrosshairManager_C_SetCrosshair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_HasChild_ReturnValue) == 0x000049, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_HasChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_IsValid_ReturnValue_4) == 0x00004B, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_Map_Find_Value) == 0x000058, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_SetCrosshair, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'HUD_CrosshairManager_C_SetCrosshair::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function HUD_CrosshairManager.HUD_CrosshairManager_C.UpdateVisibility
// 0x0018 (0x0018 - 0x0000)
struct HUD_CrosshairManager_C_UpdateVisibility final
{
public:
	class UCharacterUseComponent*                 CallFunc_GetUseComponent_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTerrainScannerEquipped_ReturnValue;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsDepositing_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsParalyzed_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDown_ReturnValue;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_CrosshairManager_C_UpdateVisibility) == 0x000008, "Wrong alignment on HUD_CrosshairManager_C_UpdateVisibility");
static_assert(sizeof(HUD_CrosshairManager_C_UpdateVisibility) == 0x000018, "Wrong size on HUD_CrosshairManager_C_UpdateVisibility");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_GetUseComponent_ReturnValue) == 0x000000, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_GetUseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_IsTerrainScannerEquipped_ReturnValue) == 0x000008, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_IsTerrainScannerEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_GetIsDepositing_ReturnValue) == 0x000009, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_GetIsDepositing_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_IsParalyzed_ReturnValue) == 0x00000A, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_IsParalyzed_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_IsDown_ReturnValue) == 0x00000C, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_IsDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_BooleanOR_ReturnValue_1) == 0x00000E, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_BooleanOR_ReturnValue_2) == 0x00000F, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_BooleanOR_ReturnValue_3) == 0x000010, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_SelectVisibility_IsVisible) == 0x000011, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_SelectVisibility_VisibilityChanged) == 0x000012, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UpdateVisibility, CallFunc_SelectVisibility_New_Visibility) == 0x000013, "Member 'HUD_CrosshairManager_C_UpdateVisibility::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function HUD_CrosshairManager.HUD_CrosshairManager_C.UnregisterEvents
// 0x0088 (0x0088 - 0x0000)
struct HUD_CrosshairManager_C_UnregisterEvents final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3680[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(ECharacterCameraMode NewCameraMode, ECharacterCameraMode OldCameraMode)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(ECharacterState NewState)>     K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool Visible)>                 K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UResourceBank* ResourceBank)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UResourceBank* ResourceBank)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AItem* Item)>            K2Node_CreateDelegate_OutputDelegate_6;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3681[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterUseComponent*                 CallFunc_GetUseComponent_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_CrosshairManager_C_UnregisterEvents) == 0x000008, "Wrong alignment on HUD_CrosshairManager_C_UnregisterEvents");
static_assert(sizeof(HUD_CrosshairManager_C_UnregisterEvents) == 0x000088, "Wrong size on HUD_CrosshairManager_C_UnregisterEvents");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'HUD_CrosshairManager_C_UnregisterEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'HUD_CrosshairManager_C_UnregisterEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'HUD_CrosshairManager_C_UnregisterEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'HUD_CrosshairManager_C_UnregisterEvents::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'HUD_CrosshairManager_C_UnregisterEvents::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'HUD_CrosshairManager_C_UnregisterEvents::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, K2Node_CreateDelegate_OutputDelegate_5) == 0x000054, "Member 'HUD_CrosshairManager_C_UnregisterEvents::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, K2Node_CreateDelegate_OutputDelegate_6) == 0x000064, "Member 'HUD_CrosshairManager_C_UnregisterEvents::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, CallFunc_GetUseComponent_ReturnValue) == 0x000078, "Member 'HUD_CrosshairManager_C_UnregisterEvents::CallFunc_GetUseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_CrosshairManager_C_UnregisterEvents, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'HUD_CrosshairManager_C_UnregisterEvents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

