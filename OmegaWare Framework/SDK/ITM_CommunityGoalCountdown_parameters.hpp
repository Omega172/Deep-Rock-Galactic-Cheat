#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_CommunityGoalCountdown

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function ITM_CommunityGoalCountdown.ITM_CommunityGoalCountdown_C.ExecuteUbergraph_ITM_CommunityGoalCountdown
// 0x00B8 (0x00B8 - 0x0000)
struct ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E02[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Seconds;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E03[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMinutes_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E04[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	int32                                         CallFunc_GetHours_ReturnValue;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E05[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0080(0x0018)()
	int32                                         CallFunc_GetDays_ReturnValue;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E06[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x00A0(0x0018)()
};
static_assert(alignof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown) == 0x000008, "Wrong alignment on ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown");
static_assert(sizeof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown) == 0x0000B8, "Wrong size on ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, EntryPoint) == 0x000000, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, K2Node_Event_MyGeometry) == 0x000008, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, K2Node_Event_InDeltaTime) == 0x000040, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, K2Node_CustomEvent_Seconds) == 0x000044, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::K2Node_CustomEvent_Seconds' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, CallFunc_FTrunc_ReturnValue) == 0x000048, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, CallFunc_MakeTimespan_ReturnValue) == 0x000050, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, CallFunc_GetMinutes_ReturnValue) == 0x000058, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::CallFunc_GetMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, CallFunc_GetHours_ReturnValue) == 0x000078, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::CallFunc_GetHours_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000080, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, CallFunc_GetDays_ReturnValue) == 0x000098, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::CallFunc_GetDays_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0000A0, "Member 'ITM_CommunityGoalCountdown_C_ExecuteUbergraph_ITM_CommunityGoalCountdown::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");

// Function ITM_CommunityGoalCountdown.ITM_CommunityGoalCountdown_C.SetTime
// 0x0004 (0x0004 - 0x0000)
struct ITM_CommunityGoalCountdown_C_SetTime final
{
public:
	float                                         Seconds;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_CommunityGoalCountdown_C_SetTime) == 0x000004, "Wrong alignment on ITM_CommunityGoalCountdown_C_SetTime");
static_assert(sizeof(ITM_CommunityGoalCountdown_C_SetTime) == 0x000004, "Wrong size on ITM_CommunityGoalCountdown_C_SetTime");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_SetTime, Seconds) == 0x000000, "Member 'ITM_CommunityGoalCountdown_C_SetTime::Seconds' has a wrong offset!");

// Function ITM_CommunityGoalCountdown.ITM_CommunityGoalCountdown_C.Tick
// 0x003C (0x003C - 0x0000)
struct ITM_CommunityGoalCountdown_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_CommunityGoalCountdown_C_Tick) == 0x000004, "Wrong alignment on ITM_CommunityGoalCountdown_C_Tick");
static_assert(sizeof(ITM_CommunityGoalCountdown_C_Tick) == 0x00003C, "Wrong size on ITM_CommunityGoalCountdown_C_Tick");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_Tick, MyGeometry) == 0x000000, "Member 'ITM_CommunityGoalCountdown_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_Tick, InDeltaTime) == 0x000038, "Member 'ITM_CommunityGoalCountdown_C_Tick::InDeltaTime' has a wrong offset!");

// Function ITM_CommunityGoalCountdown.ITM_CommunityGoalCountdown_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_CommunityGoalCountdown_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_CommunityGoalCountdown_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_CommunityGoalCountdown_C_PreConstruct");
static_assert(sizeof(ITM_CommunityGoalCountdown_C_PreConstruct) == 0x000001, "Wrong size on ITM_CommunityGoalCountdown_C_PreConstruct");
static_assert(offsetof(ITM_CommunityGoalCountdown_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_CommunityGoalCountdown_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

