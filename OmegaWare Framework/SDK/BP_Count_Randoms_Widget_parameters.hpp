#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Count_Randoms_Widget

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace CG::Params
{

// Function BP_Count_Randoms_Widget.BP_Count_Randoms_Widget_C.ExecuteUbergraph_BP_Count_Randoms_Widget
// 0x0004 (0x0004 - 0x0000)
struct BP_Count_Randoms_Widget_C_ExecuteUbergraph_BP_Count_Randoms_Widget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Count_Randoms_Widget_C_ExecuteUbergraph_BP_Count_Randoms_Widget) == 0x000004, "Wrong alignment on BP_Count_Randoms_Widget_C_ExecuteUbergraph_BP_Count_Randoms_Widget");
static_assert(sizeof(BP_Count_Randoms_Widget_C_ExecuteUbergraph_BP_Count_Randoms_Widget) == 0x000004, "Wrong size on BP_Count_Randoms_Widget_C_ExecuteUbergraph_BP_Count_Randoms_Widget");
static_assert(offsetof(BP_Count_Randoms_Widget_C_ExecuteUbergraph_BP_Count_Randoms_Widget, EntryPoint) == 0x000000, "Member 'BP_Count_Randoms_Widget_C_ExecuteUbergraph_BP_Count_Randoms_Widget::EntryPoint' has a wrong offset!");

// Function BP_Count_Randoms_Widget.BP_Count_Randoms_Widget_C.SetProgress
// 0x0004 (0x0004 - 0x0000)
struct BP_Count_Randoms_Widget_C_SetProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Count_Randoms_Widget_C_SetProgress) == 0x000004, "Wrong alignment on BP_Count_Randoms_Widget_C_SetProgress");
static_assert(sizeof(BP_Count_Randoms_Widget_C_SetProgress) == 0x000004, "Wrong size on BP_Count_Randoms_Widget_C_SetProgress");
static_assert(offsetof(BP_Count_Randoms_Widget_C_SetProgress, Progress) == 0x000000, "Member 'BP_Count_Randoms_Widget_C_SetProgress::Progress' has a wrong offset!");

// Function BP_Count_Randoms_Widget.BP_Count_Randoms_Widget_C.UpdateDepthText
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Count_Randoms_Widget_C_UpdateDepthText final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3293[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3294[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
};
static_assert(alignof(BP_Count_Randoms_Widget_C_UpdateDepthText) == 0x000008, "Wrong alignment on BP_Count_Randoms_Widget_C_UpdateDepthText");
static_assert(sizeof(BP_Count_Randoms_Widget_C_UpdateDepthText) == 0x0000E8, "Wrong size on BP_Count_Randoms_Widget_C_UpdateDepthText");
static_assert(offsetof(BP_Count_Randoms_Widget_C_UpdateDepthText, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'BP_Count_Randoms_Widget_C_UpdateDepthText::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_Widget_C_UpdateDepthText, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'BP_Count_Randoms_Widget_C_UpdateDepthText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_Widget_C_UpdateDepthText, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_Count_Randoms_Widget_C_UpdateDepthText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_Widget_C_UpdateDepthText, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_Count_Randoms_Widget_C_UpdateDepthText::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_Widget_C_UpdateDepthText, CallFunc_Conv_FloatToText_ReturnValue) == 0x000068, "Member 'BP_Count_Randoms_Widget_C_UpdateDepthText::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_Widget_C_UpdateDepthText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_Count_Randoms_Widget_C_UpdateDepthText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_Widget_C_UpdateDepthText, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_Count_Randoms_Widget_C_UpdateDepthText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Count_Randoms_Widget_C_UpdateDepthText, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'BP_Count_Randoms_Widget_C_UpdateDepthText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

