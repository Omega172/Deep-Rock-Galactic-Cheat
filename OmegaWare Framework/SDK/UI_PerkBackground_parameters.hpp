#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_PerkBackground

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function UI_PerkBackground.UI_PerkBackground_C.ExecuteUbergraph_UI_PerkBackground
// 0x0008 (0x0008 - 0x0000)
struct UI_PerkBackground_C_ExecuteUbergraph_UI_PerkBackground final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PerkBackground_C_ExecuteUbergraph_UI_PerkBackground) == 0x000004, "Wrong alignment on UI_PerkBackground_C_ExecuteUbergraph_UI_PerkBackground");
static_assert(sizeof(UI_PerkBackground_C_ExecuteUbergraph_UI_PerkBackground) == 0x000008, "Wrong size on UI_PerkBackground_C_ExecuteUbergraph_UI_PerkBackground");
static_assert(offsetof(UI_PerkBackground_C_ExecuteUbergraph_UI_PerkBackground, EntryPoint) == 0x000000, "Member 'UI_PerkBackground_C_ExecuteUbergraph_UI_PerkBackground::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_ExecuteUbergraph_UI_PerkBackground, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_PerkBackground_C_ExecuteUbergraph_UI_PerkBackground::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_PerkBackground.UI_PerkBackground_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_PerkBackground_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_PerkBackground_C_PreConstruct) == 0x000001, "Wrong alignment on UI_PerkBackground_C_PreConstruct");
static_assert(sizeof(UI_PerkBackground_C_PreConstruct) == 0x000001, "Wrong size on UI_PerkBackground_C_PreConstruct");
static_assert(offsetof(UI_PerkBackground_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_PerkBackground_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_PerkBackground.UI_PerkBackground_C.SetDimensions
// 0x0004 (0x0004 - 0x0000)
struct UI_PerkBackground_C_SetDimensions final
{
public:
	float                                         InDimensions;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PerkBackground_C_SetDimensions) == 0x000004, "Wrong alignment on UI_PerkBackground_C_SetDimensions");
static_assert(sizeof(UI_PerkBackground_C_SetDimensions) == 0x000004, "Wrong size on UI_PerkBackground_C_SetDimensions");
static_assert(offsetof(UI_PerkBackground_C_SetDimensions, InDimensions) == 0x000000, "Member 'UI_PerkBackground_C_SetDimensions::InDimensions' has a wrong offset!");

// Function UI_PerkBackground.UI_PerkBackground_C.SetColors
// 0x0020 (0x0020 - 0x0000)
struct UI_PerkBackground_C_SetColors final
{
public:
	struct FLinearColor                           InFillColor;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InBorderColor;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PerkBackground_C_SetColors) == 0x000004, "Wrong alignment on UI_PerkBackground_C_SetColors");
static_assert(sizeof(UI_PerkBackground_C_SetColors) == 0x000020, "Wrong size on UI_PerkBackground_C_SetColors");
static_assert(offsetof(UI_PerkBackground_C_SetColors, InFillColor) == 0x000000, "Member 'UI_PerkBackground_C_SetColors::InFillColor' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetColors, InBorderColor) == 0x000010, "Member 'UI_PerkBackground_C_SetColors::InBorderColor' has a wrong offset!");

// Function UI_PerkBackground.UI_PerkBackground_C.SetPerkType
// 0x0070 (0x0070 - 0x0000)
struct UI_PerkBackground_C_SetPerkType final
{
public:
	EPerkUsageType                                InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkTierState                                InState;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkUsageType                                Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E25[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkUsageType                                Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E26[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_PerkColorByState_OutBackground;           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_PerkColorByState_OutBorder;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_PerkColorByState_OutIcon;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PerkBackground_C_SetPerkType) == 0x000008, "Wrong alignment on UI_PerkBackground_C_SetPerkType");
static_assert(sizeof(UI_PerkBackground_C_SetPerkType) == 0x000070, "Wrong size on UI_PerkBackground_C_SetPerkType");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, InType) == 0x000000, "Member 'UI_PerkBackground_C_SetPerkType::InType' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, InState) == 0x000001, "Member 'UI_PerkBackground_C_SetPerkType::InState' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, Temp_byte_Variable) == 0x000002, "Member 'UI_PerkBackground_C_SetPerkType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, Temp_object_Variable) == 0x000008, "Member 'UI_PerkBackground_C_SetPerkType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, Temp_object_Variable_1) == 0x000010, "Member 'UI_PerkBackground_C_SetPerkType::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, Temp_byte_Variable_1) == 0x000018, "Member 'UI_PerkBackground_C_SetPerkType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, Temp_object_Variable_2) == 0x000020, "Member 'UI_PerkBackground_C_SetPerkType::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, Temp_object_Variable_3) == 0x000028, "Member 'UI_PerkBackground_C_SetPerkType::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, CallFunc_PerkColorByState_OutBackground) == 0x000030, "Member 'UI_PerkBackground_C_SetPerkType::CallFunc_PerkColorByState_OutBackground' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, CallFunc_PerkColorByState_OutBorder) == 0x000040, "Member 'UI_PerkBackground_C_SetPerkType::CallFunc_PerkColorByState_OutBorder' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, CallFunc_PerkColorByState_OutIcon) == 0x000050, "Member 'UI_PerkBackground_C_SetPerkType::CallFunc_PerkColorByState_OutIcon' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, K2Node_Select_Default) == 0x000060, "Member 'UI_PerkBackground_C_SetPerkType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_SetPerkType, K2Node_Select_Default_1) == 0x000068, "Member 'UI_PerkBackground_C_SetPerkType::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_PerkBackground.UI_PerkBackground_C.FromPerk
// 0x0010 (0x0010 - 0x0000)
struct UI_PerkBackground_C_FromPerk final
{
public:
	class UPerkAsset*                             InPerk;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerkTierState                                InState;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPerkUsageType                                CallFunc_GetUsageType_ReturnValue;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_PerkBackground_C_FromPerk) == 0x000008, "Wrong alignment on UI_PerkBackground_C_FromPerk");
static_assert(sizeof(UI_PerkBackground_C_FromPerk) == 0x000010, "Wrong size on UI_PerkBackground_C_FromPerk");
static_assert(offsetof(UI_PerkBackground_C_FromPerk, InPerk) == 0x000000, "Member 'UI_PerkBackground_C_FromPerk::InPerk' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_FromPerk, InState) == 0x000008, "Member 'UI_PerkBackground_C_FromPerk::InState' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_FromPerk, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'UI_PerkBackground_C_FromPerk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_PerkBackground_C_FromPerk, CallFunc_GetUsageType_ReturnValue) == 0x00000A, "Member 'UI_PerkBackground_C_FromPerk::CallFunc_GetUsageType_ReturnValue' has a wrong offset!");

}

