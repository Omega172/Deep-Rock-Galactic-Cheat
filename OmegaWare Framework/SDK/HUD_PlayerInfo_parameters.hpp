#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_PlayerInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FSD_structs.hpp"


namespace CG::Params
{

// Function HUD_PlayerInfo.HUD_PlayerInfo_C.ExecuteUbergraph_HUD_PlayerInfo
// 0x0150 (0x0150 - 0x0000)
struct HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECharacterState NewState)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float Health)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float AmmoStatus01, float HealthStatus01)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UUsableComponentBase* Component)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DA[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DB[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float Health)>                 K2Node_CreateDelegate_OutputDelegate_9;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DC[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthPct_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterState                               K2Node_CustomEvent_newState;                       // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_health;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHudGroupVisible_ReturnValue;            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHudGroupVisible_ReturnValue_1;          // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DD[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUDVisibilityGroup*                    K2Node_ComponentBoundEvent_Group_1;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsVisible_1;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DE[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUDVisibilityGroup*                    K2Node_ComponentBoundEvent_Group;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsVisible;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35DF[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_ammoStatus01;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_healthStatus01;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E0[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetPlayerState_ReturnValue;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetPlayerState_ReturnValue_1;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSupplyAmmoStatus_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E1[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUsableComponentBase*                   K2Node_CustomEvent_component;                      // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARessuplyPod*                           K2Node_DynamicCast_AsRessuply_Pod;                 // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E2[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterUseComponent*                 CallFunc_GetUseComponent_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35E3[0x5];                                     // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetOwningFSDPlayerState_ReturnValue;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo) == 0x000008, "Wrong alignment on HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo");
static_assert(sizeof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo) == 0x000150, "Wrong size on HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, EntryPoint) == 0x000000, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate_5) == 0x000054, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate_6) == 0x000064, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate_7) == 0x000074, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate_8) == 0x000084, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000098, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_DynamicCast_AsPlayer_Character) == 0x0000A0, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000AC, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue) == 0x0000BC, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_IsAlive_ReturnValue) == 0x0000C0, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GetHealthPct_ReturnValue) == 0x0000C4, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GetHealthPct_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C8, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CustomEvent_newState) == 0x0000CA, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CustomEvent_newState' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CB, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CustomEvent_health) == 0x0000CC, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CustomEvent_health' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_Not_PreBool_ReturnValue) == 0x0000D0, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D1, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D2, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_BooleanAND_ReturnValue_2) == 0x0000D3, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_IsHudGroupVisible_ReturnValue) == 0x0000D4, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_IsHudGroupVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_IsHudGroupVisible_ReturnValue_1) == 0x0000D5, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_IsHudGroupVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_ComponentBoundEvent_Group_1) == 0x0000D8, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_ComponentBoundEvent_Group_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_ComponentBoundEvent_IsVisible_1) == 0x0000E0, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_ComponentBoundEvent_IsVisible_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_ComponentBoundEvent_Group) == 0x0000E8, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_ComponentBoundEvent_Group' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_ComponentBoundEvent_IsVisible) == 0x0000F0, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_ComponentBoundEvent_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CustomEvent_ammoStatus01) == 0x0000F4, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CustomEvent_ammoStatus01' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CustomEvent_healthStatus01) == 0x0000F8, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CustomEvent_healthStatus01' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GetPlayerState_ReturnValue) == 0x000100, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GetPlayerState_ReturnValue_1) == 0x000108, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GetPlayerState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GetSupplyAmmoStatus_ReturnValue) == 0x000110, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GetSupplyAmmoStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_CustomEvent_component) == 0x000118, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_CustomEvent_component' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GetOwner_ReturnValue) == 0x000120, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_DynamicCast_AsRessuply_Pod) == 0x000128, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_DynamicCast_AsRessuply_Pod' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GetUseComponent_ReturnValue) == 0x000138, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GetUseComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_BooleanOR_ReturnValue) == 0x000140, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_Not_PreBool_ReturnValue_2) == 0x000141, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, K2Node_Event_IsDesignTime) == 0x000142, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo, CallFunc_GetOwningFSDPlayerState_ReturnValue) == 0x000148, "Member 'HUD_PlayerInfo_C_ExecuteUbergraph_HUD_PlayerInfo::CallFunc_GetOwningFSDPlayerState_ReturnValue' has a wrong offset!");

// Function HUD_PlayerInfo.HUD_PlayerInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_PlayerInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerInfo_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_PlayerInfo_C_PreConstruct");
static_assert(sizeof(HUD_PlayerInfo_C_PreConstruct) == 0x000001, "Wrong size on HUD_PlayerInfo_C_PreConstruct");
static_assert(offsetof(HUD_PlayerInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_PlayerInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_PlayerInfo.HUD_PlayerInfo_C.OnBeginHoveringEvent
// 0x0008 (0x0008 - 0x0000)
struct HUD_PlayerInfo_C_OnBeginHoveringEvent final
{
public:
	class UUsableComponentBase*                   Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerInfo_C_OnBeginHoveringEvent) == 0x000008, "Wrong alignment on HUD_PlayerInfo_C_OnBeginHoveringEvent");
static_assert(sizeof(HUD_PlayerInfo_C_OnBeginHoveringEvent) == 0x000008, "Wrong size on HUD_PlayerInfo_C_OnBeginHoveringEvent");
static_assert(offsetof(HUD_PlayerInfo_C_OnBeginHoveringEvent, Component) == 0x000000, "Member 'HUD_PlayerInfo_C_OnBeginHoveringEvent::Component' has a wrong offset!");

// Function HUD_PlayerInfo.HUD_PlayerInfo_C.OnSupplyStatusChangedEvent
// 0x0008 (0x0008 - 0x0000)
struct HUD_PlayerInfo_C_OnSupplyStatusChangedEvent final
{
public:
	float                                         AmmoStatus01;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthStatus01;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerInfo_C_OnSupplyStatusChangedEvent) == 0x000004, "Wrong alignment on HUD_PlayerInfo_C_OnSupplyStatusChangedEvent");
static_assert(sizeof(HUD_PlayerInfo_C_OnSupplyStatusChangedEvent) == 0x000008, "Wrong size on HUD_PlayerInfo_C_OnSupplyStatusChangedEvent");
static_assert(offsetof(HUD_PlayerInfo_C_OnSupplyStatusChangedEvent, AmmoStatus01) == 0x000000, "Member 'HUD_PlayerInfo_C_OnSupplyStatusChangedEvent::AmmoStatus01' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_OnSupplyStatusChangedEvent, HealthStatus01) == 0x000004, "Member 'HUD_PlayerInfo_C_OnSupplyStatusChangedEvent::HealthStatus01' has a wrong offset!");

// Function HUD_PlayerInfo.HUD_PlayerInfo_C.BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct HUD_PlayerInfo_C_BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature final
{
public:
	class UHUDVisibilityGroup*                    Group;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsVisible;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerInfo_C_BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature) == 0x000008, "Wrong alignment on HUD_PlayerInfo_C_BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature");
static_assert(sizeof(HUD_PlayerInfo_C_BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature) == 0x000010, "Wrong size on HUD_PlayerInfo_C_BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature");
static_assert(offsetof(HUD_PlayerInfo_C_BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature, Group) == 0x000000, "Member 'HUD_PlayerInfo_C_BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature::Group' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature, Param_IsVisible) == 0x000008, "Member 'HUD_PlayerInfo_C_BndEvt__HG_HealthShield_K2Node_ComponentBoundEvent_3_VisibilityDelegate__DelegateSignature::Param_IsVisible' has a wrong offset!");

// Function HUD_PlayerInfo.HUD_PlayerInfo_C.BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct HUD_PlayerInfo_C_BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature final
{
public:
	class UHUDVisibilityGroup*                    Group;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsVisible;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerInfo_C_BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature) == 0x000008, "Wrong alignment on HUD_PlayerInfo_C_BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature");
static_assert(sizeof(HUD_PlayerInfo_C_BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature) == 0x000010, "Wrong size on HUD_PlayerInfo_C_BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature");
static_assert(offsetof(HUD_PlayerInfo_C_BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature, Group) == 0x000000, "Member 'HUD_PlayerInfo_C_BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature::Group' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature, Param_IsVisible) == 0x000008, "Member 'HUD_PlayerInfo_C_BndEvt__HG_ClassName_K2Node_ComponentBoundEvent_2_VisibilityDelegate__DelegateSignature::Param_IsVisible' has a wrong offset!");

// Function HUD_PlayerInfo.HUD_PlayerInfo_C.OnHealthChanged_Event
// 0x0004 (0x0004 - 0x0000)
struct HUD_PlayerInfo_C_OnHealthChanged_Event final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerInfo_C_OnHealthChanged_Event) == 0x000004, "Wrong alignment on HUD_PlayerInfo_C_OnHealthChanged_Event");
static_assert(sizeof(HUD_PlayerInfo_C_OnHealthChanged_Event) == 0x000004, "Wrong size on HUD_PlayerInfo_C_OnHealthChanged_Event");
static_assert(offsetof(HUD_PlayerInfo_C_OnHealthChanged_Event, Health) == 0x000000, "Member 'HUD_PlayerInfo_C_OnHealthChanged_Event::Health' has a wrong offset!");

// Function HUD_PlayerInfo.HUD_PlayerInfo_C.OnCharacterStateChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct HUD_PlayerInfo_C_OnCharacterStateChanged_Event final
{
public:
	ECharacterState                               NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerInfo_C_OnCharacterStateChanged_Event) == 0x000001, "Wrong alignment on HUD_PlayerInfo_C_OnCharacterStateChanged_Event");
static_assert(sizeof(HUD_PlayerInfo_C_OnCharacterStateChanged_Event) == 0x000001, "Wrong size on HUD_PlayerInfo_C_OnCharacterStateChanged_Event");
static_assert(offsetof(HUD_PlayerInfo_C_OnCharacterStateChanged_Event, NewState) == 0x000000, "Member 'HUD_PlayerInfo_C_OnCharacterStateChanged_Event::NewState' has a wrong offset!");

// Function HUD_PlayerInfo.HUD_PlayerInfo_C.SetElementVisibility
// 0x000D (0x000D - 0x0000)
struct HUD_PlayerInfo_C_SetElementVisibility final
{
public:
	bool                                          Name__Class___Icon;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Health___Shield;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerInfo_C_SetElementVisibility) == 0x000001, "Wrong alignment on HUD_PlayerInfo_C_SetElementVisibility");
static_assert(sizeof(HUD_PlayerInfo_C_SetElementVisibility) == 0x00000D, "Wrong size on HUD_PlayerInfo_C_SetElementVisibility");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, Name__Class___Icon) == 0x000000, "Member 'HUD_PlayerInfo_C_SetElementVisibility::Name__Class___Icon' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, Health___Shield) == 0x000001, "Member 'HUD_PlayerInfo_C_SetElementVisibility::Health___Shield' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, Temp_bool_Variable) == 0x000002, "Member 'HUD_PlayerInfo_C_SetElementVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, Temp_byte_Variable) == 0x000003, "Member 'HUD_PlayerInfo_C_SetElementVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, Temp_byte_Variable_1) == 0x000004, "Member 'HUD_PlayerInfo_C_SetElementVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, Temp_bool_Variable_1) == 0x000005, "Member 'HUD_PlayerInfo_C_SetElementVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, Temp_byte_Variable_2) == 0x000006, "Member 'HUD_PlayerInfo_C_SetElementVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, Temp_byte_Variable_3) == 0x000007, "Member 'HUD_PlayerInfo_C_SetElementVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, CallFunc_SelectVisibility_IsVisible) == 0x000008, "Member 'HUD_PlayerInfo_C_SetElementVisibility::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, CallFunc_SelectVisibility_VisibilityChanged) == 0x000009, "Member 'HUD_PlayerInfo_C_SetElementVisibility::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, CallFunc_SelectVisibility_New_Visibility) == 0x00000A, "Member 'HUD_PlayerInfo_C_SetElementVisibility::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, K2Node_Select_Default) == 0x00000B, "Member 'HUD_PlayerInfo_C_SetElementVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfo_C_SetElementVisibility, K2Node_Select_Default_1) == 0x00000C, "Member 'HUD_PlayerInfo_C_SetElementVisibility::K2Node_Select_Default_1' has a wrong offset!");

}

