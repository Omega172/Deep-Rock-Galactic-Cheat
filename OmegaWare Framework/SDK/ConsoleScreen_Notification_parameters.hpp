#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConsoleScreen_Notification

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function ConsoleScreen_Notification.ConsoleScreen_Notification_C.ExecuteUbergraph_ConsoleScreen_Notification
// 0x0068 (0x0068 - 0x0000)
struct ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInItemUINotificationSet_ReturnValue;    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3715[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor_1;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCategoryID*                            K2Node_CustomEvent_CategoryID;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDSaveGame*                           CallFunc_GetFSDSaveGame_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification) == 0x000008, "Wrong alignment on ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification");
static_assert(sizeof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification) == 0x000068, "Wrong size on ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, EntryPoint) == 0x000000, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::EntryPoint' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, CallFunc_IsInItemUINotificationSet_ReturnValue) == 0x000005, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::CallFunc_IsInItemUINotificationSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, Temp_bool_Has_Been_Initd_Variable) == 0x000006, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, Temp_bool_IsClosed_Variable) == 0x000007, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, K2Node_Event_IsDesignTime) == 0x000008, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, CallFunc_MenuColorsAndOpacity_OutputColor) == 0x000018, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::CallFunc_MenuColorsAndOpacity_OutputColor' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, CallFunc_MenuColors_OutputColor) == 0x000028, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, CallFunc_MenuColorsAndOpacity_OutputColor_1) == 0x000038, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::CallFunc_MenuColorsAndOpacity_OutputColor_1' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, K2Node_CustomEvent_CategoryID) == 0x000048, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::K2Node_CustomEvent_CategoryID' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, CallFunc_GetFSDSaveGame_ReturnValue) == 0x000050, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::CallFunc_GetFSDSaveGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'ConsoleScreen_Notification_C_ExecuteUbergraph_ConsoleScreen_Notification::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function ConsoleScreen_Notification.ConsoleScreen_Notification_C.SetNotificationCategory
// 0x0008 (0x0008 - 0x0000)
struct ConsoleScreen_Notification_C_SetNotificationCategory final
{
public:
	class UCategoryID*                            Param_CategoryID;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConsoleScreen_Notification_C_SetNotificationCategory) == 0x000008, "Wrong alignment on ConsoleScreen_Notification_C_SetNotificationCategory");
static_assert(sizeof(ConsoleScreen_Notification_C_SetNotificationCategory) == 0x000008, "Wrong size on ConsoleScreen_Notification_C_SetNotificationCategory");
static_assert(offsetof(ConsoleScreen_Notification_C_SetNotificationCategory, Param_CategoryID) == 0x000000, "Member 'ConsoleScreen_Notification_C_SetNotificationCategory::Param_CategoryID' has a wrong offset!");

// Function ConsoleScreen_Notification.ConsoleScreen_Notification_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ConsoleScreen_Notification_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ConsoleScreen_Notification_C_PreConstruct) == 0x000001, "Wrong alignment on ConsoleScreen_Notification_C_PreConstruct");
static_assert(sizeof(ConsoleScreen_Notification_C_PreConstruct) == 0x000001, "Wrong size on ConsoleScreen_Notification_C_PreConstruct");
static_assert(offsetof(ConsoleScreen_Notification_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ConsoleScreen_Notification_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ConsoleScreen_Notification.ConsoleScreen_Notification_C.SetNotificationText
// 0x0050 (0x0050 - 0x0000)
struct ConsoleScreen_Notification_C_SetNotificationText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3716[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0038(0x0018)()
};
static_assert(alignof(ConsoleScreen_Notification_C_SetNotificationText) == 0x000008, "Wrong alignment on ConsoleScreen_Notification_C_SetNotificationText");
static_assert(sizeof(ConsoleScreen_Notification_C_SetNotificationText) == 0x000050, "Wrong size on ConsoleScreen_Notification_C_SetNotificationText");
static_assert(offsetof(ConsoleScreen_Notification_C_SetNotificationText, Text) == 0x000000, "Member 'ConsoleScreen_Notification_C_SetNotificationText::Text' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_SetNotificationText, Temp_bool_Variable) == 0x000018, "Member 'ConsoleScreen_Notification_C_SetNotificationText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_SetNotificationText, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'ConsoleScreen_Notification_C_SetNotificationText::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_Notification_C_SetNotificationText, K2Node_Select_Default) == 0x000038, "Member 'ConsoleScreen_Notification_C_SetNotificationText::K2Node_Select_Default' has a wrong offset!");

// Function ConsoleScreen_Notification.ConsoleScreen_Notification_C.SetNotificationIcon
// 0x0008 (0x0008 - 0x0000)
struct ConsoleScreen_Notification_C_SetNotificationIcon final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConsoleScreen_Notification_C_SetNotificationIcon) == 0x000008, "Wrong alignment on ConsoleScreen_Notification_C_SetNotificationIcon");
static_assert(sizeof(ConsoleScreen_Notification_C_SetNotificationIcon) == 0x000008, "Wrong size on ConsoleScreen_Notification_C_SetNotificationIcon");
static_assert(offsetof(ConsoleScreen_Notification_C_SetNotificationIcon, Texture) == 0x000000, "Member 'ConsoleScreen_Notification_C_SetNotificationIcon::Texture' has a wrong offset!");

// Function ConsoleScreen_Notification.ConsoleScreen_Notification_C.SetTextSize
// 0x0004 (0x0004 - 0x0000)
struct ConsoleScreen_Notification_C_SetTextSize final
{
public:
	int32                                         InTextSize;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConsoleScreen_Notification_C_SetTextSize) == 0x000004, "Wrong alignment on ConsoleScreen_Notification_C_SetTextSize");
static_assert(sizeof(ConsoleScreen_Notification_C_SetTextSize) == 0x000004, "Wrong size on ConsoleScreen_Notification_C_SetTextSize");
static_assert(offsetof(ConsoleScreen_Notification_C_SetTextSize, InTextSize) == 0x000000, "Member 'ConsoleScreen_Notification_C_SetTextSize::InTextSize' has a wrong offset!");

}

