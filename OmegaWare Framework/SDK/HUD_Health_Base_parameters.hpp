#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Health_Base

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function HUD_Health_Base.HUD_Health_Base_C.ExecuteUbergraph_HUD_Health_Base
// 0x00A0 (0x00A0 - 0x0000)
struct HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C3[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerHealthComponent*                 Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsRegenerating)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C4[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_health;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerHealthComponent*                 K2Node_CustomEvent_HealthComponent;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float Health)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetHealthPct_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthPct_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C5[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_InPercent;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_CustomEvent_Player;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C6[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerHealthComponent*                 K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isRegenerating;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C7[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C8[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base) == 0x000008, "Wrong alignment on HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base");
static_assert(sizeof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base) == 0x0000A0, "Wrong size on HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, EntryPoint) == 0x000000, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, Temp_bool_Variable) == 0x000004, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, Temp_object_Variable) == 0x000008, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, Temp_bool_Variable_1) == 0x000020, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, Temp_byte_Variable) == 0x000021, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, Temp_byte_Variable_1) == 0x000022, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_CustomEvent_health) == 0x000024, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_CustomEvent_health' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_CustomEvent_HealthComponent) == 0x000028, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_CustomEvent_HealthComponent' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, CallFunc_GetHealthPct_ReturnValue) == 0x000040, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::CallFunc_GetHealthPct_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, CallFunc_GetHealthPct_ReturnValue_1) == 0x000044, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::CallFunc_GetHealthPct_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_Event_IsDesignTime) == 0x000048, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_CustomEvent_InPercent) == 0x00004C, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_CustomEvent_InPercent' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_CustomEvent_Player) == 0x000050, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_Select_Default) == 0x000060, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, CallFunc_MenuColors_OutputColor) == 0x000068, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, CallFunc_MenuColors_OutputColor_1) == 0x000078, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_CustomEvent_isRegenerating) == 0x000088, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_CustomEvent_isRegenerating' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, K2Node_Select_Default_1) == 0x000089, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue) == 0x00008C, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base, CallFunc_PlayAnimation_ReturnValue) == 0x000098, "Member 'HUD_Health_Base_C_ExecuteUbergraph_HUD_Health_Base::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function HUD_Health_Base.HUD_Health_Base_C.OnHealthRegeneratingChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct HUD_Health_Base_C_OnHealthRegeneratingChanged_Event final
{
public:
	bool                                          Param_IsRegenerating;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Health_Base_C_OnHealthRegeneratingChanged_Event) == 0x000001, "Wrong alignment on HUD_Health_Base_C_OnHealthRegeneratingChanged_Event");
static_assert(sizeof(HUD_Health_Base_C_OnHealthRegeneratingChanged_Event) == 0x000001, "Wrong size on HUD_Health_Base_C_OnHealthRegeneratingChanged_Event");
static_assert(offsetof(HUD_Health_Base_C_OnHealthRegeneratingChanged_Event, Param_IsRegenerating) == 0x000000, "Member 'HUD_Health_Base_C_OnHealthRegeneratingChanged_Event::Param_IsRegenerating' has a wrong offset!");

// Function HUD_Health_Base.HUD_Health_Base_C.Bind To Player
// 0x0008 (0x0008 - 0x0000)
struct HUD_Health_Base_C_Bind_To_Player final
{
public:
	class APlayerCharacter*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Health_Base_C_Bind_To_Player) == 0x000008, "Wrong alignment on HUD_Health_Base_C_Bind_To_Player");
static_assert(sizeof(HUD_Health_Base_C_Bind_To_Player) == 0x000008, "Wrong size on HUD_Health_Base_C_Bind_To_Player");
static_assert(offsetof(HUD_Health_Base_C_Bind_To_Player, Player) == 0x000000, "Member 'HUD_Health_Base_C_Bind_To_Player::Player' has a wrong offset!");

// Function HUD_Health_Base.HUD_Health_Base_C.Set Health Pct
// 0x0004 (0x0004 - 0x0000)
struct HUD_Health_Base_C_Set_Health_Pct final
{
public:
	float                                         InPercent;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Health_Base_C_Set_Health_Pct) == 0x000004, "Wrong alignment on HUD_Health_Base_C_Set_Health_Pct");
static_assert(sizeof(HUD_Health_Base_C_Set_Health_Pct) == 0x000004, "Wrong size on HUD_Health_Base_C_Set_Health_Pct");
static_assert(offsetof(HUD_Health_Base_C_Set_Health_Pct, InPercent) == 0x000000, "Member 'HUD_Health_Base_C_Set_Health_Pct::InPercent' has a wrong offset!");

// Function HUD_Health_Base.HUD_Health_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_Health_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Health_Base_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_Health_Base_C_PreConstruct");
static_assert(sizeof(HUD_Health_Base_C_PreConstruct) == 0x000001, "Wrong size on HUD_Health_Base_C_PreConstruct");
static_assert(offsetof(HUD_Health_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_Health_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_Health_Base.HUD_Health_Base_C.Bind Health Component
// 0x0008 (0x0008 - 0x0000)
struct HUD_Health_Base_C_Bind_Health_Component final
{
public:
	class UPlayerHealthComponent*                 Param_HealthComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Health_Base_C_Bind_Health_Component) == 0x000008, "Wrong alignment on HUD_Health_Base_C_Bind_Health_Component");
static_assert(sizeof(HUD_Health_Base_C_Bind_Health_Component) == 0x000008, "Wrong size on HUD_Health_Base_C_Bind_Health_Component");
static_assert(offsetof(HUD_Health_Base_C_Bind_Health_Component, Param_HealthComponent) == 0x000000, "Member 'HUD_Health_Base_C_Bind_Health_Component::Param_HealthComponent' has a wrong offset!");

// Function HUD_Health_Base.HUD_Health_Base_C.HealthChanged
// 0x0004 (0x0004 - 0x0000)
struct HUD_Health_Base_C_HealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_Health_Base_C_HealthChanged) == 0x000004, "Wrong alignment on HUD_Health_Base_C_HealthChanged");
static_assert(sizeof(HUD_Health_Base_C_HealthChanged) == 0x000004, "Wrong size on HUD_Health_Base_C_HealthChanged");
static_assert(offsetof(HUD_Health_Base_C_HealthChanged, Health) == 0x000000, "Member 'HUD_Health_Base_C_HealthChanged::Health' has a wrong offset!");

// Function HUD_Health_Base.HUD_Health_Base_C.HasLowHealth
// 0x0010 (0x0010 - 0x0000)
struct HUD_Health_Base_C_HasLowHealth final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthPct_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Health_Base_C_HasLowHealth) == 0x000004, "Wrong alignment on HUD_Health_Base_C_HasLowHealth");
static_assert(sizeof(HUD_Health_Base_C_HasLowHealth) == 0x000010, "Wrong size on HUD_Health_Base_C_HasLowHealth");
static_assert(offsetof(HUD_Health_Base_C_HasLowHealth, ReturnValue) == 0x000000, "Member 'HUD_Health_Base_C_HasLowHealth::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_HasLowHealth, CallFunc_GetHealthPct_ReturnValue) == 0x000004, "Member 'HUD_Health_Base_C_HasLowHealth::CallFunc_GetHealthPct_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_HasLowHealth, CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue) == 0x000008, "Member 'HUD_Health_Base_C_HasLowHealth::CallFunc_GetHealthRegeneratingTargetRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_HasLowHealth, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'HUD_Health_Base_C_HasLowHealth::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function HUD_Health_Base.HUD_Health_Base_C.SetAlphaHealthbar
// 0x0268 (0x0268 - 0x0000)
struct HUD_Health_Base_C_SetAlphaHealthbar final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33CA[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0040(0x0088)()
	struct FProgressBarStyle                      K2Node_MakeStruct_ProgressBarStyle;                // 0x00C8(0x01A0)()
};
static_assert(alignof(HUD_Health_Base_C_SetAlphaHealthbar) == 0x000008, "Wrong alignment on HUD_Health_Base_C_SetAlphaHealthbar");
static_assert(sizeof(HUD_Health_Base_C_SetAlphaHealthbar) == 0x000268, "Wrong size on HUD_Health_Base_C_SetAlphaHealthbar");
static_assert(offsetof(HUD_Health_Base_C_SetAlphaHealthbar, Alpha) == 0x000000, "Member 'HUD_Health_Base_C_SetAlphaHealthbar::Alpha' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_SetAlphaHealthbar, K2Node_MakeStruct_LinearColor) == 0x000004, "Member 'HUD_Health_Base_C_SetAlphaHealthbar::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_SetAlphaHealthbar, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'HUD_Health_Base_C_SetAlphaHealthbar::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_SetAlphaHealthbar, K2Node_MakeStruct_SlateBrush) == 0x000040, "Member 'HUD_Health_Base_C_SetAlphaHealthbar::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_SetAlphaHealthbar, K2Node_MakeStruct_ProgressBarStyle) == 0x0000C8, "Member 'HUD_Health_Base_C_SetAlphaHealthbar::K2Node_MakeStruct_ProgressBarStyle' has a wrong offset!");

// Function HUD_Health_Base.HUD_Health_Base_C.CheckPingPongAnim
// 0x0010 (0x0010 - 0x0000)
struct HUD_Health_Base_C_CheckPingPongAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLowHealth_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_Health_Base_C_CheckPingPongAnim) == 0x000008, "Wrong alignment on HUD_Health_Base_C_CheckPingPongAnim");
static_assert(sizeof(HUD_Health_Base_C_CheckPingPongAnim) == 0x000010, "Wrong size on HUD_Health_Base_C_CheckPingPongAnim");
static_assert(offsetof(HUD_Health_Base_C_CheckPingPongAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'HUD_Health_Base_C_CheckPingPongAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_CheckPingPongAnim, CallFunc_HasLowHealth_ReturnValue) == 0x000008, "Member 'HUD_Health_Base_C_CheckPingPongAnim::CallFunc_HasLowHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_Health_Base_C_CheckPingPongAnim, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000009, "Member 'HUD_Health_Base_C_CheckPingPongAnim::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

}

