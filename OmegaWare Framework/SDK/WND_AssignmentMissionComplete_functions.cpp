#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WND_AssignmentMissionComplete

#include "Basic.hpp"

#include "WND_AssignmentMissionComplete_classes.hpp"
#include "WND_AssignmentMissionComplete_parameters.hpp"


namespace CG
{

// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.ExecuteUbergraph_WND_AssignmentMissionComplete
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWND_AssignmentMissionComplete_C::ExecuteUbergraph_WND_AssignmentMissionComplete(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "ExecuteUbergraph_WND_AssignmentMissionComplete");

	Params::WND_AssignmentMissionComplete_C_ExecuteUbergraph_WND_AssignmentMissionComplete Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.OnProgressBarUpdateStep
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::OnProgressBarUpdateStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "OnProgressBarUpdateStep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.OnUpdateProgressBarFinished
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::OnUpdateProgressBarFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "OnUpdateProgressBarFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.OnProgressBarMoveFinished
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::OnProgressBarMoveFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "OnProgressBarMoveFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.OnNewTopWindow
// (Event, Protected, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::OnNewTopWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "OnNewTopWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.Reward Claimed
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::Reward_Claimed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "Reward Claimed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.Count Down
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::Count_Down()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "Count Down");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.On Mission Control Finished
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::On_Mission_Control_Finished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "On Mission Control Finished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.OnAppearFinished
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::OnAppearFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "OnAppearFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.Start Mission Control Speak
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::Start_Mission_Control_Speak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "Start Mission Control Speak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.Init Window
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::Init_Window()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "Init Window");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.CursorInputHack
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::CursorInputHack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "CursorInputHack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.Continue
// (BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::Continue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "Continue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.SetMissionControlPaused
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPaused                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWND_AssignmentMissionComplete_C::SetMissionControlPaused(bool IsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "SetMissionControlPaused");

	Params::WND_AssignmentMissionComplete_C_SetMissionControlPaused Parms{};

	Parms.IsPaused = IsPaused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.OnClosed
// (Event, Protected, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::OnClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "OnClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.OnShown
// (Event, Protected, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::OnShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "OnShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.BndEvt__ContinueButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)

void UWND_AssignmentMissionComplete_C::BndEvt__ContinueButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "BndEvt__ContinueButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWND_AssignmentMissionComplete_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "PreConstruct");

	Params::WND_AssignmentMissionComplete_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.Add Reward
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UReward*                          Reward                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWND_AssignmentMissionComplete_C::Add_Reward(class UReward* Reward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "Add Reward");

	Params::WND_AssignmentMissionComplete_C_Add_Reward Parms{};

	Parms.Reward = Reward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.Add Reward List
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UReward*>                  List                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWND_AssignmentMissionComplete_C::Add_Reward_List(const TArray<class UReward*>& List)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "Add Reward List");

	Params::WND_AssignmentMissionComplete_C_Add_Reward_List Parms{};

	Parms.List = std::move(List);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.CreateRewardWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UReward*                          Reward                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URewardWidget*                    Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWND_AssignmentMissionComplete_C::CreateRewardWidget(class UReward* Reward, class URewardWidget** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "CreateRewardWidget");

	Params::WND_AssignmentMissionComplete_C_CreateRewardWidget Parms{};

	Parms.Reward = Reward;

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.GetMissionCompleteShout
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UDialogDataAsset*                 MissionCompleteShout                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWND_AssignmentMissionComplete_C::GetMissionCompleteShout(class UDialogDataAsset** MissionCompleteShout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "GetMissionCompleteShout");

	Params::WND_AssignmentMissionComplete_C_GetMissionCompleteShout Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MissionCompleteShout != nullptr)
		*MissionCompleteShout = Parms.MissionCompleteShout;
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.SetFrameColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MenuColors                         Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWND_AssignmentMissionComplete_C::SetFrameColor(ENUM_MenuColors Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "SetFrameColor");

	Params::WND_AssignmentMissionComplete_C_SetFrameColor Parms{};

	Parms.Color = Color;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.OnKeyUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWND_AssignmentMissionComplete_C::OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "OnKeyUp");

	Params::WND_AssignmentMissionComplete_C_OnKeyUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.IsWindowOpen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UWND_AssignmentMissionComplete_C::IsWindowOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "IsWindowOpen");

	Params::WND_AssignmentMissionComplete_C_IsWindowOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.UpdateCampaignProgressBar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowLastMission                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWND_AssignmentMissionComplete_C::UpdateCampaignProgressBar(bool ShowLastMission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "UpdateCampaignProgressBar");

	Params::WND_AssignmentMissionComplete_C_UpdateCampaignProgressBar Parms{};

	Parms.ShowLastMission = ShowLastMission;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.UpdateGoogleAnalytics
// (Public, BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::UpdateGoogleAnalytics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "UpdateGoogleAnalytics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WND_AssignmentMissionComplete.WND_AssignmentMissionComplete_C.CheckMinersManualNotifications
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWND_AssignmentMissionComplete_C::CheckMinersManualNotifications()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WND_AssignmentMissionComplete_C", "CheckMinersManualNotifications");

	UObject::ProcessEvent(Func, nullptr);
}

}

