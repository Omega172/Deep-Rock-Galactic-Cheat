#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Overclocks_Equip

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.ExecuteUbergraph_ITM_Overclocks_Equip
// 0x01A8 (0x01A8 - 0x0000)
struct ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UItemUpgrade* Upgrade)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E9[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_SetVisibilityIf_IsVisible;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EA[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemUpgrade*                           K2Node_CustomEvent_Upgrade;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDPlayerState*                        CallFunc_GetOwningFSDPlayerState_ReturnValue;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMenuActive_ActiveChanged;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetVisibilityIf_IsVisible_1;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EB[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0068(0x0070)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00D8(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0110(0x0070)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMenuActive_ActiveChanged_1;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EC[0x6];                                     // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetMenuActive_ActiveChanged_2;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip");
static_assert(sizeof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip) == 0x0001A8, "Wrong size on ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, EntryPoint) == 0x000000, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_IsValidClass_ReturnValue) == 0x000014, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_SetVisibilityIf_IsVisible) == 0x000038, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_SetVisibilityIf_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, K2Node_CustomEvent_Upgrade) == 0x000040, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::K2Node_CustomEvent_Upgrade' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_GetOwningFSDPlayerState_ReturnValue) == 0x000048, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_GetOwningFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_MenuColors_OutputColor) == 0x000050, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_SetMenuActive_ActiveChanged) == 0x000060, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_SetMenuActive_ActiveChanged' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_Not_PreBool_ReturnValue_1) == 0x000063, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_SetVisibilityIf_IsVisible_1) == 0x000064, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_SetVisibilityIf_IsVisible_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, K2Node_Event_MouseEvent_1) == 0x000068, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, K2Node_Event_MyGeometry) == 0x0000D8, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, K2Node_Event_MouseEvent) == 0x000110, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000180, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_SetMenuActive_ActiveChanged_1) == 0x000188, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_SetMenuActive_ActiveChanged_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, K2Node_Event_IsDesignTime) == 0x000189, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_PlayAnimationForward_ReturnValue) == 0x000190, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000198, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip, CallFunc_SetMenuActive_ActiveChanged_2) == 0x0001A0, "Member 'ITM_Overclocks_Equip_C_ExecuteUbergraph_ITM_Overclocks_Equip::CallFunc_SetMenuActive_ActiveChanged_2' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_Overclocks_Equip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Overclocks_Equip_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_Overclocks_Equip_C_PreConstruct");
static_assert(sizeof(ITM_Overclocks_Equip_C_PreConstruct) == 0x000001, "Wrong size on ITM_Overclocks_Equip_C_PreConstruct");
static_assert(offsetof(ITM_Overclocks_Equip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_Overclocks_Equip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct ITM_Overclocks_Equip_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ITM_Overclocks_Equip_C_OnMouseEnter) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_OnMouseEnter");
static_assert(sizeof(ITM_Overclocks_Equip_C_OnMouseEnter) == 0x0000A8, "Wrong size on ITM_Overclocks_Equip_C_OnMouseEnter");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'ITM_Overclocks_Equip_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'ITM_Overclocks_Equip_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct ITM_Overclocks_Equip_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ITM_Overclocks_Equip_C_OnMouseLeave) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_OnMouseLeave");
static_assert(sizeof(ITM_Overclocks_Equip_C_OnMouseLeave) == 0x000070, "Wrong size on ITM_Overclocks_Equip_C_OnMouseLeave");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'ITM_Overclocks_Equip_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.OnItemUpgradeCrafted_Event
// 0x0008 (0x0008 - 0x0000)
struct ITM_Overclocks_Equip_C_OnItemUpgradeCrafted_Event final
{
public:
	class UItemUpgrade*                           Upgrade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_OnItemUpgradeCrafted_Event) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_OnItemUpgradeCrafted_Event");
static_assert(sizeof(ITM_Overclocks_Equip_C_OnItemUpgradeCrafted_Event) == 0x000008, "Wrong size on ITM_Overclocks_Equip_C_OnItemUpgradeCrafted_Event");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemUpgradeCrafted_Event, Upgrade) == 0x000000, "Member 'ITM_Overclocks_Equip_C_OnItemUpgradeCrafted_Event::Upgrade' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.SetBackgroundTint
// 0x0010 (0x0010 - 0x0000)
struct ITM_Overclocks_Equip_C_SetBackgroundTint final
{
public:
	struct FLinearColor                           Tint;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_SetBackgroundTint) == 0x000004, "Wrong alignment on ITM_Overclocks_Equip_C_SetBackgroundTint");
static_assert(sizeof(ITM_Overclocks_Equip_C_SetBackgroundTint) == 0x000010, "Wrong size on ITM_Overclocks_Equip_C_SetBackgroundTint");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetBackgroundTint, Tint) == 0x000000, "Member 'ITM_Overclocks_Equip_C_SetBackgroundTint::Tint' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.SetData
// 0x0018 (0x0018 - 0x0000)
struct ITM_Overclocks_Equip_C_SetData final
{
public:
	class UClass*                                 InCharacterClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 InItemClass;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUpgradableItemComponent*               CallFunc_GetComponentFromClass_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_SetData) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_SetData");
static_assert(sizeof(ITM_Overclocks_Equip_C_SetData) == 0x000018, "Wrong size on ITM_Overclocks_Equip_C_SetData");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetData, InCharacterClass) == 0x000000, "Member 'ITM_Overclocks_Equip_C_SetData::InCharacterClass' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetData, InItemClass) == 0x000008, "Member 'ITM_Overclocks_Equip_C_SetData::InItemClass' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetData, CallFunc_GetComponentFromClass_ReturnValue) == 0x000010, "Member 'ITM_Overclocks_Equip_C_SetData::CallFunc_GetComponentFromClass_ReturnValue' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.Refresh
// 0x0078 (0x0078 - 0x0000)
struct ITM_Overclocks_Equip_C_Refresh final
{
public:
	class UItemUpgrade*                           EquippedOverclock;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38ED[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemUpgrade*                           CallFunc_GetEquippedOverclock_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38EF[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_GetCharacterID_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UItemUpgrade*>                   CallFunc_GetEquippableOverclocks_ReturnValue;      // 0x0030(0x0010)(ReferenceParm)
	class UPlayerCharacterID*                     CallFunc_GetCharacterID_ReturnValue_1;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverclockingEnabled_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanItemOverclock_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F0[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool WasCreated, class UUserWidget* Widget, int32 ActiveIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITM_Overclocks_Equip_Item_C*>   CallFunc_CreateOrReuseChildrenWithCallback_ReturnValue; // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_Refresh) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_Refresh");
static_assert(sizeof(ITM_Overclocks_Equip_C_Refresh) == 0x000078, "Wrong size on ITM_Overclocks_Equip_C_Refresh");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, EquippedOverclock) == 0x000000, "Member 'ITM_Overclocks_Equip_C_Refresh::EquippedOverclock' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_GetEquippedOverclock_ReturnValue) == 0x000018, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_GetEquippedOverclock_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_GetCharacterID_ReturnValue) == 0x000028, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_GetCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_GetEquippableOverclocks_ReturnValue) == 0x000030, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_GetEquippableOverclocks_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_GetCharacterID_ReturnValue_1) == 0x000040, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_GetCharacterID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_IsOverclockingEnabled_ReturnValue) == 0x000048, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_IsOverclockingEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_CanItemOverclock_ReturnValue) == 0x000049, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_CanItemOverclock_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'ITM_Overclocks_Equip_C_Refresh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_CreateOrReuseChildrenWithCallback_ReturnValue) == 0x000060, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_CreateOrReuseChildrenWithCallback_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_SelectVisibility_IsVisible) == 0x000070, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_SelectVisibility_VisibilityChanged) == 0x000071, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_Refresh, CallFunc_SelectVisibility_New_Visibility) == 0x000072, "Member 'ITM_Overclocks_Equip_C_Refresh::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.OnItemClicked
// 0x00A0 (0x00A0 - 0x0000)
struct ITM_Overclocks_Equip_C_OnItemClicked final
{
public:
	class UITM_Overclocks_Equip_Item_C*           Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unequipping;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemUpgrade*                           Overclock;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F2[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetOwningFSDPlayerState_ReturnValue;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           CallFunc_GetEquippedOverclock_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           CallFunc_GetOverClock_Overclock;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           CallFunc_GetEquippedOverclock_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetCharacterID_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F3[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F4[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_Overclocks_Equip_Item_C*           K2Node_DynamicCast_AsITM_Overclocks_Equip_Item;    // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F5[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           CallFunc_GetOverClock_Overclock_1;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemUpgradeStatus                            CallFunc_GetItemUpgradeStatus_ReturnValue;         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_OnItemClicked) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_OnItemClicked");
static_assert(sizeof(ITM_Overclocks_Equip_C_OnItemClicked) == 0x0000A0, "Wrong size on ITM_Overclocks_Equip_C_OnItemClicked");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, Widget) == 0x000000, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::Widget' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, Unequipping) == 0x000008, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::Unequipping' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, Overclock) == 0x000010, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::Overclock' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, Temp_object_Variable) == 0x000018, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, Temp_int_Variable) == 0x000020, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, Temp_bool_Variable) == 0x000028, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetOwningFSDPlayerState_ReturnValue) == 0x000030, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetOwningFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, K2Node_Select_Default) == 0x000040, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetEquippedOverclock_ReturnValue) == 0x000048, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetEquippedOverclock_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetOverClock_Overclock) == 0x000050, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetOverClock_Overclock' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetEquippedOverclock_ReturnValue_1) == 0x000058, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetEquippedOverclock_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetCharacterID_ReturnValue) == 0x000060, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetChildAt_ReturnValue) == 0x000070, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetChildrenCount_ReturnValue) == 0x000078, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, K2Node_DynamicCast_AsITM_Overclocks_Equip_Item) == 0x000080, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::K2Node_DynamicCast_AsITM_Overclocks_Equip_Item' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetOverClock_Overclock_1) == 0x000090, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetOverClock_Overclock_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemClicked, CallFunc_GetItemUpgradeStatus_ReturnValue) == 0x000099, "Member 'ITM_Overclocks_Equip_C_OnItemClicked::CallFunc_GetItemUpgradeStatus_ReturnValue' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.OnItemHovered
// 0x0038 (0x0038 - 0x0000)
struct ITM_Overclocks_Equip_C_OnItemHovered final
{
public:
	class UITM_Overclocks_Equip_Item_C*           Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemUpgrade*                           CallFunc_GetOverClock_Overclock;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F6[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemUpgrade*                           CallFunc_GetEquippedOverclock_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemUpgrade*                           CallFunc_GetOverClock_Overclock_1;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_OnItemHovered) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_OnItemHovered");
static_assert(sizeof(ITM_Overclocks_Equip_C_OnItemHovered) == 0x000038, "Wrong size on ITM_Overclocks_Equip_C_OnItemHovered");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemHovered, Widget) == 0x000000, "Member 'ITM_Overclocks_Equip_C_OnItemHovered::Widget' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemHovered, CallFunc_GetOverClock_Overclock) == 0x000008, "Member 'ITM_Overclocks_Equip_C_OnItemHovered::CallFunc_GetOverClock_Overclock' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemHovered, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'ITM_Overclocks_Equip_C_OnItemHovered::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemHovered, CallFunc_GetEquippedOverclock_ReturnValue) == 0x000018, "Member 'ITM_Overclocks_Equip_C_OnItemHovered::CallFunc_GetEquippedOverclock_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemHovered, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'ITM_Overclocks_Equip_C_OnItemHovered::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemHovered, CallFunc_GetOverClock_Overclock_1) == 0x000028, "Member 'ITM_Overclocks_Equip_C_OnItemHovered::CallFunc_GetOverClock_Overclock_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemHovered, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'ITM_Overclocks_Equip_C_OnItemHovered::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.OnItemUnhovered
// 0x0020 (0x0020 - 0x0000)
struct ITM_Overclocks_Equip_C_OnItemUnhovered final
{
public:
	class UITM_Overclocks_Equip_Item_C*           Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38F8[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemUpgrade*                           CallFunc_GetEquippedOverclock_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_OnItemUnhovered) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_OnItemUnhovered");
static_assert(sizeof(ITM_Overclocks_Equip_C_OnItemUnhovered) == 0x000020, "Wrong size on ITM_Overclocks_Equip_C_OnItemUnhovered");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemUnhovered, Widget) == 0x000000, "Member 'ITM_Overclocks_Equip_C_OnItemUnhovered::Widget' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemUnhovered, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'ITM_Overclocks_Equip_C_OnItemUnhovered::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemUnhovered, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'ITM_Overclocks_Equip_C_OnItemUnhovered::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnItemUnhovered, CallFunc_GetEquippedOverclock_ReturnValue) == 0x000018, "Member 'ITM_Overclocks_Equip_C_OnItemUnhovered::CallFunc_GetEquippedOverclock_ReturnValue' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.SetSelectionVisible
// 0x0028 (0x0028 - 0x0000)
struct ITM_Overclocks_Equip_C_SetSelectionVisible final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FA[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Overclocks_Equip_C_SetSelectionVisible) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_SetSelectionVisible");
static_assert(sizeof(ITM_Overclocks_Equip_C_SetSelectionVisible) == 0x000028, "Wrong size on ITM_Overclocks_Equip_C_SetSelectionVisible");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, InVisible) == 0x000000, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::InVisible' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, Temp_bool_Variable) == 0x000001, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, Temp_byte_Variable) == 0x000002, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, Temp_byte_Variable_1) == 0x000003, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000004, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, K2Node_Select_Default) == 0x000008, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, CallFunc_GetChildrenCount_ReturnValue) == 0x00001C, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000022, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetSelectionVisible, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'ITM_Overclocks_Equip_C_SetSelectionVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.ShowOverclock
// 0x0068 (0x0068 - 0x0000)
struct ITM_Overclocks_Equip_C_ShowOverclock final
{
public:
	class UItemUpgrade*                           Overclock;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USchematicCategory*                     Category;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0018)()
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0048(0x0018)()
	class USchematicCategory*                     CallFunc_FromUpgrade_OutSchematicCategory;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_ShowOverclock) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_ShowOverclock");
static_assert(sizeof(ITM_Overclocks_Equip_C_ShowOverclock) == 0x000068, "Wrong size on ITM_Overclocks_Equip_C_ShowOverclock");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, Overclock) == 0x000000, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::Overclock' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, Category) == 0x000008, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::Category' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000013, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_IsValid_ReturnValue_2) == 0x000014, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_SelectVisibility_IsVisible) == 0x000016, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_SelectVisibility_VisibilityChanged) == 0x000017, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_SelectVisibility_New_Visibility) == 0x000018, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_MenuColors_OutputColor) == 0x000038, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_TextToUpper_ReturnValue_1) == 0x000048, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_ShowOverclock, CallFunc_FromUpgrade_OutSchematicCategory) == 0x000060, "Member 'ITM_Overclocks_Equip_C_ShowOverclock::CallFunc_FromUpgrade_OutSchematicCategory' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.SetMenuActive
// 0x0018 (0x0018 - 0x0000)
struct ITM_Overclocks_Equip_C_SetMenuActive final
{
public:
	bool                                          Inactive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ActiveChanged;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FC[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_SetMenuActive) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_SetMenuActive");
static_assert(sizeof(ITM_Overclocks_Equip_C_SetMenuActive) == 0x000018, "Wrong size on ITM_Overclocks_Equip_C_SetMenuActive");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, Inactive) == 0x000000, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::Inactive' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, ActiveChanged) == 0x000001, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::ActiveChanged' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, Temp_bool_Variable) == 0x000002, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, Temp_byte_Variable) == 0x000003, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, Temp_byte_Variable_1) == 0x000004, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, CallFunc_SelectVisibility_IsVisible) == 0x000005, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, CallFunc_SelectVisibility_VisibilityChanged) == 0x000006, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, CallFunc_SelectVisibility_New_Visibility) == 0x000007, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, K2Node_Select_Default) == 0x000009, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000A, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00000C, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuActive, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'ITM_Overclocks_Equip_C_SetMenuActive::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.SetMenuLocked
// 0x0130 (0x0130 - 0x0000)
struct ITM_Overclocks_Equip_C_SetMenuLocked final
{
public:
	bool                                          InLocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InRequirementMet;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OverclockEquipped;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FD[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38FE[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x0088)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FF[0x1];                                     // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectMenuColor_OutputColor;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x00F0(0x0028)()
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3900[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_2;                           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclocks_Equip_C_SetMenuLocked) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_SetMenuLocked");
static_assert(sizeof(ITM_Overclocks_Equip_C_SetMenuLocked) == 0x000130, "Wrong size on ITM_Overclocks_Equip_C_SetMenuLocked");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, InLocked) == 0x000000, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::InLocked' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, InRequirementMet) == 0x000001, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::InRequirementMet' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, OverclockEquipped) == 0x000002, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::OverclockEquipped' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, Temp_bool_Variable) == 0x000003, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, Temp_float_Variable) == 0x000004, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, Temp_float_Variable_1) == 0x000008, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, Temp_bool_Variable_1) == 0x00000C, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, Temp_bool_Variable_2) == 0x00000D, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, K2Node_Select_Default) == 0x000010, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_Not_PreBool_ReturnValue_1) == 0x000015, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, K2Node_MakeStruct_LinearColor) == 0x000018, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_BooleanAND_ReturnValue) == 0x0000D8, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_SelectVisibility_IsVisible) == 0x0000D9, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_SelectVisibility_VisibilityChanged) == 0x0000DA, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_SelectVisibility_New_Visibility) == 0x0000DB, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_SelectVisibility_IsVisible_1) == 0x0000DC, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x0000DD, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_SelectVisibility_New_Visibility_1) == 0x0000DE, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_SelectMenuColor_OutputColor) == 0x0000E0, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_SelectMenuColor_OutputColor' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, K2Node_MakeStruct_SlateColor_1) == 0x0000F0, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, K2Node_Select_Default_1) == 0x000118, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, CallFunc_BooleanAND_ReturnValue_1) == 0x000120, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_SetMenuLocked, K2Node_Select_Default_2) == 0x000128, "Member 'ITM_Overclocks_Equip_C_SetMenuLocked::K2Node_Select_Default_2' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.OnRefreshItem
// 0x00B8 (0x00B8 - 0x0000)
struct ITM_Overclocks_Equip_C_OnRefreshItem final
{
public:
	bool                                          WasCreated;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3901[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Widget;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveIndex;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpgradeStatus                            State;                                             // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3902[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemUpgrade*                           Overclock;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_Overclocks_Equip_Item_C*           OverclockItem;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpgradeStatus                            Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3903[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITM_Overclocks_Equip_Item_C*           K2Node_DynamicCast_AsITM_Overclocks_Equip_Item;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3904[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameData*                              CallFunc_GetFSDGameData_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemID*                                CallFunc_GetItemID_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetCharacterID_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class UPlayerCharacterID*                     CallFunc_GetCharacterID_ReturnValue_1;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpgradeStatus                            CallFunc_GetItemUpgradeStatus_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3905[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemUpgrade*                           CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUpgradeStatus                            K2Node_Select_Default;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3906[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UITM_Overclocks_Equip_Item_C* Item)> K2Node_CreateDelegate_OutputDelegate;              // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UITM_Overclocks_Equip_Item_C* Item)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UITM_Overclocks_Equip_Item_C* Item)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ITM_Overclocks_Equip_C_OnRefreshItem) == 0x000008, "Wrong alignment on ITM_Overclocks_Equip_C_OnRefreshItem");
static_assert(sizeof(ITM_Overclocks_Equip_C_OnRefreshItem) == 0x0000B8, "Wrong size on ITM_Overclocks_Equip_C_OnRefreshItem");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, WasCreated) == 0x000000, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::WasCreated' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, Widget) == 0x000008, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::Widget' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, ActiveIndex) == 0x000010, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::ActiveIndex' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, State) == 0x000014, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::State' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, Overclock) == 0x000018, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::Overclock' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, OverclockItem) == 0x000020, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::OverclockItem' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, Temp_byte_Variable) == 0x000028, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, K2Node_DynamicCast_AsITM_Overclocks_Equip_Item) == 0x000030, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::K2Node_DynamicCast_AsITM_Overclocks_Equip_Item' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, CallFunc_GetFSDGameData_ReturnValue) == 0x000040, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::CallFunc_GetFSDGameData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, CallFunc_GetItemID_ReturnValue) == 0x000048, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::CallFunc_GetItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, CallFunc_GetCharacterID_ReturnValue) == 0x000050, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::CallFunc_GetCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, K2Node_MakeArray_Array) == 0x000058, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, CallFunc_GetCharacterID_ReturnValue_1) == 0x000068, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::CallFunc_GetCharacterID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, CallFunc_GetItemUpgradeStatus_ReturnValue) == 0x000070, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::CallFunc_GetItemUpgradeStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, Temp_bool_Variable) == 0x000071, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, CallFunc_Array_Get_Item) == 0x000078, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, K2Node_Select_Default) == 0x000080, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, K2Node_CreateDelegate_OutputDelegate) == 0x000084, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, K2Node_CreateDelegate_OutputDelegate_1) == 0x000094, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_OnRefreshItem, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A4, "Member 'ITM_Overclocks_Equip_C_OnRefreshItem::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function ITM_Overclocks_Equip.ITM_Overclocks_Equip_C.TryToggleSelection
// 0x0008 (0x0008 - 0x0000)
struct ITM_Overclocks_Equip_C_TryToggleSelection final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Overclocks_Equip_C_TryToggleSelection) == 0x000004, "Wrong alignment on ITM_Overclocks_Equip_C_TryToggleSelection");
static_assert(sizeof(ITM_Overclocks_Equip_C_TryToggleSelection) == 0x000008, "Wrong size on ITM_Overclocks_Equip_C_TryToggleSelection");
static_assert(offsetof(ITM_Overclocks_Equip_C_TryToggleSelection, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'ITM_Overclocks_Equip_C_TryToggleSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_TryToggleSelection, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'ITM_Overclocks_Equip_C_TryToggleSelection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_TryToggleSelection, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'ITM_Overclocks_Equip_C_TryToggleSelection::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclocks_Equip_C_TryToggleSelection, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'ITM_Overclocks_Equip_C_TryToggleSelection::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

