#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SR_PlayerControllerBase

#include "Basic.hpp"

#include "FSD_structs.hpp"


namespace CG::Params
{

// Function BP_SR_PlayerControllerBase.BP_SR_PlayerControllerBase_C.ExecuteUbergraph_BP_SR_PlayerControllerBase
// 0x0008 (0x0008 - 0x0000)
struct BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_resetToDefaultWeapon;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharselectionCameraLocation                  K2Node_CustomEvent_cameraLocation;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase) == 0x000004, "Wrong alignment on BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase");
static_assert(sizeof(BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase) == 0x000008, "Wrong size on BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase");
static_assert(offsetof(BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase, EntryPoint) == 0x000000, "Member 'BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase, K2Node_CustomEvent_resetToDefaultWeapon) == 0x000004, "Member 'BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase::K2Node_CustomEvent_resetToDefaultWeapon' has a wrong offset!");
static_assert(offsetof(BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase, K2Node_CustomEvent_cameraLocation) == 0x000005, "Member 'BP_SR_PlayerControllerBase_C_ExecuteUbergraph_BP_SR_PlayerControllerBase::K2Node_CustomEvent_cameraLocation' has a wrong offset!");

// Function BP_SR_PlayerControllerBase.BP_SR_PlayerControllerBase_C.ShowCharacterSelectionBackground
// 0x0002 (0x0002 - 0x0000)
struct BP_SR_PlayerControllerBase_C_ShowCharacterSelectionBackground final
{
public:
	bool                                          ResetToDefaultWeapon;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharselectionCameraLocation                  CameraLocation;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SR_PlayerControllerBase_C_ShowCharacterSelectionBackground) == 0x000001, "Wrong alignment on BP_SR_PlayerControllerBase_C_ShowCharacterSelectionBackground");
static_assert(sizeof(BP_SR_PlayerControllerBase_C_ShowCharacterSelectionBackground) == 0x000002, "Wrong size on BP_SR_PlayerControllerBase_C_ShowCharacterSelectionBackground");
static_assert(offsetof(BP_SR_PlayerControllerBase_C_ShowCharacterSelectionBackground, ResetToDefaultWeapon) == 0x000000, "Member 'BP_SR_PlayerControllerBase_C_ShowCharacterSelectionBackground::ResetToDefaultWeapon' has a wrong offset!");
static_assert(offsetof(BP_SR_PlayerControllerBase_C_ShowCharacterSelectionBackground, CameraLocation) == 0x000001, "Member 'BP_SR_PlayerControllerBase_C_ShowCharacterSelectionBackground::CameraLocation' has a wrong offset!");

// Function BP_SR_PlayerControllerBase.BP_SR_PlayerControllerBase_C.GetCrafting
// 0x0008 (0x0008 - 0x0000)
struct BP_SR_PlayerControllerBase_C_GetCrafting final
{
public:
	class UWindowWidget*                          Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SR_PlayerControllerBase_C_GetCrafting) == 0x000008, "Wrong alignment on BP_SR_PlayerControllerBase_C_GetCrafting");
static_assert(sizeof(BP_SR_PlayerControllerBase_C_GetCrafting) == 0x000008, "Wrong size on BP_SR_PlayerControllerBase_C_GetCrafting");
static_assert(offsetof(BP_SR_PlayerControllerBase_C_GetCrafting, Widget) == 0x000000, "Member 'BP_SR_PlayerControllerBase_C_GetCrafting::Widget' has a wrong offset!");

// Function BP_SR_PlayerControllerBase.BP_SR_PlayerControllerBase_C.GetPopupCrafting
// 0x0008 (0x0008 - 0x0000)
struct BP_SR_PlayerControllerBase_C_GetPopupCrafting final
{
public:
	class UWindowWidget*                          Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SR_PlayerControllerBase_C_GetPopupCrafting) == 0x000008, "Wrong alignment on BP_SR_PlayerControllerBase_C_GetPopupCrafting");
static_assert(sizeof(BP_SR_PlayerControllerBase_C_GetPopupCrafting) == 0x000008, "Wrong size on BP_SR_PlayerControllerBase_C_GetPopupCrafting");
static_assert(offsetof(BP_SR_PlayerControllerBase_C_GetPopupCrafting, Widget) == 0x000000, "Member 'BP_SR_PlayerControllerBase_C_GetPopupCrafting::Widget' has a wrong offset!");

// Function BP_SR_PlayerControllerBase.BP_SR_PlayerControllerBase_C.GetMissionSelect
// 0x0008 (0x0008 - 0x0000)
struct BP_SR_PlayerControllerBase_C_GetMissionSelect final
{
public:
	class UWindowWidget*                          Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SR_PlayerControllerBase_C_GetMissionSelect) == 0x000008, "Wrong alignment on BP_SR_PlayerControllerBase_C_GetMissionSelect");
static_assert(sizeof(BP_SR_PlayerControllerBase_C_GetMissionSelect) == 0x000008, "Wrong size on BP_SR_PlayerControllerBase_C_GetMissionSelect");
static_assert(offsetof(BP_SR_PlayerControllerBase_C_GetMissionSelect, Widget) == 0x000000, "Member 'BP_SR_PlayerControllerBase_C_GetMissionSelect::Widget' has a wrong offset!");

}

