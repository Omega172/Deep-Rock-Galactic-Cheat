#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_Overclock_Details

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "SlateCore_structs.hpp"


namespace CG::Params
{

// Function ITM_Overclock_Details.ITM_Overclock_Details_C.ExecuteUbergraph_ITM_Overclock_Details
// 0x0008 (0x0008 - 0x0000)
struct ITM_Overclock_Details_C_ExecuteUbergraph_ITM_Overclock_Details final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Overclock_Details_C_ExecuteUbergraph_ITM_Overclock_Details) == 0x000004, "Wrong alignment on ITM_Overclock_Details_C_ExecuteUbergraph_ITM_Overclock_Details");
static_assert(sizeof(ITM_Overclock_Details_C_ExecuteUbergraph_ITM_Overclock_Details) == 0x000008, "Wrong size on ITM_Overclock_Details_C_ExecuteUbergraph_ITM_Overclock_Details");
static_assert(offsetof(ITM_Overclock_Details_C_ExecuteUbergraph_ITM_Overclock_Details, EntryPoint) == 0x000000, "Member 'ITM_Overclock_Details_C_ExecuteUbergraph_ITM_Overclock_Details::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_ExecuteUbergraph_ITM_Overclock_Details, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ITM_Overclock_Details_C_ExecuteUbergraph_ITM_Overclock_Details::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function ITM_Overclock_Details.ITM_Overclock_Details_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_Overclock_Details_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_Overclock_Details_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_Overclock_Details_C_PreConstruct");
static_assert(sizeof(ITM_Overclock_Details_C_PreConstruct) == 0x000001, "Wrong size on ITM_Overclock_Details_C_PreConstruct");
static_assert(offsetof(ITM_Overclock_Details_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_Overclock_Details_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_Overclock_Details.ITM_Overclock_Details_C.SetData
// 0x00B0 (0x00B0 - 0x0000)
struct ITM_Overclock_Details_C_SetData final
{
public:
	class UItemUpgrade*                           InUpgrade;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FItemUpgradeStatText>           NegativeStats;                                     // 0x0008(0x0010)(Edit, BlueprintVisible)
	struct FItemUpgradeStatText                   Stat;                                              // 0x0018(0x0020)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329B[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329C[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329D[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemUpgradeStatText                   CallFunc_Array_Get_Item;                           // 0x0058(0x0020)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329E[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemUpgradeStatText                   CallFunc_Array_Get_Item_1;                         // 0x0080(0x0020)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329F[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclock_Details_C_SetData) == 0x000008, "Wrong alignment on ITM_Overclock_Details_C_SetData");
static_assert(sizeof(ITM_Overclock_Details_C_SetData) == 0x0000B0, "Wrong size on ITM_Overclock_Details_C_SetData");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, InUpgrade) == 0x000000, "Member 'ITM_Overclock_Details_C_SetData::InUpgrade' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, NegativeStats) == 0x000008, "Member 'ITM_Overclock_Details_C_SetData::NegativeStats' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, Stat) == 0x000018, "Member 'ITM_Overclock_Details_C_SetData::Stat' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, Temp_int_Array_Index_Variable) == 0x000038, "Member 'ITM_Overclock_Details_C_SetData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'ITM_Overclock_Details_C_SetData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'ITM_Overclock_Details_C_SetData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_Array_Get_Item) == 0x000058, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'ITM_Overclock_Details_C_SetData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_SetData, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'ITM_Overclock_Details_C_SetData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function ITM_Overclock_Details.ITM_Overclock_Details_C.AddStat
// 0x0070 (0x0070 - 0x0000)
struct ITM_Overclock_Details_C_AddStat final
{
public:
	struct FItemUpgradeStatText                   InStat;                                            // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         Temp_float_Variable;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A0[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A1[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_Overclock_Details_Item_C*          CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBoxEx_OutSlot;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           CallFunc_AddChildToVerticalBoxEx_OutVerticalBox;   // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITM_Overclock_Details_Item_C*          CallFunc_AddChildToVerticalBoxEx_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_Overclock_Details_C_AddStat) == 0x000008, "Wrong alignment on ITM_Overclock_Details_C_AddStat");
static_assert(sizeof(ITM_Overclock_Details_C_AddStat) == 0x000070, "Wrong size on ITM_Overclock_Details_C_AddStat");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, InStat) == 0x000000, "Member 'ITM_Overclock_Details_C_AddStat::InStat' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, Temp_float_Variable) == 0x000020, "Member 'ITM_Overclock_Details_C_AddStat::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, CallFunc_GetChildrenCount_ReturnValue) == 0x000024, "Member 'ITM_Overclock_Details_C_AddStat::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'ITM_Overclock_Details_C_AddStat::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'ITM_Overclock_Details_C_AddStat::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, Temp_bool_Variable) == 0x000030, "Member 'ITM_Overclock_Details_C_AddStat::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, K2Node_Select_Default) == 0x000034, "Member 'ITM_Overclock_Details_C_AddStat::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, K2Node_MakeStruct_Margin) == 0x000038, "Member 'ITM_Overclock_Details_C_AddStat::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'ITM_Overclock_Details_C_AddStat::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, CallFunc_Create_ReturnValue) == 0x000050, "Member 'ITM_Overclock_Details_C_AddStat::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, CallFunc_AddChildToVerticalBoxEx_OutSlot) == 0x000058, "Member 'ITM_Overclock_Details_C_AddStat::CallFunc_AddChildToVerticalBoxEx_OutSlot' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, CallFunc_AddChildToVerticalBoxEx_OutVerticalBox) == 0x000060, "Member 'ITM_Overclock_Details_C_AddStat::CallFunc_AddChildToVerticalBoxEx_OutVerticalBox' has a wrong offset!");
static_assert(offsetof(ITM_Overclock_Details_C_AddStat, CallFunc_AddChildToVerticalBoxEx_ReturnValue) == 0x000068, "Member 'ITM_Overclock_Details_C_AddStat::CallFunc_AddChildToVerticalBoxEx_ReturnValue' has a wrong offset!");

}

