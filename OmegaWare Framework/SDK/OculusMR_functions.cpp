#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OculusMR

#include "Basic.hpp"

#include "OculusMR_classes.hpp"
#include "OculusMR_parameters.hpp"


namespace CG
{

// Function OculusMR.OculusMR_PlaneMeshComponent.AddCustomMeshTriangles
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FOculusMR_PlaneMeshTriangle>Triangles                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UOculusMR_PlaneMeshComponent::AddCustomMeshTriangles(const TArray<struct FOculusMR_PlaneMeshTriangle>& Triangles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_PlaneMeshComponent", "AddCustomMeshTriangles");

	Params::OculusMR_PlaneMeshComponent_AddCustomMeshTriangles Parms{};

	Parms.Triangles = std::move(Triangles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OculusMR.OculusMR_PlaneMeshComponent.ClearCustomMeshTriangles
// (Final, Native, Public, BlueprintCallable)

void UOculusMR_PlaneMeshComponent::ClearCustomMeshTriangles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_PlaneMeshComponent", "ClearCustomMeshTriangles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OculusMR.OculusMR_PlaneMeshComponent.SetCustomMeshTriangles
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FOculusMR_PlaneMeshTriangle>Triangles                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOculusMR_PlaneMeshComponent::SetCustomMeshTriangles(const TArray<struct FOculusMR_PlaneMeshTriangle>& Triangles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_PlaneMeshComponent", "SetCustomMeshTriangles");

	Params::OculusMR_PlaneMeshComponent_SetCustomMeshTriangles Parms{};

	Parms.Triangles = std::move(Triangles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMR_Settings.BindToTrackedCameraIndexIfAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InTrackedCameraIndex                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOculusMR_Settings::BindToTrackedCameraIndexIfAvailable(int32 InTrackedCameraIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "BindToTrackedCameraIndexIfAvailable");

	Params::OculusMR_Settings_BindToTrackedCameraIndexIfAvailable Parms{};

	Parms.InTrackedCameraIndex = InTrackedCameraIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OculusMR.OculusMR_Settings.GetBindToTrackedCameraIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOculusMR_Settings::GetBindToTrackedCameraIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "GetBindToTrackedCameraIndex");

	Params::OculusMR_Settings_GetBindToTrackedCameraIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMR_Settings.GetCapturingCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOculusMR_CameraDeviceEnum              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOculusMR_CameraDeviceEnum UOculusMR_Settings::GetCapturingCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "GetCapturingCamera");

	Params::OculusMR_Settings_GetCapturingCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMR_Settings.GetCompositionMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOculusMR_CompositionMethod             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOculusMR_CompositionMethod UOculusMR_Settings::GetCompositionMethod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "GetCompositionMethod");

	Params::OculusMR_Settings_GetCompositionMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMR_Settings.GetIsCasting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOculusMR_Settings::GetIsCasting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "GetIsCasting");

	Params::OculusMR_Settings_GetIsCasting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMR_Settings.LoadFromIni
// (Final, Native, Public, BlueprintCallable)

void UOculusMR_Settings::LoadFromIni()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "LoadFromIni");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OculusMR.OculusMR_Settings.SetCapturingCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOculusMR_CameraDeviceEnum              Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOculusMR_Settings::SetCapturingCamera(EOculusMR_CameraDeviceEnum Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "SetCapturingCamera");

	Params::OculusMR_Settings_SetCapturingCamera Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OculusMR.OculusMR_Settings.SetCompositionMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOculusMR_CompositionMethod             Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOculusMR_Settings::SetCompositionMethod(EOculusMR_CompositionMethod Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "SetCompositionMethod");

	Params::OculusMR_Settings_SetCompositionMethod Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OculusMR.OculusMR_Settings.SetIsCasting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Val                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOculusMR_Settings::SetIsCasting(bool Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "SetIsCasting");

	Params::OculusMR_Settings_SetIsCasting Parms{};

	Parms.Val = Val;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OculusMR.OculusMR_Settings.SaveToIni
// (Final, Native, Public, BlueprintCallable, Const)

void UOculusMR_Settings::SaveToIni() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OculusMR_Settings", "SaveToIni");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OculusMR.OculusMRFunctionLibrary.GetMrcScalingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOculusMRFunctionLibrary::GetMrcScalingFactor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OculusMRFunctionLibrary", "GetMrcScalingFactor");

	Params::OculusMRFunctionLibrary_GetMrcScalingFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMRFunctionLibrary.GetOculusMRSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UOculusMR_Settings*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOculusMR_Settings* UOculusMRFunctionLibrary::GetOculusMRSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OculusMRFunctionLibrary", "GetOculusMRSettings");

	Params::OculusMRFunctionLibrary_GetOculusMRSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMRFunctionLibrary.GetTrackingReferenceComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* UOculusMRFunctionLibrary::GetTrackingReferenceComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OculusMRFunctionLibrary", "GetTrackingReferenceComponent");

	Params::OculusMRFunctionLibrary_GetTrackingReferenceComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMRFunctionLibrary.IsMrcActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOculusMRFunctionLibrary::IsMrcActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OculusMRFunctionLibrary", "IsMrcActive");

	Params::OculusMRFunctionLibrary_IsMrcActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMRFunctionLibrary.IsMrcEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOculusMRFunctionLibrary::IsMrcEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OculusMRFunctionLibrary", "IsMrcEnabled");

	Params::OculusMRFunctionLibrary_IsMrcEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMRFunctionLibrary.SetMrcScalingFactor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// float                                   ScalingFactor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOculusMRFunctionLibrary::SetMrcScalingFactor(float ScalingFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OculusMRFunctionLibrary", "SetMrcScalingFactor");

	Params::OculusMRFunctionLibrary_SetMrcScalingFactor Parms{};

	Parms.ScalingFactor = ScalingFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OculusMR.OculusMRFunctionLibrary.SetTrackingReferenceComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOculusMRFunctionLibrary::SetTrackingReferenceComponent(class USceneComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OculusMRFunctionLibrary", "SetTrackingReferenceComponent");

	Params::OculusMRFunctionLibrary_SetTrackingReferenceComponent Parms{};

	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

