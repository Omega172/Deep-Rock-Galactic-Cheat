#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BaseSpaceRigConsole

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FSD_structs.hpp"


namespace CG
{

// BlueprintGeneratedClass BP_BaseSpaceRigConsole.BP_BaseSpaceRigConsole_C
// 0x00D0 (0x02F0 - 0x0220)
class ABP_BaseSpaceRigConsole_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   TextRender;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstantUsable*                         InstantUsable;                                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlayerController_SpaceRig_C*> PlayersThatHaveUsed;                               // 0x0260(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class FString                                 StatCountKey;                                      // 0x0270(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   ConsoleTitle;                                      // 0x0280(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly)
	class FText                                   NotificationText;                                  // 0x0298(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                             NotificationIcon;                                  // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   ConsoleWindowClass;                                // 0x02B8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash)
	int32                                         Window_Z_Order;                                    // 0x02E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CreateMenuOnStartup;                               // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B13[0x3];                                     // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWindowWidget*                          WindowInstance;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BaseSpaceRigConsole(int32 EntryPoint);
	void ReceiveBeginPlay();
	void BndEvt__InstantUsable_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
	void PIE_QuickUse();
	void OnWindowCreated(class UWindowWidget* WindowWidget);
	void OnOpenConsole(class ABP_PlayerController_SpaceRig_C* InPlayerController);
	void UserConstructionScript();
	void IsNewPlayer(class ABP_PlayerController_SpaceRig_C* PlayerController, bool* Param_IsNewPlayer);
	void SetCreateMenuOnStartUp(bool InCreateOnStartUp);
	void ShowNotification(bool IsVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BaseSpaceRigConsole_C">();
	}
	static class ABP_BaseSpaceRigConsole_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BaseSpaceRigConsole_C>();
	}
};
static_assert(alignof(ABP_BaseSpaceRigConsole_C) == 0x000008, "Wrong alignment on ABP_BaseSpaceRigConsole_C");
static_assert(sizeof(ABP_BaseSpaceRigConsole_C) == 0x0002F0, "Wrong size on ABP_BaseSpaceRigConsole_C");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, UberGraphFrame) == 0x000220, "Member 'ABP_BaseSpaceRigConsole_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, PointLight) == 0x000228, "Member 'ABP_BaseSpaceRigConsole_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, TextRender) == 0x000230, "Member 'ABP_BaseSpaceRigConsole_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, Widget) == 0x000238, "Member 'ABP_BaseSpaceRigConsole_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, StaticMesh1) == 0x000240, "Member 'ABP_BaseSpaceRigConsole_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, Box) == 0x000248, "Member 'ABP_BaseSpaceRigConsole_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, InstantUsable) == 0x000250, "Member 'ABP_BaseSpaceRigConsole_C::InstantUsable' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, DefaultSceneRoot) == 0x000258, "Member 'ABP_BaseSpaceRigConsole_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, PlayersThatHaveUsed) == 0x000260, "Member 'ABP_BaseSpaceRigConsole_C::PlayersThatHaveUsed' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, StatCountKey) == 0x000270, "Member 'ABP_BaseSpaceRigConsole_C::StatCountKey' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, ConsoleTitle) == 0x000280, "Member 'ABP_BaseSpaceRigConsole_C::ConsoleTitle' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, NotificationText) == 0x000298, "Member 'ABP_BaseSpaceRigConsole_C::NotificationText' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, NotificationIcon) == 0x0002B0, "Member 'ABP_BaseSpaceRigConsole_C::NotificationIcon' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, ConsoleWindowClass) == 0x0002B8, "Member 'ABP_BaseSpaceRigConsole_C::ConsoleWindowClass' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, Window_Z_Order) == 0x0002E0, "Member 'ABP_BaseSpaceRigConsole_C::Window_Z_Order' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, CreateMenuOnStartup) == 0x0002E4, "Member 'ABP_BaseSpaceRigConsole_C::CreateMenuOnStartup' has a wrong offset!");
static_assert(offsetof(ABP_BaseSpaceRigConsole_C, WindowInstance) == 0x0002E8, "Member 'ABP_BaseSpaceRigConsole_C::WindowInstance' has a wrong offset!");

}

