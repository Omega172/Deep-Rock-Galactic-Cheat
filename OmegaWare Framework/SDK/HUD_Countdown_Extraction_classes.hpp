#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Countdown_Extraction

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_Countdown_Extraction.HUD_Countdown_Extraction_C
// 0x0020 (0x0280 - 0x0260)
class UHUD_Countdown_Extraction_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_HUD_BracketWindowBig_Single_C*   Basic_HUD_BracketWindowBig_Single;                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATA_Header;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATA_Time;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HUD_Countdown_Extraction(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void OnCountdownFinished();
	void OnCountdownTimeChanged(int32 SecondsLeft);
	void CountdownStarted(const class FText& CountdownText);
	void FormatTime(int32 Time, class FText* Text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_Countdown_Extraction_C">();
	}
	static class UHUD_Countdown_Extraction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_Countdown_Extraction_C>();
	}
};
static_assert(alignof(UHUD_Countdown_Extraction_C) == 0x000008, "Wrong alignment on UHUD_Countdown_Extraction_C");
static_assert(sizeof(UHUD_Countdown_Extraction_C) == 0x000280, "Wrong size on UHUD_Countdown_Extraction_C");
static_assert(offsetof(UHUD_Countdown_Extraction_C, UberGraphFrame) == 0x000260, "Member 'UHUD_Countdown_Extraction_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_Countdown_Extraction_C, Basic_HUD_BracketWindowBig_Single) == 0x000268, "Member 'UHUD_Countdown_Extraction_C::Basic_HUD_BracketWindowBig_Single' has a wrong offset!");
static_assert(offsetof(UHUD_Countdown_Extraction_C, DATA_Header) == 0x000270, "Member 'UHUD_Countdown_Extraction_C::DATA_Header' has a wrong offset!");
static_assert(offsetof(UHUD_Countdown_Extraction_C, DATA_Time) == 0x000278, "Member 'UHUD_Countdown_Extraction_C::DATA_Time' has a wrong offset!");

}

