#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITM_SkinItem

#include "Basic.hpp"

#include "ENUM_MenuColors_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function ITM_SkinItem.ITM_SkinItem_C.OnSkinClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_SkinItem_C_OnSkinClicked__DelegateSignature final
{
public:
	class UITM_SkinItem_C*                        Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SkinItem_C_OnSkinClicked__DelegateSignature) == 0x000008, "Wrong alignment on ITM_SkinItem_C_OnSkinClicked__DelegateSignature");
static_assert(sizeof(ITM_SkinItem_C_OnSkinClicked__DelegateSignature) == 0x000008, "Wrong size on ITM_SkinItem_C_OnSkinClicked__DelegateSignature");
static_assert(offsetof(ITM_SkinItem_C_OnSkinClicked__DelegateSignature, Param_Item) == 0x000000, "Member 'ITM_SkinItem_C_OnSkinClicked__DelegateSignature::Param_Item' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.OnHovering__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_SkinItem_C_OnHovering__DelegateSignature final
{
public:
	class UITM_SkinItem_C*                        SkinItem;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SkinItem_C_OnHovering__DelegateSignature) == 0x000008, "Wrong alignment on ITM_SkinItem_C_OnHovering__DelegateSignature");
static_assert(sizeof(ITM_SkinItem_C_OnHovering__DelegateSignature) == 0x000008, "Wrong size on ITM_SkinItem_C_OnHovering__DelegateSignature");
static_assert(offsetof(ITM_SkinItem_C_OnHovering__DelegateSignature, SkinItem) == 0x000000, "Member 'ITM_SkinItem_C_OnHovering__DelegateSignature::SkinItem' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.OnUnhovering__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_SkinItem_C_OnUnhovering__DelegateSignature final
{
public:
	class UITM_SkinItem_C*                        SkinItem;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SkinItem_C_OnUnhovering__DelegateSignature) == 0x000008, "Wrong alignment on ITM_SkinItem_C_OnUnhovering__DelegateSignature");
static_assert(sizeof(ITM_SkinItem_C_OnUnhovering__DelegateSignature) == 0x000008, "Wrong size on ITM_SkinItem_C_OnUnhovering__DelegateSignature");
static_assert(offsetof(ITM_SkinItem_C_OnUnhovering__DelegateSignature, SkinItem) == 0x000000, "Member 'ITM_SkinItem_C_OnUnhovering__DelegateSignature::SkinItem' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.OnNotificationRemoved__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ITM_SkinItem_C_OnNotificationRemoved__DelegateSignature final
{
public:
	class UITM_SkinItem_C*                        Param_Skin;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SkinItem_C_OnNotificationRemoved__DelegateSignature) == 0x000008, "Wrong alignment on ITM_SkinItem_C_OnNotificationRemoved__DelegateSignature");
static_assert(sizeof(ITM_SkinItem_C_OnNotificationRemoved__DelegateSignature) == 0x000008, "Wrong size on ITM_SkinItem_C_OnNotificationRemoved__DelegateSignature");
static_assert(offsetof(ITM_SkinItem_C_OnNotificationRemoved__DelegateSignature, Param_Skin) == 0x000000, "Member 'ITM_SkinItem_C_OnNotificationRemoved__DelegateSignature::Param_Skin' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.ExecuteUbergraph_ITM_SkinItem
// 0x0078 (0x0078 - 0x0000)
struct ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetOwningFSDPlayerState_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     CallFunc_GetSelectedCharacterID_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class APlayerCharacter>           CallFunc_GetCharacterClass_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayPitchedByClass_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnLocked_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUnLocked_ReturnValue_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392B[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Duration;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Max_Columns;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392C[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392D[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DelayBeforeRefresh;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem) == 0x000008, "Wrong alignment on ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem");
static_assert(sizeof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem) == 0x000078, "Wrong size on ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, EntryPoint) == 0x000000, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_GetOwningFSDPlayerState_ReturnValue) == 0x000008, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_GetOwningFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_GetSelectedCharacterID_ReturnValue) == 0x000010, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_GetSelectedCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_GetCharacterClass_ReturnValue) == 0x000018, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_GetCharacterClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_PlayPitchedByClass_ReturnValue) == 0x000020, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_PlayPitchedByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_IsUnLocked_ReturnValue) == 0x000028, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_IsUnLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_IsUnLocked_ReturnValue_1) == 0x000029, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_IsUnLocked_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, K2Node_CustomEvent_Duration) == 0x00002C, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, K2Node_CustomEvent_Max_Columns) == 0x000030, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::K2Node_CustomEvent_Max_Columns' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_Percent_IntInt_ReturnValue) == 0x000048, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00004C, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, K2Node_Event_IsDesignTime) == 0x000060, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, CallFunc_PlayAnimation_ReturnValue_1) == 0x000068, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem, K2Node_CustomEvent_DelayBeforeRefresh) == 0x000070, "Member 'ITM_SkinItem_C_ExecuteUbergraph_ITM_SkinItem::K2Node_CustomEvent_DelayBeforeRefresh' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.RefreshNotificationIcon
// 0x0004 (0x0004 - 0x0000)
struct ITM_SkinItem_C_RefreshNotificationIcon final
{
public:
	float                                         DelayBeforeRefresh;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SkinItem_C_RefreshNotificationIcon) == 0x000004, "Wrong alignment on ITM_SkinItem_C_RefreshNotificationIcon");
static_assert(sizeof(ITM_SkinItem_C_RefreshNotificationIcon) == 0x000004, "Wrong size on ITM_SkinItem_C_RefreshNotificationIcon");
static_assert(offsetof(ITM_SkinItem_C_RefreshNotificationIcon, DelayBeforeRefresh) == 0x000000, "Member 'ITM_SkinItem_C_RefreshNotificationIcon::DelayBeforeRefresh' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ITM_SkinItem_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_SkinItem_C_PreConstruct) == 0x000001, "Wrong alignment on ITM_SkinItem_C_PreConstruct");
static_assert(sizeof(ITM_SkinItem_C_PreConstruct) == 0x000001, "Wrong size on ITM_SkinItem_C_PreConstruct");
static_assert(offsetof(ITM_SkinItem_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ITM_SkinItem_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.Play Intro
// 0x0008 (0x0008 - 0x0000)
struct ITM_SkinItem_C_Play_Intro final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_Columns;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SkinItem_C_Play_Intro) == 0x000004, "Wrong alignment on ITM_SkinItem_C_Play_Intro");
static_assert(sizeof(ITM_SkinItem_C_Play_Intro) == 0x000008, "Wrong size on ITM_SkinItem_C_Play_Intro");
static_assert(offsetof(ITM_SkinItem_C_Play_Intro, Duration) == 0x000000, "Member 'ITM_SkinItem_C_Play_Intro::Duration' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_Play_Intro, Max_Columns) == 0x000004, "Member 'ITM_SkinItem_C_Play_Intro::Max_Columns' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.Refresh
// 0x0018 (0x0018 - 0x0000)
struct ITM_SkinItem_C_Refresh final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Equipped;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392E[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        CallFunc_GetOwningFSDPlayerState_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquippedOnItem_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_SkinItem_C_Refresh) == 0x000008, "Wrong alignment on ITM_SkinItem_C_Refresh");
static_assert(sizeof(ITM_SkinItem_C_Refresh) == 0x000018, "Wrong size on ITM_SkinItem_C_Refresh");
static_assert(offsetof(ITM_SkinItem_C_Refresh, Locked) == 0x000000, "Member 'ITM_SkinItem_C_Refresh::Locked' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_Refresh, Equipped) == 0x000001, "Member 'ITM_SkinItem_C_Refresh::Equipped' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_Refresh, CallFunc_GetOwningFSDPlayerState_ReturnValue) == 0x000008, "Member 'ITM_SkinItem_C_Refresh::CallFunc_GetOwningFSDPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_Refresh, CallFunc_IsLocked_ReturnValue) == 0x000010, "Member 'ITM_SkinItem_C_Refresh::CallFunc_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_Refresh, CallFunc_IsEquippedOnItem_ReturnValue) == 0x000011, "Member 'ITM_SkinItem_C_Refresh::CallFunc_IsEquippedOnItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'ITM_SkinItem_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_Refresh, CallFunc_IsValid_ReturnValue_1) == 0x000013, "Member 'ITM_SkinItem_C_Refresh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_Refresh, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'ITM_SkinItem_C_Refresh::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.IsUnlocked
// 0x0003 (0x0003 - 0x0000)
struct ITM_SkinItem_C_IsUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsLocked_IsLocked;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_SkinItem_C_IsUnlocked) == 0x000001, "Wrong alignment on ITM_SkinItem_C_IsUnlocked");
static_assert(sizeof(ITM_SkinItem_C_IsUnlocked) == 0x000003, "Wrong size on ITM_SkinItem_C_IsUnlocked");
static_assert(offsetof(ITM_SkinItem_C_IsUnlocked, ReturnValue) == 0x000000, "Member 'ITM_SkinItem_C_IsUnlocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_IsUnlocked, CallFunc_GetIsLocked_IsLocked) == 0x000001, "Member 'ITM_SkinItem_C_IsUnlocked::CallFunc_GetIsLocked_IsLocked' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_IsUnlocked, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ITM_SkinItem_C_IsUnlocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.SetState
// 0x0028 (0x0028 - 0x0000)
struct ITM_SkinItem_C_SetState final
{
public:
	class UItemSkin*                              InSkin;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InLocked;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InHovered;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InEquipped;                                        // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               Temp_byte_Variable_2;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MenuColors                               K2Node_Select_Default_1;                           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392F[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectMenuColor_OutputColor;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITM_SkinItem_C_SetState) == 0x000008, "Wrong alignment on ITM_SkinItem_C_SetState");
static_assert(sizeof(ITM_SkinItem_C_SetState) == 0x000028, "Wrong size on ITM_SkinItem_C_SetState");
static_assert(offsetof(ITM_SkinItem_C_SetState, InSkin) == 0x000000, "Member 'ITM_SkinItem_C_SetState::InSkin' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, InLocked) == 0x000008, "Member 'ITM_SkinItem_C_SetState::InLocked' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, InHovered) == 0x000009, "Member 'ITM_SkinItem_C_SetState::InHovered' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, InEquipped) == 0x00000A, "Member 'ITM_SkinItem_C_SetState::InEquipped' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, Temp_bool_Variable) == 0x00000B, "Member 'ITM_SkinItem_C_SetState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, Temp_byte_Variable) == 0x00000C, "Member 'ITM_SkinItem_C_SetState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, Temp_byte_Variable_1) == 0x00000D, "Member 'ITM_SkinItem_C_SetState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, Temp_bool_Variable_1) == 0x00000E, "Member 'ITM_SkinItem_C_SetState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, Temp_byte_Variable_2) == 0x00000F, "Member 'ITM_SkinItem_C_SetState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'ITM_SkinItem_C_SetState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'ITM_SkinItem_C_SetState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'ITM_SkinItem_C_SetState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, CallFunc_BooleanAND_ReturnValue_1) == 0x000013, "Member 'ITM_SkinItem_C_SetState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, K2Node_Select_Default) == 0x000014, "Member 'ITM_SkinItem_C_SetState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, K2Node_Select_Default_1) == 0x000015, "Member 'ITM_SkinItem_C_SetState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ITM_SkinItem_C_SetState, CallFunc_SelectMenuColor_OutputColor) == 0x000018, "Member 'ITM_SkinItem_C_SetState::CallFunc_SelectMenuColor_OutputColor' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.ClearEventHandlers
// 0x0001 (0x0001 - 0x0000)
struct ITM_SkinItem_C_ClearEventHandlers final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_SkinItem_C_ClearEventHandlers) == 0x000001, "Wrong alignment on ITM_SkinItem_C_ClearEventHandlers");
static_assert(sizeof(ITM_SkinItem_C_ClearEventHandlers) == 0x000001, "Wrong size on ITM_SkinItem_C_ClearEventHandlers");
static_assert(offsetof(ITM_SkinItem_C_ClearEventHandlers, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ITM_SkinItem_C_ClearEventHandlers::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITM_SkinItem.ITM_SkinItem_C.SetIsDefaultItem
// 0x0001 (0x0001 - 0x0000)
struct ITM_SkinItem_C_SetIsDefaultItem final
{
public:
	bool                                          InDefault;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITM_SkinItem_C_SetIsDefaultItem) == 0x000001, "Wrong alignment on ITM_SkinItem_C_SetIsDefaultItem");
static_assert(sizeof(ITM_SkinItem_C_SetIsDefaultItem) == 0x000001, "Wrong size on ITM_SkinItem_C_SetIsDefaultItem");
static_assert(offsetof(ITM_SkinItem_C_SetIsDefaultItem, InDefault) == 0x000000, "Member 'ITM_SkinItem_C_SetIsDefaultItem::InDefault' has a wrong offset!");

}

