#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_HUD_BracketWindowBig

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function Basic_HUD_BracketWindowBig.Basic_HUD_BracketWindowBig_C.ExecuteUbergraph_Basic_HUD_BracketWindowBig
// 0x003C (0x003C - 0x0000)
struct Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AE[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_CustomEvent_Edge_Tint;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_BG_Opacity;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor_1;                 // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig) == 0x000004, "Wrong alignment on Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig");
static_assert(sizeof(Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig) == 0x00003C, "Wrong size on Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig");
static_assert(offsetof(Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig, EntryPoint) == 0x000000, "Member 'Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig::EntryPoint' has a wrong offset!");
static_assert(offsetof(Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig, CallFunc_MenuColors_OutputColor) == 0x000004, "Member 'Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig, K2Node_Event_IsDesignTime) == 0x000014, "Member 'Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig, K2Node_CustomEvent_Edge_Tint) == 0x000018, "Member 'Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig::K2Node_CustomEvent_Edge_Tint' has a wrong offset!");
static_assert(offsetof(Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig, K2Node_CustomEvent_BG_Opacity) == 0x000028, "Member 'Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig::K2Node_CustomEvent_BG_Opacity' has a wrong offset!");
static_assert(offsetof(Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig, CallFunc_MenuColors_OutputColor_1) == 0x00002C, "Member 'Basic_HUD_BracketWindowBig_C_ExecuteUbergraph_Basic_HUD_BracketWindowBig::CallFunc_MenuColors_OutputColor_1' has a wrong offset!");

// Function Basic_HUD_BracketWindowBig.Basic_HUD_BracketWindowBig_C.Set Background Opacity
// 0x0004 (0x0004 - 0x0000)
struct Basic_HUD_BracketWindowBig_C_Set_Background_Opacity final
{
public:
	float                                         Param_BG_Opacity;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_HUD_BracketWindowBig_C_Set_Background_Opacity) == 0x000004, "Wrong alignment on Basic_HUD_BracketWindowBig_C_Set_Background_Opacity");
static_assert(sizeof(Basic_HUD_BracketWindowBig_C_Set_Background_Opacity) == 0x000004, "Wrong size on Basic_HUD_BracketWindowBig_C_Set_Background_Opacity");
static_assert(offsetof(Basic_HUD_BracketWindowBig_C_Set_Background_Opacity, Param_BG_Opacity) == 0x000000, "Member 'Basic_HUD_BracketWindowBig_C_Set_Background_Opacity::Param_BG_Opacity' has a wrong offset!");

// Function Basic_HUD_BracketWindowBig.Basic_HUD_BracketWindowBig_C.Set Edge Color
// 0x0010 (0x0010 - 0x0000)
struct Basic_HUD_BracketWindowBig_C_Set_Edge_Color final
{
public:
	struct FLinearColor                           Param_Edge_Tint;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_HUD_BracketWindowBig_C_Set_Edge_Color) == 0x000004, "Wrong alignment on Basic_HUD_BracketWindowBig_C_Set_Edge_Color");
static_assert(sizeof(Basic_HUD_BracketWindowBig_C_Set_Edge_Color) == 0x000010, "Wrong size on Basic_HUD_BracketWindowBig_C_Set_Edge_Color");
static_assert(offsetof(Basic_HUD_BracketWindowBig_C_Set_Edge_Color, Param_Edge_Tint) == 0x000000, "Member 'Basic_HUD_BracketWindowBig_C_Set_Edge_Color::Param_Edge_Tint' has a wrong offset!");

// Function Basic_HUD_BracketWindowBig.Basic_HUD_BracketWindowBig_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Basic_HUD_BracketWindowBig_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_HUD_BracketWindowBig_C_PreConstruct) == 0x000001, "Wrong alignment on Basic_HUD_BracketWindowBig_C_PreConstruct");
static_assert(sizeof(Basic_HUD_BracketWindowBig_C_PreConstruct) == 0x000001, "Wrong size on Basic_HUD_BracketWindowBig_C_PreConstruct");
static_assert(offsetof(Basic_HUD_BracketWindowBig_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Basic_HUD_BracketWindowBig_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

