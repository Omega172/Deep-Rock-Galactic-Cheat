#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Donkey

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// AnimBlueprintGeneratedClass ABP_Donkey.ABP_Donkey_C
// 0x06A0 (0x09E0 - 0x0340)
class UABP_Donkey_C final : public USimpleMovingEnemyAnimInstance
{
public:
	uint8                                         Pad_2F52[0x8];                                     // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0348(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0378(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x03A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x03F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0418(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0440(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0468(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0490(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x04B8(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0508(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0538(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x05B8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05E8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0668(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0698(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0718(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0748(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x07C8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07F8(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0878(0x0030)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x08A8(0x0050)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x08F8(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0928(0x00B0)()
	bool                                          IsDown;                                            // 0x09D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTrayOpen;                                        // 0x09D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Donkey(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Donkey_C">();
	}
	static class UABP_Donkey_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Donkey_C>();
	}
};
static_assert(alignof(UABP_Donkey_C) == 0x000010, "Wrong alignment on UABP_Donkey_C");
static_assert(sizeof(UABP_Donkey_C) == 0x0009E0, "Wrong size on UABP_Donkey_C");
static_assert(offsetof(UABP_Donkey_C, UberGraphFrame) == 0x000340, "Member 'UABP_Donkey_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_Root) == 0x000348, "Member 'UABP_Donkey_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_7) == 0x000378, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_6) == 0x0003A0, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_5) == 0x0003C8, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_4) == 0x0003F0, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_3) == 0x000418, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_2) == 0x000440, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult_1) == 0x000468, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_TransitionResult) == 0x000490, "Member 'UABP_Donkey_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequenceEvaluator_1) == 0x0004B8, "Member 'UABP_Donkey_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_6) == 0x000508, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer_4) == 0x000538, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_5) == 0x0005B8, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer_3) == 0x0005E8, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_4) == 0x000668, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer_2) == 0x000698, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_3) == 0x000718, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer_1) == 0x000748, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_2) == 0x0007C8, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequencePlayer) == 0x0007F8, "Member 'UABP_Donkey_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult_1) == 0x000878, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_SequenceEvaluator) == 0x0008A8, "Member 'UABP_Donkey_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateResult) == 0x0008F8, "Member 'UABP_Donkey_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, AnimGraphNode_StateMachine) == 0x000928, "Member 'UABP_Donkey_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, IsDown) == 0x0009D8, "Member 'UABP_Donkey_C::IsDown' has a wrong offset!");
static_assert(offsetof(UABP_Donkey_C, IsTrayOpen) == 0x0009D9, "Member 'UABP_Donkey_C::IsTrayOpen' has a wrong offset!");

}

