#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_AmmoCount_Holder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_AmmoCount_Holder.HUD_AmmoCount_Holder_C
// 0x0028 (0x0288 - 0x0260)
class UHUD_AmmoCount_Holder_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetSwitcher*                        CounterSwitcher;                                   // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Holder_Custom;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               Holder_Default;                                    // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInventoryComponent*                    Inventory;                                         // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HUD_AmmoCount_Holder(int32 EntryPoint);
	void OnItemUnequipped_Event(class AItem* Item);
	void OnItemEquipped_Event(class AItem* Item);
	void Construct();
	void SetFromItem(class AActor* InItem);
	void SetDefault();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_AmmoCount_Holder_C">();
	}
	static class UHUD_AmmoCount_Holder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_AmmoCount_Holder_C>();
	}
};
static_assert(alignof(UHUD_AmmoCount_Holder_C) == 0x000008, "Wrong alignment on UHUD_AmmoCount_Holder_C");
static_assert(sizeof(UHUD_AmmoCount_Holder_C) == 0x000288, "Wrong size on UHUD_AmmoCount_Holder_C");
static_assert(offsetof(UHUD_AmmoCount_Holder_C, UberGraphFrame) == 0x000260, "Member 'UHUD_AmmoCount_Holder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_AmmoCount_Holder_C, CounterSwitcher) == 0x000268, "Member 'UHUD_AmmoCount_Holder_C::CounterSwitcher' has a wrong offset!");
static_assert(offsetof(UHUD_AmmoCount_Holder_C, Holder_Custom) == 0x000270, "Member 'UHUD_AmmoCount_Holder_C::Holder_Custom' has a wrong offset!");
static_assert(offsetof(UHUD_AmmoCount_Holder_C, Holder_Default) == 0x000278, "Member 'UHUD_AmmoCount_Holder_C::Holder_Default' has a wrong offset!");
static_assert(offsetof(UHUD_AmmoCount_Holder_C, Inventory) == 0x000280, "Member 'UHUD_AmmoCount_Holder_C::Inventory' has a wrong offset!");

}

