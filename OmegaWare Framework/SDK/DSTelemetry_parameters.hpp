#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DSTelemetry

#include "Basic.hpp"


namespace CG::Params
{

// Function DSTelemetry.DJSONArray.CreateJSONArray
// 0x0010 (0x0010 - 0x0000)
struct DJSONArray_CreateJSONArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDJSONArray*                            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DJSONArray_CreateJSONArray) == 0x000008, "Wrong alignment on DJSONArray_CreateJSONArray");
static_assert(sizeof(DJSONArray_CreateJSONArray) == 0x000010, "Wrong size on DJSONArray_CreateJSONArray");
static_assert(offsetof(DJSONArray_CreateJSONArray, WorldContextObject) == 0x000000, "Member 'DJSONArray_CreateJSONArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(DJSONArray_CreateJSONArray, ReturnValue) == 0x000008, "Member 'DJSONArray_CreateJSONArray::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddBooleanArrayItem
// 0x0018 (0x0018 - 0x0000)
struct DJSONArray_AddBooleanArrayItem final
{
public:
	TArray<bool>                                  Item;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1122[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddBooleanArrayItem) == 0x000008, "Wrong alignment on DJSONArray_AddBooleanArrayItem");
static_assert(sizeof(DJSONArray_AddBooleanArrayItem) == 0x000018, "Wrong size on DJSONArray_AddBooleanArrayItem");
static_assert(offsetof(DJSONArray_AddBooleanArrayItem, Item) == 0x000000, "Member 'DJSONArray_AddBooleanArrayItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddBooleanArrayItem, ReturnValue) == 0x000010, "Member 'DJSONArray_AddBooleanArrayItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddBooleanItem
// 0x0002 (0x0002 - 0x0000)
struct DJSONArray_AddBooleanItem final
{
public:
	bool                                          Item;                                              // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DJSONArray_AddBooleanItem) == 0x000001, "Wrong alignment on DJSONArray_AddBooleanItem");
static_assert(sizeof(DJSONArray_AddBooleanItem) == 0x000002, "Wrong size on DJSONArray_AddBooleanItem");
static_assert(offsetof(DJSONArray_AddBooleanItem, Item) == 0x000000, "Member 'DJSONArray_AddBooleanItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddBooleanItem, ReturnValue) == 0x000001, "Member 'DJSONArray_AddBooleanItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddEmptyItem
// 0x0001 (0x0001 - 0x0000)
struct DJSONArray_AddEmptyItem final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DJSONArray_AddEmptyItem) == 0x000001, "Wrong alignment on DJSONArray_AddEmptyItem");
static_assert(sizeof(DJSONArray_AddEmptyItem) == 0x000001, "Wrong size on DJSONArray_AddEmptyItem");
static_assert(offsetof(DJSONArray_AddEmptyItem, ReturnValue) == 0x000000, "Member 'DJSONArray_AddEmptyItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddFloatArrayItem
// 0x0018 (0x0018 - 0x0000)
struct DJSONArray_AddFloatArrayItem final
{
public:
	TArray<float>                                 Item;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1123[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddFloatArrayItem) == 0x000008, "Wrong alignment on DJSONArray_AddFloatArrayItem");
static_assert(sizeof(DJSONArray_AddFloatArrayItem) == 0x000018, "Wrong size on DJSONArray_AddFloatArrayItem");
static_assert(offsetof(DJSONArray_AddFloatArrayItem, Item) == 0x000000, "Member 'DJSONArray_AddFloatArrayItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddFloatArrayItem, ReturnValue) == 0x000010, "Member 'DJSONArray_AddFloatArrayItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddFloatItem
// 0x0008 (0x0008 - 0x0000)
struct DJSONArray_AddFloatItem final
{
public:
	float                                         Item;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1124[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddFloatItem) == 0x000004, "Wrong alignment on DJSONArray_AddFloatItem");
static_assert(sizeof(DJSONArray_AddFloatItem) == 0x000008, "Wrong size on DJSONArray_AddFloatItem");
static_assert(offsetof(DJSONArray_AddFloatItem, Item) == 0x000000, "Member 'DJSONArray_AddFloatItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddFloatItem, ReturnValue) == 0x000004, "Member 'DJSONArray_AddFloatItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddIntegerArrayItem
// 0x0018 (0x0018 - 0x0000)
struct DJSONArray_AddIntegerArrayItem final
{
public:
	TArray<int32>                                 Item;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1125[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddIntegerArrayItem) == 0x000008, "Wrong alignment on DJSONArray_AddIntegerArrayItem");
static_assert(sizeof(DJSONArray_AddIntegerArrayItem) == 0x000018, "Wrong size on DJSONArray_AddIntegerArrayItem");
static_assert(offsetof(DJSONArray_AddIntegerArrayItem, Item) == 0x000000, "Member 'DJSONArray_AddIntegerArrayItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddIntegerArrayItem, ReturnValue) == 0x000010, "Member 'DJSONArray_AddIntegerArrayItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddIntegerItem
// 0x0008 (0x0008 - 0x0000)
struct DJSONArray_AddIntegerItem final
{
public:
	int32                                         Item;                                              // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1126[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddIntegerItem) == 0x000004, "Wrong alignment on DJSONArray_AddIntegerItem");
static_assert(sizeof(DJSONArray_AddIntegerItem) == 0x000008, "Wrong size on DJSONArray_AddIntegerItem");
static_assert(offsetof(DJSONArray_AddIntegerItem, Item) == 0x000000, "Member 'DJSONArray_AddIntegerItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddIntegerItem, ReturnValue) == 0x000004, "Member 'DJSONArray_AddIntegerItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddJSONArrayArrayItem
// 0x0018 (0x0018 - 0x0000)
struct DJSONArray_AddJSONArrayArrayItem final
{
public:
	TArray<class UDJSONArray*>                    Item;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1127[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddJSONArrayArrayItem) == 0x000008, "Wrong alignment on DJSONArray_AddJSONArrayArrayItem");
static_assert(sizeof(DJSONArray_AddJSONArrayArrayItem) == 0x000018, "Wrong size on DJSONArray_AddJSONArrayArrayItem");
static_assert(offsetof(DJSONArray_AddJSONArrayArrayItem, Item) == 0x000000, "Member 'DJSONArray_AddJSONArrayArrayItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddJSONArrayArrayItem, ReturnValue) == 0x000010, "Member 'DJSONArray_AddJSONArrayArrayItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddJSONArrayItem
// 0x0010 (0x0010 - 0x0000)
struct DJSONArray_AddJSONArrayItem final
{
public:
	const class UDJSONArray*                      Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1128[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddJSONArrayItem) == 0x000008, "Wrong alignment on DJSONArray_AddJSONArrayItem");
static_assert(sizeof(DJSONArray_AddJSONArrayItem) == 0x000010, "Wrong size on DJSONArray_AddJSONArrayItem");
static_assert(offsetof(DJSONArray_AddJSONArrayItem, Item) == 0x000000, "Member 'DJSONArray_AddJSONArrayItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddJSONArrayItem, ReturnValue) == 0x000008, "Member 'DJSONArray_AddJSONArrayItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddJSONObjectArrayItem
// 0x0018 (0x0018 - 0x0000)
struct DJSONArray_AddJSONObjectArrayItem final
{
public:
	TArray<class UDJSONObject*>                   Item;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1129[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddJSONObjectArrayItem) == 0x000008, "Wrong alignment on DJSONArray_AddJSONObjectArrayItem");
static_assert(sizeof(DJSONArray_AddJSONObjectArrayItem) == 0x000018, "Wrong size on DJSONArray_AddJSONObjectArrayItem");
static_assert(offsetof(DJSONArray_AddJSONObjectArrayItem, Item) == 0x000000, "Member 'DJSONArray_AddJSONObjectArrayItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddJSONObjectArrayItem, ReturnValue) == 0x000010, "Member 'DJSONArray_AddJSONObjectArrayItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddJSONObjectItem
// 0x0010 (0x0010 - 0x0000)
struct DJSONArray_AddJSONObjectItem final
{
public:
	const class UDJSONObject*                     Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_112A[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddJSONObjectItem) == 0x000008, "Wrong alignment on DJSONArray_AddJSONObjectItem");
static_assert(sizeof(DJSONArray_AddJSONObjectItem) == 0x000010, "Wrong size on DJSONArray_AddJSONObjectItem");
static_assert(offsetof(DJSONArray_AddJSONObjectItem, Item) == 0x000000, "Member 'DJSONArray_AddJSONObjectItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddJSONObjectItem, ReturnValue) == 0x000008, "Member 'DJSONArray_AddJSONObjectItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddStringArrayItem
// 0x0018 (0x0018 - 0x0000)
struct DJSONArray_AddStringArrayItem final
{
public:
	TArray<class FString>                         Item;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_112B[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddStringArrayItem) == 0x000008, "Wrong alignment on DJSONArray_AddStringArrayItem");
static_assert(sizeof(DJSONArray_AddStringArrayItem) == 0x000018, "Wrong size on DJSONArray_AddStringArrayItem");
static_assert(offsetof(DJSONArray_AddStringArrayItem, Item) == 0x000000, "Member 'DJSONArray_AddStringArrayItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddStringArrayItem, ReturnValue) == 0x000010, "Member 'DJSONArray_AddStringArrayItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AddStringItem
// 0x0018 (0x0018 - 0x0000)
struct DJSONArray_AddStringItem final
{
public:
	class FString                                 Item;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_112C[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONArray_AddStringItem) == 0x000008, "Wrong alignment on DJSONArray_AddStringItem");
static_assert(sizeof(DJSONArray_AddStringItem) == 0x000018, "Wrong size on DJSONArray_AddStringItem");
static_assert(offsetof(DJSONArray_AddStringItem, Item) == 0x000000, "Member 'DJSONArray_AddStringItem::Item' has a wrong offset!");
static_assert(offsetof(DJSONArray_AddStringItem, ReturnValue) == 0x000010, "Member 'DJSONArray_AddStringItem::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.Clear
// 0x0001 (0x0001 - 0x0000)
struct DJSONArray_Clear final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DJSONArray_Clear) == 0x000001, "Wrong alignment on DJSONArray_Clear");
static_assert(sizeof(DJSONArray_Clear) == 0x000001, "Wrong size on DJSONArray_Clear");
static_assert(offsetof(DJSONArray_Clear, ReturnValue) == 0x000000, "Member 'DJSONArray_Clear::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONArray.AsString
// 0x0010 (0x0010 - 0x0000)
struct DJSONArray_AsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DJSONArray_AsString) == 0x000008, "Wrong alignment on DJSONArray_AsString");
static_assert(sizeof(DJSONArray_AsString) == 0x000010, "Wrong size on DJSONArray_AsString");
static_assert(offsetof(DJSONArray_AsString, ReturnValue) == 0x000000, "Member 'DJSONArray_AsString::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.CreateJSONObject
// 0x0010 (0x0010 - 0x0000)
struct DJSONObject_CreateJSONObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDJSONObject*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DJSONObject_CreateJSONObject) == 0x000008, "Wrong alignment on DJSONObject_CreateJSONObject");
static_assert(sizeof(DJSONObject_CreateJSONObject) == 0x000010, "Wrong size on DJSONObject_CreateJSONObject");
static_assert(offsetof(DJSONObject_CreateJSONObject, WorldContextObject) == 0x000000, "Member 'DJSONObject_CreateJSONObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(DJSONObject_CreateJSONObject, ReturnValue) == 0x000008, "Member 'DJSONObject_CreateJSONObject::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddBooleanArrayField
// 0x0028 (0x0028 - 0x0000)
struct DJSONObject_AddBooleanArrayField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_112E[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddBooleanArrayField) == 0x000008, "Wrong alignment on DJSONObject_AddBooleanArrayField");
static_assert(sizeof(DJSONObject_AddBooleanArrayField) == 0x000028, "Wrong size on DJSONObject_AddBooleanArrayField");
static_assert(offsetof(DJSONObject_AddBooleanArrayField, Key) == 0x000000, "Member 'DJSONObject_AddBooleanArrayField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddBooleanArrayField, Value) == 0x000010, "Member 'DJSONObject_AddBooleanArrayField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddBooleanArrayField, ReturnValue) == 0x000020, "Member 'DJSONObject_AddBooleanArrayField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddBooleanField
// 0x0018 (0x0018 - 0x0000)
struct DJSONObject_AddBooleanField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_112F[0x6];                                     // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddBooleanField) == 0x000008, "Wrong alignment on DJSONObject_AddBooleanField");
static_assert(sizeof(DJSONObject_AddBooleanField) == 0x000018, "Wrong size on DJSONObject_AddBooleanField");
static_assert(offsetof(DJSONObject_AddBooleanField, Key) == 0x000000, "Member 'DJSONObject_AddBooleanField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddBooleanField, Value) == 0x000010, "Member 'DJSONObject_AddBooleanField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddBooleanField, ReturnValue) == 0x000011, "Member 'DJSONObject_AddBooleanField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddEmptyField
// 0x0018 (0x0018 - 0x0000)
struct DJSONObject_AddEmptyField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1130[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddEmptyField) == 0x000008, "Wrong alignment on DJSONObject_AddEmptyField");
static_assert(sizeof(DJSONObject_AddEmptyField) == 0x000018, "Wrong size on DJSONObject_AddEmptyField");
static_assert(offsetof(DJSONObject_AddEmptyField, Key) == 0x000000, "Member 'DJSONObject_AddEmptyField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddEmptyField, ReturnValue) == 0x000010, "Member 'DJSONObject_AddEmptyField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddFloatArrayField
// 0x0028 (0x0028 - 0x0000)
struct DJSONObject_AddFloatArrayField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1131[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddFloatArrayField) == 0x000008, "Wrong alignment on DJSONObject_AddFloatArrayField");
static_assert(sizeof(DJSONObject_AddFloatArrayField) == 0x000028, "Wrong size on DJSONObject_AddFloatArrayField");
static_assert(offsetof(DJSONObject_AddFloatArrayField, Key) == 0x000000, "Member 'DJSONObject_AddFloatArrayField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddFloatArrayField, Value) == 0x000010, "Member 'DJSONObject_AddFloatArrayField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddFloatArrayField, ReturnValue) == 0x000020, "Member 'DJSONObject_AddFloatArrayField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddFloatField
// 0x0018 (0x0018 - 0x0000)
struct DJSONObject_AddFloatField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1132[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddFloatField) == 0x000008, "Wrong alignment on DJSONObject_AddFloatField");
static_assert(sizeof(DJSONObject_AddFloatField) == 0x000018, "Wrong size on DJSONObject_AddFloatField");
static_assert(offsetof(DJSONObject_AddFloatField, Key) == 0x000000, "Member 'DJSONObject_AddFloatField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddFloatField, Value) == 0x000010, "Member 'DJSONObject_AddFloatField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddFloatField, ReturnValue) == 0x000014, "Member 'DJSONObject_AddFloatField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddIntegerArrayField
// 0x0028 (0x0028 - 0x0000)
struct DJSONObject_AddIntegerArrayField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1133[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddIntegerArrayField) == 0x000008, "Wrong alignment on DJSONObject_AddIntegerArrayField");
static_assert(sizeof(DJSONObject_AddIntegerArrayField) == 0x000028, "Wrong size on DJSONObject_AddIntegerArrayField");
static_assert(offsetof(DJSONObject_AddIntegerArrayField, Key) == 0x000000, "Member 'DJSONObject_AddIntegerArrayField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddIntegerArrayField, Value) == 0x000010, "Member 'DJSONObject_AddIntegerArrayField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddIntegerArrayField, ReturnValue) == 0x000020, "Member 'DJSONObject_AddIntegerArrayField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddIntegerField
// 0x0018 (0x0018 - 0x0000)
struct DJSONObject_AddIntegerField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1134[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddIntegerField) == 0x000008, "Wrong alignment on DJSONObject_AddIntegerField");
static_assert(sizeof(DJSONObject_AddIntegerField) == 0x000018, "Wrong size on DJSONObject_AddIntegerField");
static_assert(offsetof(DJSONObject_AddIntegerField, Key) == 0x000000, "Member 'DJSONObject_AddIntegerField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddIntegerField, Value) == 0x000010, "Member 'DJSONObject_AddIntegerField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddIntegerField, ReturnValue) == 0x000014, "Member 'DJSONObject_AddIntegerField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddJSONArrayArrayField
// 0x0028 (0x0028 - 0x0000)
struct DJSONObject_AddJSONArrayArrayField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDJSONArray*>                    Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1135[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddJSONArrayArrayField) == 0x000008, "Wrong alignment on DJSONObject_AddJSONArrayArrayField");
static_assert(sizeof(DJSONObject_AddJSONArrayArrayField) == 0x000028, "Wrong size on DJSONObject_AddJSONArrayArrayField");
static_assert(offsetof(DJSONObject_AddJSONArrayArrayField, Key) == 0x000000, "Member 'DJSONObject_AddJSONArrayArrayField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddJSONArrayArrayField, Value) == 0x000010, "Member 'DJSONObject_AddJSONArrayArrayField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddJSONArrayArrayField, ReturnValue) == 0x000020, "Member 'DJSONObject_AddJSONArrayArrayField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddJSONArrayField
// 0x0020 (0x0020 - 0x0000)
struct DJSONObject_AddJSONArrayField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDJSONArray*                      Value;                                             // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1136[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddJSONArrayField) == 0x000008, "Wrong alignment on DJSONObject_AddJSONArrayField");
static_assert(sizeof(DJSONObject_AddJSONArrayField) == 0x000020, "Wrong size on DJSONObject_AddJSONArrayField");
static_assert(offsetof(DJSONObject_AddJSONArrayField, Key) == 0x000000, "Member 'DJSONObject_AddJSONArrayField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddJSONArrayField, Value) == 0x000010, "Member 'DJSONObject_AddJSONArrayField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddJSONArrayField, ReturnValue) == 0x000018, "Member 'DJSONObject_AddJSONArrayField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddJSONObjectArrayField
// 0x0028 (0x0028 - 0x0000)
struct DJSONObject_AddJSONObjectArrayField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDJSONObject*>                   Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1137[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddJSONObjectArrayField) == 0x000008, "Wrong alignment on DJSONObject_AddJSONObjectArrayField");
static_assert(sizeof(DJSONObject_AddJSONObjectArrayField) == 0x000028, "Wrong size on DJSONObject_AddJSONObjectArrayField");
static_assert(offsetof(DJSONObject_AddJSONObjectArrayField, Key) == 0x000000, "Member 'DJSONObject_AddJSONObjectArrayField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddJSONObjectArrayField, Value) == 0x000010, "Member 'DJSONObject_AddJSONObjectArrayField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddJSONObjectArrayField, ReturnValue) == 0x000020, "Member 'DJSONObject_AddJSONObjectArrayField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddJSONObjectField
// 0x0020 (0x0020 - 0x0000)
struct DJSONObject_AddJSONObjectField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDJSONObject*                     Value;                                             // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1138[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddJSONObjectField) == 0x000008, "Wrong alignment on DJSONObject_AddJSONObjectField");
static_assert(sizeof(DJSONObject_AddJSONObjectField) == 0x000020, "Wrong size on DJSONObject_AddJSONObjectField");
static_assert(offsetof(DJSONObject_AddJSONObjectField, Key) == 0x000000, "Member 'DJSONObject_AddJSONObjectField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddJSONObjectField, Value) == 0x000010, "Member 'DJSONObject_AddJSONObjectField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddJSONObjectField, ReturnValue) == 0x000018, "Member 'DJSONObject_AddJSONObjectField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddStringArrayField
// 0x0028 (0x0028 - 0x0000)
struct DJSONObject_AddStringArrayField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1139[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddStringArrayField) == 0x000008, "Wrong alignment on DJSONObject_AddStringArrayField");
static_assert(sizeof(DJSONObject_AddStringArrayField) == 0x000028, "Wrong size on DJSONObject_AddStringArrayField");
static_assert(offsetof(DJSONObject_AddStringArrayField, Key) == 0x000000, "Member 'DJSONObject_AddStringArrayField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddStringArrayField, Value) == 0x000010, "Member 'DJSONObject_AddStringArrayField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddStringArrayField, ReturnValue) == 0x000020, "Member 'DJSONObject_AddStringArrayField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AddStringField
// 0x0028 (0x0028 - 0x0000)
struct DJSONObject_AddStringField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_113A[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DJSONObject_AddStringField) == 0x000008, "Wrong alignment on DJSONObject_AddStringField");
static_assert(sizeof(DJSONObject_AddStringField) == 0x000028, "Wrong size on DJSONObject_AddStringField");
static_assert(offsetof(DJSONObject_AddStringField, Key) == 0x000000, "Member 'DJSONObject_AddStringField::Key' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddStringField, Value) == 0x000010, "Member 'DJSONObject_AddStringField::Value' has a wrong offset!");
static_assert(offsetof(DJSONObject_AddStringField, ReturnValue) == 0x000020, "Member 'DJSONObject_AddStringField::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.Clear
// 0x0001 (0x0001 - 0x0000)
struct DJSONObject_Clear final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DJSONObject_Clear) == 0x000001, "Wrong alignment on DJSONObject_Clear");
static_assert(sizeof(DJSONObject_Clear) == 0x000001, "Wrong size on DJSONObject_Clear");
static_assert(offsetof(DJSONObject_Clear, ReturnValue) == 0x000000, "Member 'DJSONObject_Clear::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DJSONObject.AsString
// 0x0010 (0x0010 - 0x0000)
struct DJSONObject_AsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DJSONObject_AsString) == 0x000008, "Wrong alignment on DJSONObject_AsString");
static_assert(sizeof(DJSONObject_AsString) == 0x000010, "Wrong size on DJSONObject_AsString");
static_assert(offsetof(DJSONObject_AsString, ReturnValue) == 0x000000, "Member 'DJSONObject_AsString::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.CreateTelemetry
// 0x0010 (0x0010 - 0x0000)
struct DSTelemetry_CreateTelemetry final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDSTelemetry*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DSTelemetry_CreateTelemetry) == 0x000008, "Wrong alignment on DSTelemetry_CreateTelemetry");
static_assert(sizeof(DSTelemetry_CreateTelemetry) == 0x000010, "Wrong size on DSTelemetry_CreateTelemetry");
static_assert(offsetof(DSTelemetry_CreateTelemetry, WorldContextObject) == 0x000000, "Member 'DSTelemetry_CreateTelemetry::WorldContextObject' has a wrong offset!");
static_assert(offsetof(DSTelemetry_CreateTelemetry, ReturnValue) == 0x000008, "Member 'DSTelemetry_CreateTelemetry::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetOnlinePlatformIdentifier
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SetOnlinePlatformIdentifier final
{
public:
	class FString                                 OnlinePlatformIdentifier;                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_113C[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetOnlinePlatformIdentifier) == 0x000008, "Wrong alignment on DSTelemetry_SetOnlinePlatformIdentifier");
static_assert(sizeof(DSTelemetry_SetOnlinePlatformIdentifier) == 0x000018, "Wrong size on DSTelemetry_SetOnlinePlatformIdentifier");
static_assert(offsetof(DSTelemetry_SetOnlinePlatformIdentifier, OnlinePlatformIdentifier) == 0x000000, "Member 'DSTelemetry_SetOnlinePlatformIdentifier::OnlinePlatformIdentifier' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetOnlinePlatformIdentifier, ReturnValue) == 0x000010, "Member 'DSTelemetry_SetOnlinePlatformIdentifier::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetOnlinePlatformUserID
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SetOnlinePlatformUserID final
{
public:
	class FString                                 OnlinePlatformUserID;                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_113D[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetOnlinePlatformUserID) == 0x000008, "Wrong alignment on DSTelemetry_SetOnlinePlatformUserID");
static_assert(sizeof(DSTelemetry_SetOnlinePlatformUserID) == 0x000018, "Wrong size on DSTelemetry_SetOnlinePlatformUserID");
static_assert(offsetof(DSTelemetry_SetOnlinePlatformUserID, OnlinePlatformUserID) == 0x000000, "Member 'DSTelemetry_SetOnlinePlatformUserID::OnlinePlatformUserID' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetOnlinePlatformUserID, ReturnValue) == 0x000010, "Member 'DSTelemetry_SetOnlinePlatformUserID::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetStateBoolean
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SetStateBoolean final
{
public:
	class FString                                 StateKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          StateData;                                         // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_113E[0x6];                                     // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetStateBoolean) == 0x000008, "Wrong alignment on DSTelemetry_SetStateBoolean");
static_assert(sizeof(DSTelemetry_SetStateBoolean) == 0x000018, "Wrong size on DSTelemetry_SetStateBoolean");
static_assert(offsetof(DSTelemetry_SetStateBoolean, StateKey) == 0x000000, "Member 'DSTelemetry_SetStateBoolean::StateKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateBoolean, StateData) == 0x000010, "Member 'DSTelemetry_SetStateBoolean::StateData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateBoolean, ReturnValue) == 0x000011, "Member 'DSTelemetry_SetStateBoolean::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetStateEmpty
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SetStateEmpty final
{
public:
	class FString                                 StateKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_113F[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetStateEmpty) == 0x000008, "Wrong alignment on DSTelemetry_SetStateEmpty");
static_assert(sizeof(DSTelemetry_SetStateEmpty) == 0x000018, "Wrong size on DSTelemetry_SetStateEmpty");
static_assert(offsetof(DSTelemetry_SetStateEmpty, StateKey) == 0x000000, "Member 'DSTelemetry_SetStateEmpty::StateKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateEmpty, ReturnValue) == 0x000010, "Member 'DSTelemetry_SetStateEmpty::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetStateFloat
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SetStateFloat final
{
public:
	class FString                                 StateKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StateData;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1140[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetStateFloat) == 0x000008, "Wrong alignment on DSTelemetry_SetStateFloat");
static_assert(sizeof(DSTelemetry_SetStateFloat) == 0x000018, "Wrong size on DSTelemetry_SetStateFloat");
static_assert(offsetof(DSTelemetry_SetStateFloat, StateKey) == 0x000000, "Member 'DSTelemetry_SetStateFloat::StateKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateFloat, StateData) == 0x000010, "Member 'DSTelemetry_SetStateFloat::StateData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateFloat, ReturnValue) == 0x000014, "Member 'DSTelemetry_SetStateFloat::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetStateInteger
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SetStateInteger final
{
public:
	class FString                                 StateKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StateData;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1141[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetStateInteger) == 0x000008, "Wrong alignment on DSTelemetry_SetStateInteger");
static_assert(sizeof(DSTelemetry_SetStateInteger) == 0x000018, "Wrong size on DSTelemetry_SetStateInteger");
static_assert(offsetof(DSTelemetry_SetStateInteger, StateKey) == 0x000000, "Member 'DSTelemetry_SetStateInteger::StateKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateInteger, StateData) == 0x000010, "Member 'DSTelemetry_SetStateInteger::StateData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateInteger, ReturnValue) == 0x000014, "Member 'DSTelemetry_SetStateInteger::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetStateJSONArray
// 0x0020 (0x0020 - 0x0000)
struct DSTelemetry_SetStateJSONArray final
{
public:
	class FString                                 StateKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDJSONArray*                      StateData;                                         // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1142[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetStateJSONArray) == 0x000008, "Wrong alignment on DSTelemetry_SetStateJSONArray");
static_assert(sizeof(DSTelemetry_SetStateJSONArray) == 0x000020, "Wrong size on DSTelemetry_SetStateJSONArray");
static_assert(offsetof(DSTelemetry_SetStateJSONArray, StateKey) == 0x000000, "Member 'DSTelemetry_SetStateJSONArray::StateKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateJSONArray, StateData) == 0x000010, "Member 'DSTelemetry_SetStateJSONArray::StateData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateJSONArray, ReturnValue) == 0x000018, "Member 'DSTelemetry_SetStateJSONArray::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetStateJSONObject
// 0x0020 (0x0020 - 0x0000)
struct DSTelemetry_SetStateJSONObject final
{
public:
	class FString                                 StateKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDJSONObject*                     StateData;                                         // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1143[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetStateJSONObject) == 0x000008, "Wrong alignment on DSTelemetry_SetStateJSONObject");
static_assert(sizeof(DSTelemetry_SetStateJSONObject) == 0x000020, "Wrong size on DSTelemetry_SetStateJSONObject");
static_assert(offsetof(DSTelemetry_SetStateJSONObject, StateKey) == 0x000000, "Member 'DSTelemetry_SetStateJSONObject::StateKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateJSONObject, StateData) == 0x000010, "Member 'DSTelemetry_SetStateJSONObject::StateData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateJSONObject, ReturnValue) == 0x000018, "Member 'DSTelemetry_SetStateJSONObject::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetStateSerialized
// 0x0028 (0x0028 - 0x0000)
struct DSTelemetry_SetStateSerialized final
{
public:
	class FString                                 StateKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StateData;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1144[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetStateSerialized) == 0x000008, "Wrong alignment on DSTelemetry_SetStateSerialized");
static_assert(sizeof(DSTelemetry_SetStateSerialized) == 0x000028, "Wrong size on DSTelemetry_SetStateSerialized");
static_assert(offsetof(DSTelemetry_SetStateSerialized, StateKey) == 0x000000, "Member 'DSTelemetry_SetStateSerialized::StateKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateSerialized, StateData) == 0x000010, "Member 'DSTelemetry_SetStateSerialized::StateData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateSerialized, ReturnValue) == 0x000020, "Member 'DSTelemetry_SetStateSerialized::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SetStateString
// 0x0028 (0x0028 - 0x0000)
struct DSTelemetry_SetStateString final
{
public:
	class FString                                 StateKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StateData;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1145[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SetStateString) == 0x000008, "Wrong alignment on DSTelemetry_SetStateString");
static_assert(sizeof(DSTelemetry_SetStateString) == 0x000028, "Wrong size on DSTelemetry_SetStateString");
static_assert(offsetof(DSTelemetry_SetStateString, StateKey) == 0x000000, "Member 'DSTelemetry_SetStateString::StateKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateString, StateData) == 0x000010, "Member 'DSTelemetry_SetStateString::StateData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SetStateString, ReturnValue) == 0x000020, "Member 'DSTelemetry_SetStateString::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.Start
// 0x0028 (0x0028 - 0x0000)
struct DSTelemetry_Start final
{
public:
	class FString                                 GameId;                                            // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BuildID;                                           // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1146[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_Start) == 0x000008, "Wrong alignment on DSTelemetry_Start");
static_assert(sizeof(DSTelemetry_Start) == 0x000028, "Wrong size on DSTelemetry_Start");
static_assert(offsetof(DSTelemetry_Start, GameId) == 0x000000, "Member 'DSTelemetry_Start::GameId' has a wrong offset!");
static_assert(offsetof(DSTelemetry_Start, BuildID) == 0x000010, "Member 'DSTelemetry_Start::BuildID' has a wrong offset!");
static_assert(offsetof(DSTelemetry_Start, ReturnValue) == 0x000020, "Member 'DSTelemetry_Start::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SubmitBoolean
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SubmitBoolean final
{
public:
	class FString                                 EventKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EventData;                                         // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1147[0x6];                                     // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SubmitBoolean) == 0x000008, "Wrong alignment on DSTelemetry_SubmitBoolean");
static_assert(sizeof(DSTelemetry_SubmitBoolean) == 0x000018, "Wrong size on DSTelemetry_SubmitBoolean");
static_assert(offsetof(DSTelemetry_SubmitBoolean, EventKey) == 0x000000, "Member 'DSTelemetry_SubmitBoolean::EventKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitBoolean, EventData) == 0x000010, "Member 'DSTelemetry_SubmitBoolean::EventData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitBoolean, ReturnValue) == 0x000011, "Member 'DSTelemetry_SubmitBoolean::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SubmitEmpty
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SubmitEmpty final
{
public:
	class FString                                 EventKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1148[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SubmitEmpty) == 0x000008, "Wrong alignment on DSTelemetry_SubmitEmpty");
static_assert(sizeof(DSTelemetry_SubmitEmpty) == 0x000018, "Wrong size on DSTelemetry_SubmitEmpty");
static_assert(offsetof(DSTelemetry_SubmitEmpty, EventKey) == 0x000000, "Member 'DSTelemetry_SubmitEmpty::EventKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitEmpty, ReturnValue) == 0x000010, "Member 'DSTelemetry_SubmitEmpty::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SubmitFloat
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SubmitFloat final
{
public:
	class FString                                 EventKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         EventData;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1149[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SubmitFloat) == 0x000008, "Wrong alignment on DSTelemetry_SubmitFloat");
static_assert(sizeof(DSTelemetry_SubmitFloat) == 0x000018, "Wrong size on DSTelemetry_SubmitFloat");
static_assert(offsetof(DSTelemetry_SubmitFloat, EventKey) == 0x000000, "Member 'DSTelemetry_SubmitFloat::EventKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitFloat, EventData) == 0x000010, "Member 'DSTelemetry_SubmitFloat::EventData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitFloat, ReturnValue) == 0x000014, "Member 'DSTelemetry_SubmitFloat::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SubmitInteger
// 0x0018 (0x0018 - 0x0000)
struct DSTelemetry_SubmitInteger final
{
public:
	class FString                                 EventKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EventData;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114A[0x3];                                     // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SubmitInteger) == 0x000008, "Wrong alignment on DSTelemetry_SubmitInteger");
static_assert(sizeof(DSTelemetry_SubmitInteger) == 0x000018, "Wrong size on DSTelemetry_SubmitInteger");
static_assert(offsetof(DSTelemetry_SubmitInteger, EventKey) == 0x000000, "Member 'DSTelemetry_SubmitInteger::EventKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitInteger, EventData) == 0x000010, "Member 'DSTelemetry_SubmitInteger::EventData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitInteger, ReturnValue) == 0x000014, "Member 'DSTelemetry_SubmitInteger::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SubmitJSONArray
// 0x0020 (0x0020 - 0x0000)
struct DSTelemetry_SubmitJSONArray final
{
public:
	class FString                                 EventKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDJSONArray*                      EventData;                                         // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114B[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SubmitJSONArray) == 0x000008, "Wrong alignment on DSTelemetry_SubmitJSONArray");
static_assert(sizeof(DSTelemetry_SubmitJSONArray) == 0x000020, "Wrong size on DSTelemetry_SubmitJSONArray");
static_assert(offsetof(DSTelemetry_SubmitJSONArray, EventKey) == 0x000000, "Member 'DSTelemetry_SubmitJSONArray::EventKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitJSONArray, EventData) == 0x000010, "Member 'DSTelemetry_SubmitJSONArray::EventData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitJSONArray, ReturnValue) == 0x000018, "Member 'DSTelemetry_SubmitJSONArray::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SubmitJSONObject
// 0x0020 (0x0020 - 0x0000)
struct DSTelemetry_SubmitJSONObject final
{
public:
	class FString                                 EventKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UDJSONObject*                     EventData;                                         // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114C[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SubmitJSONObject) == 0x000008, "Wrong alignment on DSTelemetry_SubmitJSONObject");
static_assert(sizeof(DSTelemetry_SubmitJSONObject) == 0x000020, "Wrong size on DSTelemetry_SubmitJSONObject");
static_assert(offsetof(DSTelemetry_SubmitJSONObject, EventKey) == 0x000000, "Member 'DSTelemetry_SubmitJSONObject::EventKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitJSONObject, EventData) == 0x000010, "Member 'DSTelemetry_SubmitJSONObject::EventData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitJSONObject, ReturnValue) == 0x000018, "Member 'DSTelemetry_SubmitJSONObject::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SubmitSerialized
// 0x0028 (0x0028 - 0x0000)
struct DSTelemetry_SubmitSerialized final
{
public:
	class FString                                 EventKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventData;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114D[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SubmitSerialized) == 0x000008, "Wrong alignment on DSTelemetry_SubmitSerialized");
static_assert(sizeof(DSTelemetry_SubmitSerialized) == 0x000028, "Wrong size on DSTelemetry_SubmitSerialized");
static_assert(offsetof(DSTelemetry_SubmitSerialized, EventKey) == 0x000000, "Member 'DSTelemetry_SubmitSerialized::EventKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitSerialized, EventData) == 0x000010, "Member 'DSTelemetry_SubmitSerialized::EventData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitSerialized, ReturnValue) == 0x000020, "Member 'DSTelemetry_SubmitSerialized::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.SubmitString
// 0x0028 (0x0028 - 0x0000)
struct DSTelemetry_SubmitString final
{
public:
	class FString                                 EventKey;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventData;                                         // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114E[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(DSTelemetry_SubmitString) == 0x000008, "Wrong alignment on DSTelemetry_SubmitString");
static_assert(sizeof(DSTelemetry_SubmitString) == 0x000028, "Wrong size on DSTelemetry_SubmitString");
static_assert(offsetof(DSTelemetry_SubmitString, EventKey) == 0x000000, "Member 'DSTelemetry_SubmitString::EventKey' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitString, EventData) == 0x000010, "Member 'DSTelemetry_SubmitString::EventData' has a wrong offset!");
static_assert(offsetof(DSTelemetry_SubmitString, ReturnValue) == 0x000020, "Member 'DSTelemetry_SubmitString::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.GetTelemetryInstanceID
// 0x0008 (0x0008 - 0x0000)
struct DSTelemetry_GetTelemetryInstanceID final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DSTelemetry_GetTelemetryInstanceID) == 0x000008, "Wrong alignment on DSTelemetry_GetTelemetryInstanceID");
static_assert(sizeof(DSTelemetry_GetTelemetryInstanceID) == 0x000008, "Wrong size on DSTelemetry_GetTelemetryInstanceID");
static_assert(offsetof(DSTelemetry_GetTelemetryInstanceID, ReturnValue) == 0x000000, "Member 'DSTelemetry_GetTelemetryInstanceID::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.IsPaused
// 0x0001 (0x0001 - 0x0000)
struct DSTelemetry_IsPaused final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DSTelemetry_IsPaused) == 0x000001, "Wrong alignment on DSTelemetry_IsPaused");
static_assert(sizeof(DSTelemetry_IsPaused) == 0x000001, "Wrong size on DSTelemetry_IsPaused");
static_assert(offsetof(DSTelemetry_IsPaused, ReturnValue) == 0x000000, "Member 'DSTelemetry_IsPaused::ReturnValue' has a wrong offset!");

// Function DSTelemetry.DSTelemetry.IsTerminated
// 0x0001 (0x0001 - 0x0000)
struct DSTelemetry_IsTerminated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(DSTelemetry_IsTerminated) == 0x000001, "Wrong alignment on DSTelemetry_IsTerminated");
static_assert(sizeof(DSTelemetry_IsTerminated) == 0x000001, "Wrong size on DSTelemetry_IsTerminated");
static_assert(offsetof(DSTelemetry_IsTerminated, ReturnValue) == 0x000000, "Member 'DSTelemetry_IsTerminated::ReturnValue' has a wrong offset!");

}

