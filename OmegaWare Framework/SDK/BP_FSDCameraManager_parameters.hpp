#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FSDCameraManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "FSD_structs.hpp"


namespace CG::Params
{

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.ExecuteUbergraph_BP_FSDCameraManager
// 0x0188 (0x0188 - 0x0000)
struct BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3066[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGamePaused_ReturnValue_1;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3067[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_1;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue_2;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3068[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3069[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_2;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_306A[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306B[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_3;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base_1;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306C[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_1;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_4;  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_5;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306D[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base_2;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306E[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Active;                         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_306F[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character_1;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECharacterState                               CallFunc_GetCurrentState_ReturnValue;              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3070[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_6;  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_7;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base_3;  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3071[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character_2;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHUDVisibleFlagSet_ReturnValue;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3072[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_CustomEvent_LoaderLevelSequence;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_8;  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base_4;  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3073[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_9;  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_10; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerControllerBase_C*             K2Node_DynamicCast_AsBP_Player_Controller_Base_5;  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager) == 0x000008, "Wrong alignment on BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager");
static_assert(sizeof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager) == 0x000188, "Wrong size on BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, EntryPoint) == 0x000000, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000008, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_SetGamePaused_ReturnValue) == 0x000010, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_SetGamePaused_ReturnValue_1) == 0x000011, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_SetGamePaused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_1) == 0x000018, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_SetGamePaused_ReturnValue_2) == 0x000020, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_SetGamePaused_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_AsBP_Player_Controller_Base) == 0x000028, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_AsBP_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_2) == 0x000038, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_Event_DeltaSeconds) == 0x000048, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_AsPlayer_Character) == 0x000050, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_3) == 0x000060, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_AsBP_Player_Controller_Base_1) == 0x000068, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_AsBP_Player_Controller_Base_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000078, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetFSDGameInstance_ReturnValue_1) == 0x000080, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetFSDGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_4) == 0x000088, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_5) == 0x000090, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_IsLocalController_ReturnValue) == 0x000098, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_AsBP_Player_Controller_Base_2) == 0x0000A0, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_AsBP_Player_Controller_Base_2' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_bSuccess_3) == 0x0000A8, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0000B0, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_CustomEvent_Active) == 0x0000B8, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_CustomEvent_Active' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_AsPlayer_Character_1) == 0x0000C0, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_AsPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_bSuccess_4) == 0x0000C8, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetCurrentState_ReturnValue) == 0x0000C9, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CA, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000CB, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_6) == 0x0000D0, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_7) == 0x0000D8, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_K2_GetPawn_ReturnValue_2) == 0x0000E0, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_AsBP_Player_Controller_Base_3) == 0x0000E8, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_AsBP_Player_Controller_Base_3' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_bSuccess_5) == 0x0000F0, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_AsPlayer_Character_2) == 0x0000F8, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_AsPlayer_Character_2' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_bSuccess_6) == 0x000100, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_IsHUDVisibleFlagSet_ReturnValue) == 0x000101, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_IsHUDVisibleFlagSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_Conv_FloatToString_ReturnValue) == 0x000108, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000128, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000138, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_CustomEvent_LoaderLevelSequence) == 0x000148, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_CustomEvent_LoaderLevelSequence' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_8) == 0x000150, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_AsBP_Player_Controller_Base_4) == 0x000158, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_AsBP_Player_Controller_Base_4' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_bSuccess_7) == 0x000160, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_9) == 0x000168, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, CallFunc_GetOwningPlayerController_ReturnValue_10) == 0x000170, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::CallFunc_GetOwningPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_AsBP_Player_Controller_Base_5) == 0x000178, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_AsBP_Player_Controller_Base_5' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager, K2Node_DynamicCast_bSuccess_8) == 0x000180, "Member 'BP_FSDCameraManager_C_ExecuteUbergraph_BP_FSDCameraManager::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.LoaderStart
// 0x0008 (0x0008 - 0x0000)
struct BP_FSDCameraManager_C_LoaderStart final
{
public:
	class ULevelSequence*                         LoaderLevelSequence;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FSDCameraManager_C_LoaderStart) == 0x000008, "Wrong alignment on BP_FSDCameraManager_C_LoaderStart");
static_assert(sizeof(BP_FSDCameraManager_C_LoaderStart) == 0x000008, "Wrong size on BP_FSDCameraManager_C_LoaderStart");
static_assert(offsetof(BP_FSDCameraManager_C_LoaderStart, LoaderLevelSequence) == 0x000000, "Member 'BP_FSDCameraManager_C_LoaderStart::LoaderLevelSequence' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.TogglePhotographyMode
// 0x0001 (0x0001 - 0x0000)
struct BP_FSDCameraManager_C_TogglePhotographyMode final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FSDCameraManager_C_TogglePhotographyMode) == 0x000001, "Wrong alignment on BP_FSDCameraManager_C_TogglePhotographyMode");
static_assert(sizeof(BP_FSDCameraManager_C_TogglePhotographyMode) == 0x000001, "Wrong size on BP_FSDCameraManager_C_TogglePhotographyMode");
static_assert(offsetof(BP_FSDCameraManager_C_TogglePhotographyMode, Active) == 0x000000, "Member 'BP_FSDCameraManager_C_TogglePhotographyMode::Active' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_FSDCameraManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FSDCameraManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_FSDCameraManager_C_ReceiveTick");
static_assert(sizeof(BP_FSDCameraManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_FSDCameraManager_C_ReceiveTick");
static_assert(offsetof(BP_FSDCameraManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_FSDCameraManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.PhotographyCameraModify
// 0x02A0 (0x02A0 - 0x0000)
struct BP_FSDCameraManager_C_PhotographyCameraModify final
{
public:
	struct FVector                                NewCameraLocation;                                 // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousCameraLocation;                            // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OriginalCameraLocation;                            // 0x0018(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResultCameraLocation;                              // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SmoothReturnVelocity_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetToThirdPersonCamera_New_Camera_Position; // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetToThirdPersonCamera_New_Camera_Position_1; // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3074[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x00A4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_3075[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_SphereDirectionToPlayer_Direction;        // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x014C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x01E0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3076[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_SphereOverlapComponents_OutComponents;    // 0x0200(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereOverlapComponents_ReturnValue;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3077[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_2;     // 0x0214(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FSDCameraManager_C_PhotographyCameraModify) == 0x000008, "Wrong alignment on BP_FSDCameraManager_C_PhotographyCameraModify");
static_assert(sizeof(BP_FSDCameraManager_C_PhotographyCameraModify) == 0x0002A0, "Wrong size on BP_FSDCameraManager_C_PhotographyCameraModify");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, NewCameraLocation) == 0x000000, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::NewCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, PreviousCameraLocation) == 0x00000C, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::PreviousCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, OriginalCameraLocation) == 0x000018, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::OriginalCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, ResultCameraLocation) == 0x000024, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::ResultCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_SmoothReturnVelocity_ReturnValue) == 0x000030, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_SmoothReturnVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_SetToThirdPersonCamera_New_Camera_Position) == 0x000040, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_SetToThirdPersonCamera_New_Camera_Position' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000050, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_K2_GetPawn_ReturnValue) == 0x000058, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00006C, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_VSize_ReturnValue) == 0x000084, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_SetToThirdPersonCamera_New_Camera_Position_1) == 0x000088, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_SetToThirdPersonCamera_New_Camera_Position_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000095, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000098, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0000A4, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, K2Node_MakeArray_Array) == 0x000130, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_SphereDirectionToPlayer_Direction) == 0x000140, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_SphereDirectionToPlayer_Direction' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x00014C, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001D4, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, K2Node_MakeArray_Array_1) == 0x0001E0, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F0, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_SphereOverlapComponents_OutComponents) == 0x000200, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_SphereOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_SphereOverlapComponents_ReturnValue) == 0x000210, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_SphereOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_PhotographyCameraModify, CallFunc_K2_SetWorldLocation_SweepHitResult_2) == 0x000214, "Member 'BP_FSDCameraManager_C_PhotographyCameraModify::CallFunc_K2_SetWorldLocation_SweepHitResult_2' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.ReturnCameraMode
// 0x0010 (0x0010 - 0x0000)
struct BP_FSDCameraManager_C_ReturnCameraMode final
{
public:
	class APlayerCharacter*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterCameraMode                          NewCameraMode;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterState                               CallFunc_GetCurrentState_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FSDCameraManager_C_ReturnCameraMode) == 0x000008, "Wrong alignment on BP_FSDCameraManager_C_ReturnCameraMode");
static_assert(sizeof(BP_FSDCameraManager_C_ReturnCameraMode) == 0x000010, "Wrong size on BP_FSDCameraManager_C_ReturnCameraMode");
static_assert(offsetof(BP_FSDCameraManager_C_ReturnCameraMode, Target) == 0x000000, "Member 'BP_FSDCameraManager_C_ReturnCameraMode::Target' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ReturnCameraMode, NewCameraMode) == 0x000008, "Member 'BP_FSDCameraManager_C_ReturnCameraMode::NewCameraMode' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ReturnCameraMode, CallFunc_GetCurrentState_ReturnValue) == 0x000009, "Member 'BP_FSDCameraManager_C_ReturnCameraMode::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ReturnCameraMode, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'BP_FSDCameraManager_C_ReturnCameraMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.SetToThirdPersonCamera
// 0x0160 (0x0160 - 0x0000)
struct BP_FSDCameraManager_C_SetToThirdPersonCamera final
{
public:
	struct FVector                                New_Camera_Position;                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3078[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x004C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FSDCameraManager_C_SetToThirdPersonCamera) == 0x000008, "Wrong alignment on BP_FSDCameraManager_C_SetToThirdPersonCamera");
static_assert(sizeof(BP_FSDCameraManager_C_SetToThirdPersonCamera) == 0x000160, "Wrong size on BP_FSDCameraManager_C_SetToThirdPersonCamera");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, New_Camera_Position) == 0x000000, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::New_Camera_Position' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000018, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, K2Node_DynamicCast_AsPlayer_Character) == 0x000028, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000034, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000040, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00004C, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SetToThirdPersonCamera, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x0000D4, "Member 'BP_FSDCameraManager_C_SetToThirdPersonCamera::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.SphereDirectionToPlayer
// 0x0058 (0x0058 - 0x0000)
struct BP_FSDCameraManager_C_SphereDirectionToPlayer final
{
public:
	struct FVector                                Direction;                                         // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3079[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_307A[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FSDCameraManager_C_SphereDirectionToPlayer) == 0x000008, "Wrong alignment on BP_FSDCameraManager_C_SphereDirectionToPlayer");
static_assert(sizeof(BP_FSDCameraManager_C_SphereDirectionToPlayer) == 0x000058, "Wrong size on BP_FSDCameraManager_C_SphereDirectionToPlayer");
static_assert(offsetof(BP_FSDCameraManager_C_SphereDirectionToPlayer, Direction) == 0x000000, "Member 'BP_FSDCameraManager_C_SphereDirectionToPlayer::Direction' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SphereDirectionToPlayer, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000010, "Member 'BP_FSDCameraManager_C_SphereDirectionToPlayer::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SphereDirectionToPlayer, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_FSDCameraManager_C_SphereDirectionToPlayer::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SphereDirectionToPlayer, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'BP_FSDCameraManager_C_SphereDirectionToPlayer::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SphereDirectionToPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_FSDCameraManager_C_SphereDirectionToPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SphereDirectionToPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00003C, "Member 'BP_FSDCameraManager_C_SphereDirectionToPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SphereDirectionToPlayer, CallFunc_Normal_ReturnValue) == 0x000048, "Member 'BP_FSDCameraManager_C_SphereDirectionToPlayer::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.SmoothReturnVelocity
// 0x0050 (0x0050 - 0x0000)
struct BP_FSDCameraManager_C_SmoothReturnVelocity final
{
public:
	struct FVector                                New_Camera_Location;                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FSDCameraManager_C_SmoothReturnVelocity) == 0x000008, "Wrong alignment on BP_FSDCameraManager_C_SmoothReturnVelocity");
static_assert(sizeof(BP_FSDCameraManager_C_SmoothReturnVelocity) == 0x000050, "Wrong size on BP_FSDCameraManager_C_SmoothReturnVelocity");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, New_Camera_Location) == 0x000000, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::New_Camera_Location' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, ReturnValue) == 0x00000C, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000010, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_SmoothReturnVelocity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BP_FSDCameraManager_C_SmoothReturnVelocity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.ChangeSpeed
// 0x0028 (0x0028 - 0x0000)
struct BP_FSDCameraManager_C_ChangeSpeed final
{
public:
	float                                         Param_MaxSpeed;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_307B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FSDCameraManager_C_ChangeSpeed) == 0x000008, "Wrong alignment on BP_FSDCameraManager_C_ChangeSpeed");
static_assert(sizeof(BP_FSDCameraManager_C_ChangeSpeed) == 0x000028, "Wrong size on BP_FSDCameraManager_C_ChangeSpeed");
static_assert(offsetof(BP_FSDCameraManager_C_ChangeSpeed, Param_MaxSpeed) == 0x000000, "Member 'BP_FSDCameraManager_C_ChangeSpeed::Param_MaxSpeed' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ChangeSpeed, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'BP_FSDCameraManager_C_ChangeSpeed::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FSDCameraManager_C_ChangeSpeed, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'BP_FSDCameraManager_C_ChangeSpeed::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_FSDCameraManager.BP_FSDCameraManager_C.ChangeMaxDistance
// 0x0004 (0x0004 - 0x0000)
struct BP_FSDCameraManager_C_ChangeMaxDistance final
{
public:
	float                                         Param_MaxDistance;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FSDCameraManager_C_ChangeMaxDistance) == 0x000004, "Wrong alignment on BP_FSDCameraManager_C_ChangeMaxDistance");
static_assert(sizeof(BP_FSDCameraManager_C_ChangeMaxDistance) == 0x000004, "Wrong size on BP_FSDCameraManager_C_ChangeMaxDistance");
static_assert(offsetof(BP_FSDCameraManager_C_ChangeMaxDistance, Param_MaxDistance) == 0x000000, "Member 'BP_FSDCameraManager_C_ChangeMaxDistance::Param_MaxDistance' has a wrong offset!");

}

