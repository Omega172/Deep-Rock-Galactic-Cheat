#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_ObjectivesBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_ObjectivesBox.HUD_ObjectivesBox_C
// 0x0088 (0x02E8 - 0x0260)
class UHUD_ObjectivesBox_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ShowObjectives;                                    // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBasic_HUD_BracketWindowBig_Single_C*   Basic_HUD_BracketWindowBig_Single;                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         DeepDiveBox;                                       // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Label_C*                         DeepDiveElite;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_Label_C*                         DeepDiveStage;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_HUD_BracketWindowBig_Single_C*   DeepDiveWindow;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_DefaultLabel_C*                    NoObjectives;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ImageTinted_C*                      UI_ImageTinted;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       ValidationBox;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_GameEvent;                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Optional;                              // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Primary;                               // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Secondary;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class APlayerCharacter*                       Character;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LaserpointerEquipped;                              // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35EB[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUDVisibilityGroup*                    VisibilityGroup;                                   // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HUD_ObjectivesBox(int32 EntryPoint);
	void OnOptionalWidgetUpdated(class UOptionalObjectiveWidget* InOptionalObjectiveWidget);
	void OnObjectiveWidgetUpdated(class UObjectiveWidget* InObjectiveWidget);
	void AnimFinished();
	void SetVisible(bool InVisible, bool Animate);
	void OnGameEventCompletedEvent(const class FText& GameEventName);
	void Setup_Deep_Dive_Label();
	void ShowDynamically();
	void OnLaserPointerReleased();
	void OnLaserPointerPressed();
	void OnObjectiveAdded(class UObjective* Objective);
	void Construct();
	void CreateObjectiveWidget(class UObjective* Objective);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_ObjectivesBox_C">();
	}
	static class UHUD_ObjectivesBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_ObjectivesBox_C>();
	}
};
static_assert(alignof(UHUD_ObjectivesBox_C) == 0x000008, "Wrong alignment on UHUD_ObjectivesBox_C");
static_assert(sizeof(UHUD_ObjectivesBox_C) == 0x0002E8, "Wrong size on UHUD_ObjectivesBox_C");
static_assert(offsetof(UHUD_ObjectivesBox_C, UberGraphFrame) == 0x000260, "Member 'UHUD_ObjectivesBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, ShowObjectives) == 0x000268, "Member 'UHUD_ObjectivesBox_C::ShowObjectives' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, Basic_HUD_BracketWindowBig_Single) == 0x000270, "Member 'UHUD_ObjectivesBox_C::Basic_HUD_BracketWindowBig_Single' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, DeepDiveBox) == 0x000278, "Member 'UHUD_ObjectivesBox_C::DeepDiveBox' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, DeepDiveElite) == 0x000280, "Member 'UHUD_ObjectivesBox_C::DeepDiveElite' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, DeepDiveStage) == 0x000288, "Member 'UHUD_ObjectivesBox_C::DeepDiveStage' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, DeepDiveWindow) == 0x000290, "Member 'UHUD_ObjectivesBox_C::DeepDiveWindow' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, NoObjectives) == 0x000298, "Member 'UHUD_ObjectivesBox_C::NoObjectives' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, UI_ImageTinted) == 0x0002A0, "Member 'UHUD_ObjectivesBox_C::UI_ImageTinted' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, ValidationBox) == 0x0002A8, "Member 'UHUD_ObjectivesBox_C::ValidationBox' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, VerticalBox_GameEvent) == 0x0002B0, "Member 'UHUD_ObjectivesBox_C::VerticalBox_GameEvent' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, VerticalBox_Optional) == 0x0002B8, "Member 'UHUD_ObjectivesBox_C::VerticalBox_Optional' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, VerticalBox_Primary) == 0x0002C0, "Member 'UHUD_ObjectivesBox_C::VerticalBox_Primary' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, VerticalBox_Secondary) == 0x0002C8, "Member 'UHUD_ObjectivesBox_C::VerticalBox_Secondary' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, Character) == 0x0002D0, "Member 'UHUD_ObjectivesBox_C::Character' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, LaserpointerEquipped) == 0x0002D8, "Member 'UHUD_ObjectivesBox_C::LaserpointerEquipped' has a wrong offset!");
static_assert(offsetof(UHUD_ObjectivesBox_C, VisibilityGroup) == 0x0002E0, "Member 'UHUD_ObjectivesBox_C::VisibilityGroup' has a wrong offset!");

}

