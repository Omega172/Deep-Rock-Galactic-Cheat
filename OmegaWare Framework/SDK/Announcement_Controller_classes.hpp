#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Announcement_Controller

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass Announcement_Controller.Announcement_Controller_C
// 0x0040 (0x02A0 - 0x0260)
class UAnnouncement_Controller_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ResourceFull;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             ResourceFullLabel;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootPanel;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UObject*                                GoldFrenzyComponent;                               // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       Character;                                         // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerHealthComponent*                 HealthComponent;                                   // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextAnnouncementTime;                              // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Announcement_Controller(int32 EntryPoint);
	void OnCollectedEverything_Event(const class FText& InMessage);
	void OnCollectedVanityItem_Event_0(class UVanityItem* Item, class UPlayerCharacterID* CharacterID);
	void OnCollectedPickaxePart_Event_0(class UPickaxePart* PickaxePart);
	void OnCollectedSchematic_Event(class USchematic* Schematic);
	void OnCollectedVictoryPose_Event_0(class UVictoryPose* Pose, class UPlayerCharacterID* CharacterID);
	void OnCollectedSkin(class UItemSkin* Skin, class UItemID* ItemID);
	void OnResourceFullFinished();
	void OnResourceFullStarted();
	void OnFullHealthCannotHeal();
	void Do_Resource_Full(const class FText& Param_Name);
	void OnResourceIncreased(class UCappedResource* Resource, float Amount);
	void OnResourceFull(class UCappedResource* Resource);
	void OnHealed(float Amount);
	void Construct();
	void CreateTextAnnouncement(const class FText& Text, const struct FLinearColor& Color, class UTexture2D* Icon, const struct FLinearColor& Icon_Tint);
	void CreateValueAnnouncement(float Value, const class FText& Param_Name, const struct FLinearColor& Color, int32 FractionalDigits, class UTexture2D* Icon, const struct FLinearColor& Icon_Tint);
	void CreateSkinAnnouncement(class UItemSkin* Skin, class UItemID* SkinOwner);
	float GetStartDelay();
	void QueueWidget(class UUserWidget* InWidget);
	void CreateVPAnnouncement(class UVictoryPose* VictoryPose, class UPlayerCharacterID* VPOwner);
	void CreateSchematicAnnouncement(class USchematic* InSchematic);
	void CreatePickaxeAnnouncement(class UPickaxePart* PickaxePart);
	void CreateVanityAnnouncement(class UVanityItem* VanityItem, class UPlayerCharacterID* VanityOwner);
	void CreateEverythingCollectedAnnouncement(const class FText& Message);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Announcement_Controller_C">();
	}
	static class UAnnouncement_Controller_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnnouncement_Controller_C>();
	}
};
static_assert(alignof(UAnnouncement_Controller_C) == 0x000008, "Wrong alignment on UAnnouncement_Controller_C");
static_assert(sizeof(UAnnouncement_Controller_C) == 0x0002A0, "Wrong size on UAnnouncement_Controller_C");
static_assert(offsetof(UAnnouncement_Controller_C, UberGraphFrame) == 0x000260, "Member 'UAnnouncement_Controller_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnnouncement_Controller_C, ResourceFull) == 0x000268, "Member 'UAnnouncement_Controller_C::ResourceFull' has a wrong offset!");
static_assert(offsetof(UAnnouncement_Controller_C, ResourceFullLabel) == 0x000270, "Member 'UAnnouncement_Controller_C::ResourceFullLabel' has a wrong offset!");
static_assert(offsetof(UAnnouncement_Controller_C, RootPanel) == 0x000278, "Member 'UAnnouncement_Controller_C::RootPanel' has a wrong offset!");
static_assert(offsetof(UAnnouncement_Controller_C, GoldFrenzyComponent) == 0x000280, "Member 'UAnnouncement_Controller_C::GoldFrenzyComponent' has a wrong offset!");
static_assert(offsetof(UAnnouncement_Controller_C, Character) == 0x000288, "Member 'UAnnouncement_Controller_C::Character' has a wrong offset!");
static_assert(offsetof(UAnnouncement_Controller_C, HealthComponent) == 0x000290, "Member 'UAnnouncement_Controller_C::HealthComponent' has a wrong offset!");
static_assert(offsetof(UAnnouncement_Controller_C, NextAnnouncementTime) == 0x000298, "Member 'UAnnouncement_Controller_C::NextAnnouncementTime' has a wrong offset!");

}

