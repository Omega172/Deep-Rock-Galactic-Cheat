#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Dialog_Modding_TermsAndConditions

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass Dialog_Modding_TermsAndConditions.Dialog_Modding_TermsAndConditions_C
// 0x0088 (0x0340 - 0x02B8)
class UDialog_Modding_TermsAndConditions_C final : public UYesNoPromptWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBasic_Menu_MinimalWindow_C*            BasicWindow_Minimal;                               // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ButtonScalable2_C*               BTN_No;                                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_ButtonScalable2_C*               BTN_Yes;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATA_Content;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DATA_Header;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         Data_Privacy;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         Data_Terms;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UITM_MenuBackground_C*                  ITM_MenuBackground;                                // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Privacy;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Terms;                                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 TermsURL;                                          // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 PrivacyURL;                                        // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnAnswer;                                          // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnAnswer__DelegateSignature(bool Param_Agree);
	void ExecuteUbergraph_Dialog_Modding_TermsAndConditions(int32 EntryPoint);
	void DummyEventThatLeadToNowhere(bool Yes);
	void BndEvt__BTN_Yes_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void BndEvt__BTN_No_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature();
	void Agree();
	void Disagree();
	void BndEvt__Privacy_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__Terms_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void ShowTerms(class UModioTermsWrapper* Param_Terms);
	void Construct();
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnModOverlayClosed(const class FString& LastURL);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Dialog_Modding_TermsAndConditions_C">();
	}
	static class UDialog_Modding_TermsAndConditions_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDialog_Modding_TermsAndConditions_C>();
	}
};
static_assert(alignof(UDialog_Modding_TermsAndConditions_C) == 0x000008, "Wrong alignment on UDialog_Modding_TermsAndConditions_C");
static_assert(sizeof(UDialog_Modding_TermsAndConditions_C) == 0x000340, "Wrong size on UDialog_Modding_TermsAndConditions_C");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, UberGraphFrame) == 0x0002B8, "Member 'UDialog_Modding_TermsAndConditions_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, BasicWindow_Minimal) == 0x0002C0, "Member 'UDialog_Modding_TermsAndConditions_C::BasicWindow_Minimal' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, BTN_No) == 0x0002C8, "Member 'UDialog_Modding_TermsAndConditions_C::BTN_No' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, BTN_Yes) == 0x0002D0, "Member 'UDialog_Modding_TermsAndConditions_C::BTN_Yes' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, DATA_Content) == 0x0002D8, "Member 'UDialog_Modding_TermsAndConditions_C::DATA_Content' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, DATA_Header) == 0x0002E0, "Member 'UDialog_Modding_TermsAndConditions_C::DATA_Header' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, Data_Privacy) == 0x0002E8, "Member 'UDialog_Modding_TermsAndConditions_C::Data_Privacy' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, Data_Terms) == 0x0002F0, "Member 'UDialog_Modding_TermsAndConditions_C::Data_Terms' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, ITM_MenuBackground) == 0x0002F8, "Member 'UDialog_Modding_TermsAndConditions_C::ITM_MenuBackground' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, Privacy) == 0x000300, "Member 'UDialog_Modding_TermsAndConditions_C::Privacy' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, Terms) == 0x000308, "Member 'UDialog_Modding_TermsAndConditions_C::Terms' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, TermsURL) == 0x000310, "Member 'UDialog_Modding_TermsAndConditions_C::TermsURL' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, PrivacyURL) == 0x000320, "Member 'UDialog_Modding_TermsAndConditions_C::PrivacyURL' has a wrong offset!");
static_assert(offsetof(UDialog_Modding_TermsAndConditions_C, OnAnswer) == 0x000330, "Member 'UDialog_Modding_TermsAndConditions_C::OnAnswer' has a wrong offset!");

}

