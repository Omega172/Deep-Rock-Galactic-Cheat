#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_Menu_MinimalWindow

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.OnCursorEnter__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Basic_Menu_MinimalWindow_C_OnCursorEnter__DelegateSignature final
{
public:
	class UBasic_Menu_MinimalWindow_C*            Window;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_OnCursorEnter__DelegateSignature) == 0x000008, "Wrong alignment on Basic_Menu_MinimalWindow_C_OnCursorEnter__DelegateSignature");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_OnCursorEnter__DelegateSignature) == 0x000008, "Wrong size on Basic_Menu_MinimalWindow_C_OnCursorEnter__DelegateSignature");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnCursorEnter__DelegateSignature, Window) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_OnCursorEnter__DelegateSignature::Window' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.OnCursorLeave__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Basic_Menu_MinimalWindow_C_OnCursorLeave__DelegateSignature final
{
public:
	class UBasic_Menu_MinimalWindow_C*            Window;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_OnCursorLeave__DelegateSignature) == 0x000008, "Wrong alignment on Basic_Menu_MinimalWindow_C_OnCursorLeave__DelegateSignature");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_OnCursorLeave__DelegateSignature) == 0x000008, "Wrong size on Basic_Menu_MinimalWindow_C_OnCursorLeave__DelegateSignature");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnCursorLeave__DelegateSignature, Window) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_OnCursorLeave__DelegateSignature::Window' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.OnReceivedFocus__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Basic_Menu_MinimalWindow_C_OnReceivedFocus__DelegateSignature final
{
public:
	class UBasic_Menu_MinimalWindow_C*            Window;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_OnReceivedFocus__DelegateSignature) == 0x000008, "Wrong alignment on Basic_Menu_MinimalWindow_C_OnReceivedFocus__DelegateSignature");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_OnReceivedFocus__DelegateSignature) == 0x000008, "Wrong size on Basic_Menu_MinimalWindow_C_OnReceivedFocus__DelegateSignature");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnReceivedFocus__DelegateSignature, Window) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_OnReceivedFocus__DelegateSignature::Window' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.OnLostFocus__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Basic_Menu_MinimalWindow_C_OnLostFocus__DelegateSignature final
{
public:
	class UBasic_Menu_MinimalWindow_C*            Window;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_OnLostFocus__DelegateSignature) == 0x000008, "Wrong alignment on Basic_Menu_MinimalWindow_C_OnLostFocus__DelegateSignature");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_OnLostFocus__DelegateSignature) == 0x000008, "Wrong size on Basic_Menu_MinimalWindow_C_OnLostFocus__DelegateSignature");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnLostFocus__DelegateSignature, Window) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_OnLostFocus__DelegateSignature::Window' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.ExecuteUbergraph_Basic_Menu_MinimalWindow
// 0x0168 (0x0168 - 0x0000)
struct Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A11[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A12[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x001C(0x0008)(NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A13[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0060(0x0070)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00D0(0x0070)(ConstParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow) == 0x000008, "Wrong alignment on Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow) == 0x000168, "Wrong size on Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, EntryPoint) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, Temp_bool_Variable) == 0x000004, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, Temp_byte_Variable) == 0x000005, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, Temp_byte_Variable_1) == 0x000006, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, CallFunc_MenuColors_OutputColor) == 0x000008, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, K2Node_Event_IsDesignTime) == 0x000018, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, K2Node_Select_Default) == 0x000019, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, K2Node_Event_InFocusEvent) == 0x00001C, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, K2Node_Event_MyGeometry) == 0x000024, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, K2Node_Event_MouseEvent_1) == 0x000060, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, K2Node_Event_MouseEvent) == 0x0000D0, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000140, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, K2Node_MakeStruct_LinearColor) == 0x000144, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow, K2Node_MakeStruct_LinearColor_1) == 0x000154, "Member 'Basic_Menu_MinimalWindow_C_ExecuteUbergraph_Basic_Menu_MinimalWindow::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct Basic_Menu_MinimalWindow_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_OnMouseLeave) == 0x000008, "Wrong alignment on Basic_Menu_MinimalWindow_C_OnMouseLeave");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_OnMouseLeave) == 0x000070, "Wrong size on Basic_Menu_MinimalWindow_C_OnMouseLeave");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct Basic_Menu_MinimalWindow_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_OnMouseEnter) == 0x000008, "Wrong alignment on Basic_Menu_MinimalWindow_C_OnMouseEnter");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_OnMouseEnter) == 0x0000A8, "Wrong size on Basic_Menu_MinimalWindow_C_OnMouseEnter");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'Basic_Menu_MinimalWindow_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.OnFocusLost
// 0x0008 (0x0008 - 0x0000)
struct Basic_Menu_MinimalWindow_C_OnFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_OnFocusLost) == 0x000004, "Wrong alignment on Basic_Menu_MinimalWindow_C_OnFocusLost");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_OnFocusLost) == 0x000008, "Wrong size on Basic_Menu_MinimalWindow_C_OnFocusLost");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnFocusLost, InFocusEvent) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_OnFocusLost::InFocusEvent' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Basic_Menu_MinimalWindow_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_PreConstruct) == 0x000001, "Wrong alignment on Basic_Menu_MinimalWindow_C_PreConstruct");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_PreConstruct) == 0x000001, "Wrong size on Basic_Menu_MinimalWindow_C_PreConstruct");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct Basic_Menu_MinimalWindow_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x00F8(0x00B8)()
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_OnFocusReceived) == 0x000008, "Wrong alignment on Basic_Menu_MinimalWindow_C_OnFocusReceived");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_OnFocusReceived) == 0x0001B0, "Wrong size on Basic_Menu_MinimalWindow_C_OnFocusReceived");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'Basic_Menu_MinimalWindow_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'Basic_Menu_MinimalWindow_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_OnFocusReceived, CallFunc_Unhandled_ReturnValue) == 0x0000F8, "Member 'Basic_Menu_MinimalWindow_C_OnFocusReceived::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function Basic_Menu_MinimalWindow.Basic_Menu_MinimalWindow_C.IsMouseOver
// 0x0001 (0x0001 - 0x0000)
struct Basic_Menu_MinimalWindow_C_IsMouseOver final
{
public:
	bool                                          Param_MouseOver;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_Menu_MinimalWindow_C_IsMouseOver) == 0x000001, "Wrong alignment on Basic_Menu_MinimalWindow_C_IsMouseOver");
static_assert(sizeof(Basic_Menu_MinimalWindow_C_IsMouseOver) == 0x000001, "Wrong size on Basic_Menu_MinimalWindow_C_IsMouseOver");
static_assert(offsetof(Basic_Menu_MinimalWindow_C_IsMouseOver, Param_MouseOver) == 0x000000, "Member 'Basic_Menu_MinimalWindow_C_IsMouseOver::Param_MouseOver' has a wrong offset!");

}

