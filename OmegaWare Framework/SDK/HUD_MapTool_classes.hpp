#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_MapTool

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_MapTool.HUD_MapTool_C
// 0x0098 (0x02F8 - 0x0260)
class UHUD_MapTool_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       MainTurnOn;                                        // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       MapTurnOn;                                         // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       RecordingDot;                                      // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UUI_AdvancedLabel_C*                    AlignLabel;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_HUD_BracketWindowBig_C*          Basic_HUD_BracketWindowBig;                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBasic_HUD_BracketWindowBig_C*          Basic_HUD_BracketWindowBig_C_0;                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_0;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImgrecordingDot;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_AdvancedLabel_C*                    InputLabel;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MapView;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_Header;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_Header_1;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_Header_2;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_Recording;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_AdvancedLabel_C*                    ZoomLabel;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class APlayerCharacter*                       Character;                                         // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MapVisible;                                        // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361B[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AnimScrub;                                         // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimScrubPrev;                                     // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HUD_MapTool(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnMainTurnOnFinished();
	void PreConstruct(bool IsDesignTime);
	void OnToggleMapTool(bool Visible);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_MapTool_C">();
	}
	static class UHUD_MapTool_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_MapTool_C>();
	}
};
static_assert(alignof(UHUD_MapTool_C) == 0x000008, "Wrong alignment on UHUD_MapTool_C");
static_assert(sizeof(UHUD_MapTool_C) == 0x0002F8, "Wrong size on UHUD_MapTool_C");
static_assert(offsetof(UHUD_MapTool_C, UberGraphFrame) == 0x000260, "Member 'UHUD_MapTool_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, MainTurnOn) == 0x000268, "Member 'UHUD_MapTool_C::MainTurnOn' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, MapTurnOn) == 0x000270, "Member 'UHUD_MapTool_C::MapTurnOn' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, RecordingDot) == 0x000278, "Member 'UHUD_MapTool_C::RecordingDot' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, AlignLabel) == 0x000280, "Member 'UHUD_MapTool_C::AlignLabel' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, Basic_HUD_BracketWindowBig) == 0x000288, "Member 'UHUD_MapTool_C::Basic_HUD_BracketWindowBig' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, Basic_HUD_BracketWindowBig_C_0) == 0x000290, "Member 'UHUD_MapTool_C::Basic_HUD_BracketWindowBig_C_0' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, Border_0) == 0x000298, "Member 'UHUD_MapTool_C::Border_0' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, ImgrecordingDot) == 0x0002A0, "Member 'UHUD_MapTool_C::ImgrecordingDot' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, InputLabel) == 0x0002A8, "Member 'UHUD_MapTool_C::InputLabel' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, MapView) == 0x0002B0, "Member 'UHUD_MapTool_C::MapView' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, TEXT_Header) == 0x0002B8, "Member 'UHUD_MapTool_C::TEXT_Header' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, TEXT_Header_1) == 0x0002C0, "Member 'UHUD_MapTool_C::TEXT_Header_1' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, TEXT_Header_2) == 0x0002C8, "Member 'UHUD_MapTool_C::TEXT_Header_2' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, TEXT_Recording) == 0x0002D0, "Member 'UHUD_MapTool_C::TEXT_Recording' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, ZoomLabel) == 0x0002D8, "Member 'UHUD_MapTool_C::ZoomLabel' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, Character) == 0x0002E0, "Member 'UHUD_MapTool_C::Character' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, MapVisible) == 0x0002E8, "Member 'UHUD_MapTool_C::MapVisible' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, AnimScrub) == 0x0002EC, "Member 'UHUD_MapTool_C::AnimScrub' has a wrong offset!");
static_assert(offsetof(UHUD_MapTool_C, AnimScrubPrev) == 0x0002F0, "Member 'UHUD_MapTool_C::AnimScrubPrev' has a wrong offset!");

}

