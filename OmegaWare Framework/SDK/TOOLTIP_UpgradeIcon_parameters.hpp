#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TOOLTIP_UpgradeIcon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "FSD_structs.hpp"


namespace CG::Params
{

// Function TOOLTIP_UpgradeIcon.TOOLTIP_UpgradeIcon_C.ExecuteUbergraph_TOOLTIP_UpgradeIcon
// 0x0038 (0x0038 - 0x0000)
struct TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColorsAndOpacity_OutputColor;         // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6A[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon) == 0x000008, "Wrong alignment on TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon");
static_assert(sizeof(TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon) == 0x000038, "Wrong size on TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon, EntryPoint) == 0x000000, "Member 'TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon, CallFunc_MenuColorsAndOpacity_OutputColor) == 0x000004, "Member 'TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon::CallFunc_MenuColorsAndOpacity_OutputColor' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon, K2Node_Event_IsDesignTime) == 0x000024, "Member 'TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000028, "Member 'TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon, K2Node_CustomEvent_NewValue) == 0x000030, "Member 'TOOLTIP_UpgradeIcon_C_ExecuteUbergraph_TOOLTIP_UpgradeIcon::K2Node_CustomEvent_NewValue' has a wrong offset!");

// Function TOOLTIP_UpgradeIcon.TOOLTIP_UpgradeIcon_C.OnShowUpgradeExtraDetailsChanged
// 0x0001 (0x0001 - 0x0000)
struct TOOLTIP_UpgradeIcon_C_OnShowUpgradeExtraDetailsChanged final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TOOLTIP_UpgradeIcon_C_OnShowUpgradeExtraDetailsChanged) == 0x000001, "Wrong alignment on TOOLTIP_UpgradeIcon_C_OnShowUpgradeExtraDetailsChanged");
static_assert(sizeof(TOOLTIP_UpgradeIcon_C_OnShowUpgradeExtraDetailsChanged) == 0x000001, "Wrong size on TOOLTIP_UpgradeIcon_C_OnShowUpgradeExtraDetailsChanged");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_OnShowUpgradeExtraDetailsChanged, NewValue) == 0x000000, "Member 'TOOLTIP_UpgradeIcon_C_OnShowUpgradeExtraDetailsChanged::NewValue' has a wrong offset!");

// Function TOOLTIP_UpgradeIcon.TOOLTIP_UpgradeIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct TOOLTIP_UpgradeIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TOOLTIP_UpgradeIcon_C_PreConstruct) == 0x000001, "Wrong alignment on TOOLTIP_UpgradeIcon_C_PreConstruct");
static_assert(sizeof(TOOLTIP_UpgradeIcon_C_PreConstruct) == 0x000001, "Wrong size on TOOLTIP_UpgradeIcon_C_PreConstruct");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'TOOLTIP_UpgradeIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function TOOLTIP_UpgradeIcon.TOOLTIP_UpgradeIcon_C.Update
// 0x00B0 (0x00B0 - 0x0000)
struct TOOLTIP_UpgradeIcon_C_Update final
{
public:
	class UItemUpgradeCategory*                   Category;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   InUpgradeName;                                     // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   InUpgradeDescription;                              // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EItemUpgradeStatus                            InStatus;                                          // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCraftingCost>                  InCost;                                            // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          InCanUnequip;                                      // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowUpgradeStatus;                                 // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6C[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0058(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0070(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6D[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectMenuColor_OutputColor;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCraftingCost_OutCanAfford;             // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TOOLTIP_UpgradeIcon_C_Update) == 0x000008, "Wrong alignment on TOOLTIP_UpgradeIcon_C_Update");
static_assert(sizeof(TOOLTIP_UpgradeIcon_C_Update) == 0x0000B0, "Wrong size on TOOLTIP_UpgradeIcon_C_Update");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, Category) == 0x000000, "Member 'TOOLTIP_UpgradeIcon_C_Update::Category' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, InUpgradeName) == 0x000008, "Member 'TOOLTIP_UpgradeIcon_C_Update::InUpgradeName' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, InUpgradeDescription) == 0x000020, "Member 'TOOLTIP_UpgradeIcon_C_Update::InUpgradeDescription' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, InStatus) == 0x000038, "Member 'TOOLTIP_UpgradeIcon_C_Update::InStatus' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, InCost) == 0x000040, "Member 'TOOLTIP_UpgradeIcon_C_Update::InCost' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, InCanUnequip) == 0x000050, "Member 'TOOLTIP_UpgradeIcon_C_Update::InCanUnequip' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, ShowUpgradeStatus) == 0x000051, "Member 'TOOLTIP_UpgradeIcon_C_Update::ShowUpgradeStatus' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_IsValid_ReturnValue) == 0x000052, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_TextToUpper_ReturnValue) == 0x000058, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_TextToUpper_ReturnValue_1) == 0x000070, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000088, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000089, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_BooleanOR_ReturnValue) == 0x00008A, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_SelectVisibility_IsVisible) == 0x00008B, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_SelectVisibility_VisibilityChanged) == 0x00008C, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_SelectVisibility_New_Visibility) == 0x00008D, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, Temp_byte_Variable) == 0x00008E, "Member 'TOOLTIP_UpgradeIcon_C_Update::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, Temp_byte_Variable_1) == 0x00008F, "Member 'TOOLTIP_UpgradeIcon_C_Update::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000090, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000091, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000092, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_BooleanOR_ReturnValue_1) == 0x000093, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, Temp_bool_Variable) == 0x000094, "Member 'TOOLTIP_UpgradeIcon_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_BooleanOR_ReturnValue_2) == 0x000095, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_SelectMenuColor_OutputColor) == 0x000098, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_SelectMenuColor_OutputColor' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, K2Node_Select_Default) == 0x0000A8, "Member 'TOOLTIP_UpgradeIcon_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_IsValid_ReturnValue_1) == 0x0000A9, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x0000AA, "Member 'TOOLTIP_UpgradeIcon_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_Update, CallFunc_SetCraftingCost_OutCanAfford) == 0x0000AB, "Member 'TOOLTIP_UpgradeIcon_C_Update::CallFunc_SetCraftingCost_OutCanAfford' has a wrong offset!");

// Function TOOLTIP_UpgradeIcon.TOOLTIP_UpgradeIcon_C.UpdateDetailVisibility
// 0x00A8 (0x00A8 - 0x0000)
struct TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0040(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C6F[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C70[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameUserSettings*                   CallFunc_GetFSDGameUserSettings_ReturnValue_1;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0088(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility) == 0x000008, "Wrong alignment on TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility");
static_assert(sizeof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility) == 0x0000A8, "Wrong size on TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, Temp_bool_Variable) == 0x000000, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, Temp_text_Variable) == 0x000008, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, Temp_text_Variable_1) == 0x000020, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_GetFSDGameUserSettings_ReturnValue) == 0x000038, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_GetFSDGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_GetText_ReturnValue) == 0x000040, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_TextIsEmpty_ReturnValue) == 0x000058, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, K2Node_Select_Default) == 0x000060, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_SelectVisibility_IsVisible) == 0x000078, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_SelectVisibility_VisibilityChanged) == 0x000079, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_SelectVisibility_New_Visibility) == 0x00007A, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_GetFSDGameUserSettings_ReturnValue_1) == 0x000080, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_GetFSDGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_GetText_ReturnValue_1) == 0x000088, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_TextIsEmpty_ReturnValue_1) == 0x0000A0, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_SelectVisibility_IsVisible_1) == 0x0000A3, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x0000A4, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility, CallFunc_SelectVisibility_New_Visibility_1) == 0x0000A5, "Member 'TOOLTIP_UpgradeIcon_C_UpdateDetailVisibility::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");

// Function TOOLTIP_UpgradeIcon.TOOLTIP_UpgradeIcon_C.SetAlignment
// 0x0010 (0x0010 - 0x0000)
struct TOOLTIP_UpgradeIcon_C_SetAlignment final
{
public:
	struct FVector2D                              InAlignment;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TOOLTIP_UpgradeIcon_C_SetAlignment) == 0x000008, "Wrong alignment on TOOLTIP_UpgradeIcon_C_SetAlignment");
static_assert(sizeof(TOOLTIP_UpgradeIcon_C_SetAlignment) == 0x000010, "Wrong size on TOOLTIP_UpgradeIcon_C_SetAlignment");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_SetAlignment, InAlignment) == 0x000000, "Member 'TOOLTIP_UpgradeIcon_C_SetAlignment::InAlignment' has a wrong offset!");
static_assert(offsetof(TOOLTIP_UpgradeIcon_C_SetAlignment, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'TOOLTIP_UpgradeIcon_C_SetAlignment::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

}

