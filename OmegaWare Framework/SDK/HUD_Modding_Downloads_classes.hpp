#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Modding_Downloads

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SimpleUGC_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_Modding_Downloads.HUD_Modding_Downloads_C
// 0x00C0 (0x0320 - 0x0260)
class UHUD_Modding_Downloads_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimOpenClose;                                     // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           EntryBox;                                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextHeadline;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 PreviewName;                                       // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         PreviewPendingNames;                               // 0x0290(0x0010)(Edit, BlueprintVisible)
	bool                                          PreviewDownloading;                                // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B38[0x3];                                     // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PreviewProgress;                                   // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviewTotal;                                      // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B39[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           HideHandle;                                        // 0x02B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Downloading;                                       // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B3A[0x6];                                     // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUD_Modding_Downloads_Entry_C*         CurrentEntry;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, EUGCPackageError>         PreviewFailed;                                     // 0x02C8(0x0050)(Edit, BlueprintVisible)
	bool                                          IsDesignTime;                                      // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_HUD_Modding_Downloads(int32 EntryPoint);
	void OnDownloadFinished(const class FString& ModName, const class FString& ModId);
	void Simulate();
	void Destruct();
	void HideFromHUD();
	void OnAnimFinished();
	void OnDownloadProgress(const class FString& Param_Name, const TArray<class FString>& ModsPendingDownload, bool Param_Downloading, int32 Progress, int32 Total);
	void PreConstruct(bool Param_IsDesignTime);
	void OnErrorInstalling(const class FString& ModName, EUGCPackageError ErrorType);
	void Construct();
	void SetDownloadProgress(const class FString& Param_Name, const TArray<class FString>& ModsPendingDownload, bool Param_Downloading, int32 Progress, int32 Total);
	void GetEntry(const class FString& InModName, class UHUD_Modding_Downloads_Entry_C** OutEntry, class FString* OutName);
	void SetOpen(bool InIsOpen);
	void ShowFailedToInstall(const TMap<class FString, EUGCPackageError>& InFailed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_Modding_Downloads_C">();
	}
	static class UHUD_Modding_Downloads_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_Modding_Downloads_C>();
	}
};
static_assert(alignof(UHUD_Modding_Downloads_C) == 0x000008, "Wrong alignment on UHUD_Modding_Downloads_C");
static_assert(sizeof(UHUD_Modding_Downloads_C) == 0x000320, "Wrong size on UHUD_Modding_Downloads_C");
static_assert(offsetof(UHUD_Modding_Downloads_C, UberGraphFrame) == 0x000260, "Member 'UHUD_Modding_Downloads_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, AnimOpenClose) == 0x000268, "Member 'UHUD_Modding_Downloads_C::AnimOpenClose' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, EntryBox) == 0x000270, "Member 'UHUD_Modding_Downloads_C::EntryBox' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, TextHeadline) == 0x000278, "Member 'UHUD_Modding_Downloads_C::TextHeadline' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, PreviewName) == 0x000280, "Member 'UHUD_Modding_Downloads_C::PreviewName' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, PreviewPendingNames) == 0x000290, "Member 'UHUD_Modding_Downloads_C::PreviewPendingNames' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, PreviewDownloading) == 0x0002A0, "Member 'UHUD_Modding_Downloads_C::PreviewDownloading' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, PreviewProgress) == 0x0002A4, "Member 'UHUD_Modding_Downloads_C::PreviewProgress' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, PreviewTotal) == 0x0002A8, "Member 'UHUD_Modding_Downloads_C::PreviewTotal' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, HideHandle) == 0x0002B0, "Member 'UHUD_Modding_Downloads_C::HideHandle' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, IsOpen) == 0x0002B8, "Member 'UHUD_Modding_Downloads_C::IsOpen' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, Downloading) == 0x0002B9, "Member 'UHUD_Modding_Downloads_C::Downloading' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, CurrentEntry) == 0x0002C0, "Member 'UHUD_Modding_Downloads_C::CurrentEntry' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, PreviewFailed) == 0x0002C8, "Member 'UHUD_Modding_Downloads_C::PreviewFailed' has a wrong offset!");
static_assert(offsetof(UHUD_Modding_Downloads_C, IsDesignTime) == 0x000318, "Member 'UHUD_Modding_Downloads_C::IsDesignTime' has a wrong offset!");

}

