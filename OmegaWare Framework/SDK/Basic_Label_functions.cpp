#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_Label

#include "Basic.hpp"

#include "Basic_Label_classes.hpp"
#include "Basic_Label_parameters.hpp"


namespace CG
{

// Function Basic_Label.Basic_Label_C.ExecuteUbergraph_Basic_Label
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBasic_Label_C::ExecuteUbergraph_Basic_Label(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "ExecuteUbergraph_Basic_Label");

	Params::Basic_Label_C_ExecuteUbergraph_Basic_Label Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBasic_Label_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "PreConstruct");

	Params::Basic_Label_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.SetMargin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMargin                          New_Margin                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBasic_Label_C::SetMargin(const struct FMargin& New_Margin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SetMargin");

	Params::Basic_Label_C_SetMargin Parms{};

	Parms.New_Margin = std::move(New_Margin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.SetText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Text                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBasic_Label_C::SetText(const class FText& Param_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SetText");

	Params::Basic_Label_C_SetText Parms{};

	Parms.Param_Text = std::move(Param_Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.SetTextColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MenuColors                         Param_TextColor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBasic_Label_C::SetTextColor(ENUM_MenuColors Param_TextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SetTextColor");

	Params::Basic_Label_C_SetTextColor Parms{};

	Parms.Param_TextColor = Param_TextColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.SetJustification
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextJustify                            Param_Justification                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBasic_Label_C::SetJustification(ETextJustify Param_Justification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SetJustification");

	Params::Basic_Label_C_SetJustification Parms{};

	Parms.Param_Justification = Param_Justification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.SetMinDesiredWidth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_MinDesiredWidth                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBasic_Label_C::SetMinDesiredWidth(float Param_MinDesiredWidth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SetMinDesiredWidth");

	Params::Basic_Label_C_SetMinDesiredWidth Parms{};

	Parms.Param_MinDesiredWidth = Param_MinDesiredWidth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.SetFontSize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InFontSize                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBasic_Label_C::SetFontSize(int32 InFontSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SetFontSize");

	Params::Basic_Label_C_SetFontSize Parms{};

	Parms.InFontSize = InFontSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.SetAutoWrapText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_AutoTextWrap                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBasic_Label_C::SetAutoWrapText(bool Param_AutoTextWrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SetAutoWrapText");

	Params::Basic_Label_C_SetAutoWrapText Parms{};

	Parms.Param_AutoTextWrap = Param_AutoTextWrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.SetWrapTextAt
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_WrapTextAt                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBasic_Label_C::SetWrapTextAt(float Param_WrapTextAt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SetWrapTextAt");

	Params::Basic_Label_C_SetWrapTextAt Parms{};

	Parms.Param_WrapTextAt = Param_WrapTextAt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.SetWrappingPolicy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextWrappingPolicy                     Param_WrappingPolicy                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBasic_Label_C::SetWrappingPolicy(ETextWrappingPolicy Param_WrappingPolicy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SetWrappingPolicy");

	Params::Basic_Label_C_SetWrappingPolicy Parms{};

	Parms.Param_WrappingPolicy = Param_WrappingPolicy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Basic_Label.Basic_Label_C.GetText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Param_Text                                             (Parm, OutParm)

void UBasic_Label_C::GetText(class FText* Param_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "GetText");

	Params::Basic_Label_C_GetText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Text != nullptr)
		*Param_Text = std::move(Parms.Param_Text);
}


// Function Basic_Label.Basic_Label_C.SelectTextColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MenuColors                         FLASE                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_MenuColors                         TURR                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBasic_Label_C::SelectTextColor(ENUM_MenuColors FLASE, ENUM_MenuColors TURR, bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Basic_Label_C", "SelectTextColor");

	Params::Basic_Label_C_SelectTextColor Parms{};

	Parms.FLASE = FLASE;
	Parms.TURR = TURR;
	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}

}

