#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionControl_TextAnimator

#include "Basic.hpp"

#include "MissionControl_TextAnimator_classes.hpp"
#include "MissionControl_TextAnimator_parameters.hpp"


namespace CG
{

// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.ExecuteUbergraph_MissionControl_TextAnimator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionControl_TextAnimator_C::ExecuteUbergraph_MissionControl_TextAnimator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionControl_TextAnimator_C", "ExecuteUbergraph_MissionControl_TextAnimator");

	Params::MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionControl_TextAnimator_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionControl_TextAnimator_C", "PreConstruct");

	Params::MissionControl_TextAnimator_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.SetText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   Unformatted_Length                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionControl_TextAnimator_C::SetText(const class FText& InText, int32* Unformatted_Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionControl_TextAnimator_C", "SetText");

	Params::MissionControl_TextAnimator_C_SetText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);

	if (Unformatted_Length != nullptr)
		*Unformatted_Length = Parms.Unformatted_Length;
}


// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.SetAnimProgress
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_AnimProgress                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionControl_TextAnimator_C::SetAnimProgress(float Param_AnimProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionControl_TextAnimator_C", "SetAnimProgress");

	Params::MissionControl_TextAnimator_C_SetAnimProgress Parms{};

	Parms.Param_AnimProgress = Param_AnimProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.GetFirstWord
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           OutWord                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UMissionControl_TextAnimator_C::GetFirstWord(const class FString& InString, class FString* OutWord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionControl_TextAnimator_C", "GetFirstWord");

	Params::MissionControl_TextAnimator_C_GetFirstWord Parms{};

	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);

	if (OutWord != nullptr)
		*OutWord = std::move(Parms.OutWord);
}

}

