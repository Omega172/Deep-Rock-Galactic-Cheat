#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LIB_Game_UI

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function LIB_Game_UI.LIB_Game_UI_C.GetVanitySlotTitle
// 0x0168 (0x0168 - 0x0000)
struct LIB_Game_UI_C_GetVanitySlotTitle final
{
public:
	EVanitySlot                                   InVanitySlot;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpperCase;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutTitle;                                          // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   Title;                                             // 0x0028(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVanitySlot                                   Temp_byte_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A3[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0048(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0060(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0090(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x00A8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x00C0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x00D8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x00F0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_6;            // 0x0108(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_7;            // 0x0120(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_8;            // 0x0138(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0150(0x0018)(ConstParm)
};
static_assert(alignof(LIB_Game_UI_C_GetVanitySlotTitle) == 0x000008, "Wrong alignment on LIB_Game_UI_C_GetVanitySlotTitle");
static_assert(sizeof(LIB_Game_UI_C_GetVanitySlotTitle) == 0x000168, "Wrong size on LIB_Game_UI_C_GetVanitySlotTitle");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, InVanitySlot) == 0x000000, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::InVanitySlot' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, UpperCase) == 0x000001, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::UpperCase' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, __WorldContext) == 0x000008, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, OutTitle) == 0x000010, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::OutTitle' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, Title) == 0x000028, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::Title' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, Temp_bool_Variable) == 0x000040, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, Temp_byte_Variable) == 0x000041, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_MakeLiteralText_ReturnValue) == 0x000048, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_TextToUpper_ReturnValue) == 0x000060, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, K2Node_Select_Default) == 0x000078, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000090, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_MakeLiteralText_ReturnValue_2) == 0x0000A8, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_MakeLiteralText_ReturnValue_3) == 0x0000C0, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_MakeLiteralText_ReturnValue_4) == 0x0000D8, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_MakeLiteralText_ReturnValue_5) == 0x0000F0, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_MakeLiteralText_ReturnValue_6) == 0x000108, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_MakeLiteralText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_MakeLiteralText_ReturnValue_7) == 0x000120, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_MakeLiteralText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, CallFunc_MakeLiteralText_ReturnValue_8) == 0x000138, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::CallFunc_MakeLiteralText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetVanitySlotTitle, K2Node_Select_Default_1) == 0x000150, "Member 'LIB_Game_UI_C_GetVanitySlotTitle::K2Node_Select_Default_1' has a wrong offset!");

// Function LIB_Game_UI.LIB_Game_UI_C.GetPickaxePartLocationTitle
// 0x0218 (0x0218 - 0x0000)
struct LIB_Game_UI_C_GetPickaxePartLocationTitle final
{
public:
	EPickaxePartLocation                          InPartLocation;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpperCase;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LongName;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A4[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutTitle;                                          // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   Paintjob;                                          // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   Pommel;                                            // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   Handle;                                            // 0x0058(0x0018)(Edit, BlueprintVisible)
	class FText                                   Shaft;                                             // 0x0070(0x0018)(Edit, BlueprintVisible)
	class FText                                   BackBlade;                                         // 0x0088(0x0018)(Edit, BlueprintVisible)
	class FText                                   FrontBlade;                                        // 0x00A0(0x0018)(Edit, BlueprintVisible)
	class FText                                   Head;                                              // 0x00B8(0x0018)(Edit, BlueprintVisible)
	class FText                                   Title;                                             // 0x00D0(0x0018)(Edit, BlueprintVisible)
	EPickaxePartLocation                          Temp_byte_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A5[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0120(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0180(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPickaxePartLocation                          Temp_byte_Variable_1;                              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A6[0x5];                                     // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x01A0(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x01B8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x01D0(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x01E8(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x0200(0x0018)()
};
static_assert(alignof(LIB_Game_UI_C_GetPickaxePartLocationTitle) == 0x000008, "Wrong alignment on LIB_Game_UI_C_GetPickaxePartLocationTitle");
static_assert(sizeof(LIB_Game_UI_C_GetPickaxePartLocationTitle) == 0x000218, "Wrong size on LIB_Game_UI_C_GetPickaxePartLocationTitle");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, InPartLocation) == 0x000000, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::InPartLocation' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, UpperCase) == 0x000001, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::UpperCase' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, LongName) == 0x000002, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::LongName' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, __WorldContext) == 0x000008, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, OutTitle) == 0x000010, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::OutTitle' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Paintjob) == 0x000028, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Paintjob' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Pommel) == 0x000040, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Pommel' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Handle) == 0x000058, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Handle' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Shaft) == 0x000070, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Shaft' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, BackBlade) == 0x000088, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::BackBlade' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, FrontBlade) == 0x0000A0, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::FrontBlade' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Head) == 0x0000B8, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Head' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Title) == 0x0000D0, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Title' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_byte_Variable) == 0x0000E8, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_text_Variable) == 0x0000F0, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_text_Variable_1) == 0x000108, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_text_Variable_2) == 0x000120, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_text_Variable_3) == 0x000138, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_text_Variable_4) == 0x000150, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_text_Variable_5) == 0x000168, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_text_Variable_6) == 0x000180, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_bool_Variable) == 0x000198, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_byte_Variable_1) == 0x000199, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, Temp_bool_Variable_1) == 0x00019A, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, K2Node_Select_Default) == 0x0001A0, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, CallFunc_TextToUpper_ReturnValue) == 0x0001B8, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, K2Node_Select_Default_1) == 0x0001D0, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, K2Node_Select_Default_2) == 0x0001E8, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetPickaxePartLocationTitle, K2Node_Select_Default_3) == 0x000200, "Member 'LIB_Game_UI_C_GetPickaxePartLocationTitle::K2Node_Select_Default_3' has a wrong offset!");

// Function LIB_Game_UI.LIB_Game_UI_C.GetEnemyFamilyInfo
// 0x0380 (0x0380 - 0x0000)
struct LIB_Game_UI_C_GetEnemyFamilyInfo final
{
public:
	EEnemyFamily                                  Family;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Param_Name;                                        // 0x0010(0x0018)(Parm, OutParm)
	class UTexture2D*                             Icon;                                              // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Softtex;                                           // 0x0040(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EEnemyFamily                                  Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A8[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEnemyFamilyName_Name;                  // 0x0070(0x0018)()
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable;                          // 0x0088(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_1;                        // 0x00B0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_2;                        // 0x00D8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_3;                        // 0x0100(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_4;                        // 0x0128(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_5;                        // 0x0150(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_6;                        // 0x0178(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_7;                        // 0x01A0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_8;                        // 0x01C8(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_9;                        // 0x01F0(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_10;                       // 0x0218(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Temp_softobject_Variable_11;                       // 0x0240(0x0028)(HasGetValueTypeHash)
	EEnemyFamily                                  Temp_byte_Variable_1;                              // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A9[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x026C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x027C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x028C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x029C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x02AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x02BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x02CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x02DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x02EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x02FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x030C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x031C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AA[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default;                             // 0x0330(0x0028)(HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LIB_Game_UI_C_GetEnemyFamilyInfo) == 0x000008, "Wrong alignment on LIB_Game_UI_C_GetEnemyFamilyInfo");
static_assert(sizeof(LIB_Game_UI_C_GetEnemyFamilyInfo) == 0x000380, "Wrong size on LIB_Game_UI_C_GetEnemyFamilyInfo");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Family) == 0x000000, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Family' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, __WorldContext) == 0x000008, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Param_Name) == 0x000010, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Param_Name' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Icon) == 0x000028, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Icon' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Color) == 0x000030, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Color' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Softtex) == 0x000040, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Softtex' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_byte_Variable) == 0x000068, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, CallFunc_GetEnemyFamilyName_Name) == 0x000070, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::CallFunc_GetEnemyFamilyName_Name' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable) == 0x000088, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_1) == 0x0000B0, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_2) == 0x0000D8, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_3) == 0x000100, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_4) == 0x000128, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_5) == 0x000150, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_6) == 0x000178, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_6' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_7) == 0x0001A0, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_7' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_8) == 0x0001C8, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_8' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_9) == 0x0001F0, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_9' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_10) == 0x000218, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_10' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_softobject_Variable_11) == 0x000240, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_softobject_Variable_11' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_byte_Variable_1) == 0x000268, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable) == 0x00026C, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_1) == 0x00027C, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_2) == 0x00028C, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_3) == 0x00029C, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_4) == 0x0002AC, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_5) == 0x0002BC, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_6) == 0x0002CC, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_7) == 0x0002DC, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_8) == 0x0002EC, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_9) == 0x0002FC, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_10) == 0x00030C, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, Temp_struct_Variable_11) == 0x00031C, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, K2Node_Select_Default) == 0x000330, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, K2Node_Select_Default_1) == 0x000358, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000368, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, K2Node_DynamicCast_AsTexture_2D) == 0x000370, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyInfo, K2Node_DynamicCast_bSuccess) == 0x000378, "Member 'LIB_Game_UI_C_GetEnemyFamilyInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function LIB_Game_UI.LIB_Game_UI_C.GetEnemyTypeInfo
// 0x0048 (0x0048 - 0x0000)
struct LIB_Game_UI_C_GetEnemyTypeInfo final
{
public:
	EEnemyType                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Display_Text;                                      // 0x0010(0x0018)(Parm, OutParm)
	class UTexture2D*                             Icon;                                              // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           IconColor;                                         // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LIB_Game_UI_C_GetEnemyTypeInfo) == 0x000008, "Wrong alignment on LIB_Game_UI_C_GetEnemyTypeInfo");
static_assert(sizeof(LIB_Game_UI_C_GetEnemyTypeInfo) == 0x000048, "Wrong size on LIB_Game_UI_C_GetEnemyTypeInfo");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyTypeInfo, Type) == 0x000000, "Member 'LIB_Game_UI_C_GetEnemyTypeInfo::Type' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyTypeInfo, __WorldContext) == 0x000008, "Member 'LIB_Game_UI_C_GetEnemyTypeInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyTypeInfo, Display_Text) == 0x000010, "Member 'LIB_Game_UI_C_GetEnemyTypeInfo::Display_Text' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyTypeInfo, Icon) == 0x000028, "Member 'LIB_Game_UI_C_GetEnemyTypeInfo::Icon' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyTypeInfo, IconColor) == 0x000030, "Member 'LIB_Game_UI_C_GetEnemyTypeInfo::IconColor' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyTypeInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'LIB_Game_UI_C_GetEnemyTypeInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function LIB_Game_UI.LIB_Game_UI_C.GetArmorTypeInfo
// 0x0048 (0x0048 - 0x0000)
struct LIB_Game_UI_C_GetArmorTypeInfo final
{
public:
	EArmorType                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Display_Text;                                      // 0x0010(0x0018)(Parm, OutParm)
	class UTexture2D*                             Icon;                                              // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LIB_Game_UI_C_GetArmorTypeInfo) == 0x000008, "Wrong alignment on LIB_Game_UI_C_GetArmorTypeInfo");
static_assert(sizeof(LIB_Game_UI_C_GetArmorTypeInfo) == 0x000048, "Wrong size on LIB_Game_UI_C_GetArmorTypeInfo");
static_assert(offsetof(LIB_Game_UI_C_GetArmorTypeInfo, Type) == 0x000000, "Member 'LIB_Game_UI_C_GetArmorTypeInfo::Type' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetArmorTypeInfo, __WorldContext) == 0x000008, "Member 'LIB_Game_UI_C_GetArmorTypeInfo::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetArmorTypeInfo, Display_Text) == 0x000010, "Member 'LIB_Game_UI_C_GetArmorTypeInfo::Display_Text' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetArmorTypeInfo, Icon) == 0x000028, "Member 'LIB_Game_UI_C_GetArmorTypeInfo::Icon' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetArmorTypeInfo, Color) == 0x000030, "Member 'LIB_Game_UI_C_GetArmorTypeInfo::Color' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetArmorTypeInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'LIB_Game_UI_C_GetArmorTypeInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function LIB_Game_UI.LIB_Game_UI_C.GetEnemyFamilyName
// 0x0168 (0x0168 - 0x0000)
struct LIB_Game_UI_C_GetEnemyFamilyName final
{
public:
	EEnemyFamily                                  Family;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Param_Name;                                        // 0x0010(0x0018)(Parm, OutParm)
	EEnemyFamily                                  Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34AE[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00D8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00F0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0108(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0120(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0138(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0150(0x0018)()
};
static_assert(alignof(LIB_Game_UI_C_GetEnemyFamilyName) == 0x000008, "Wrong alignment on LIB_Game_UI_C_GetEnemyFamilyName");
static_assert(sizeof(LIB_Game_UI_C_GetEnemyFamilyName) == 0x000168, "Wrong size on LIB_Game_UI_C_GetEnemyFamilyName");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Family) == 0x000000, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Family' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, __WorldContext) == 0x000008, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Param_Name) == 0x000010, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Param_Name' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_byte_Variable) == 0x000028, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable) == 0x000030, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_1) == 0x000048, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_2) == 0x000060, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_3) == 0x000078, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_4) == 0x000090, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_5) == 0x0000A8, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_6) == 0x0000C0, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_7) == 0x0000D8, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_8) == 0x0000F0, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_9) == 0x000108, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_10) == 0x000120, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, Temp_text_Variable_11) == 0x000138, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetEnemyFamilyName, K2Node_Select_Default) == 0x000150, "Member 'LIB_Game_UI_C_GetEnemyFamilyName::K2Node_Select_Default' has a wrong offset!");

// Function LIB_Game_UI.LIB_Game_UI_C.GetRewardText
// 0x04A8 (0x04A8 - 0x0000)
struct LIB_Game_UI_C_GetRewardText final
{
public:
	class UReward*                                Reward;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   Category;                                          // 0x0028(0x0018)(Parm, OutParm)
	class FText                                   Description;                                       // 0x0040(0x0018)(Parm, OutParm)
	bool                                          HasOptionalCharacterID;                            // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34AF[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CharacterID;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESchematicType                                Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B0[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00B8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E8(0x0040)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_4;                              // 0x0128(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B1[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_5;                              // 0x0148(0x0018)()
	class UVanityCollectionReward*                K2Node_DynamicCast_AsVanity_Collection_Reward;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B2[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematicReward*                       K2Node_DynamicCast_AsSchematic_Reward;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B3[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0180(0x0018)()
	class UVictoryPoseReward*                     K2Node_DynamicCast_AsVictory_Pose_Reward;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B4[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinUnlock*                            K2Node_DynamicCast_AsSkin_Unlock;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B5[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSkinText_Title;                        // 0x01B8(0x0018)()
	class FText                                   CallFunc_GetSkinText_Category;                     // 0x01D0(0x0018)()
	class FText                                   CallFunc_GetSkinText_Description;                  // 0x01E8(0x0018)()
	bool                                          CallFunc_GetSkinText_HasOptionalCharacterID;       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B6[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_GetSkinText_CharacterID;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPickaxeSetReward*                      K2Node_DynamicCast_AsPickaxe_Set_Reward;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B7[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0230(0x0018)()
	class UPickaxePartReward*                     K2Node_DynamicCast_AsPickaxe_Part_Reward;          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPickaxePartLocation                          CallFunc_GetPrefferedLocation_ReturnValue;         // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34B8[0x6];                                     // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UResourceReward*                        K2Node_DynamicCast_AsResource_Reward;              // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B9[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPickaxePartLocationTitle_OutTitle;     // 0x0268(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0280(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0300(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0310(0x0018)()
	class USeasonTokenReward*                     K2Node_DynamicCast_AsSeason_Token_Reward;          // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BA[0x7];                                     // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0338(0x0040)(HasGetValueTypeHash)
	class UVanityReward*                          K2Node_DynamicCast_AsVanity_Reward;                // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BB[0x7];                                     // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0388(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0398(0x0018)()
	class FText                                   CallFunc_GetCraftableDescription_ReturnValue;      // 0x03B0(0x0018)(ConstParm)
	class FText                                   CallFunc_GetCraftableName_ReturnValue;             // 0x03C8(0x0018)(ConstParm)
	EVanitySlot                                   CallFunc_GetVanitySlot_ReturnValue;                // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BC[0x3];                                     // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BD[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVanityItem*                            CallFunc_Array_Get_Item;                           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVanitySlot                                   CallFunc_GetVanitySlot_ReturnValue_1;              // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34BE[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCraftableDescription_ReturnValue_1;    // 0x0400(0x0018)(ConstParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34BF[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetVanitySlotTitle_OutTitle;              // 0x0420(0x0018)()
	class FText                                   CallFunc_GetCraftableName_ReturnValue_1;           // 0x0438(0x0018)(ConstParm)
	class FText                                   CallFunc_GetVanitySlotTitle_OutTitle_1;            // 0x0450(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0468(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C0[0x3];                                     // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x0488(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C1[0x3];                                     // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LIB_Game_UI_C_GetRewardText) == 0x000008, "Wrong alignment on LIB_Game_UI_C_GetRewardText");
static_assert(sizeof(LIB_Game_UI_C_GetRewardText) == 0x0004A8, "Wrong size on LIB_Game_UI_C_GetRewardText");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Reward) == 0x000000, "Member 'LIB_Game_UI_C_GetRewardText::Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, __WorldContext) == 0x000008, "Member 'LIB_Game_UI_C_GetRewardText::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Title) == 0x000010, "Member 'LIB_Game_UI_C_GetRewardText::Title' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Category) == 0x000028, "Member 'LIB_Game_UI_C_GetRewardText::Category' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Description) == 0x000040, "Member 'LIB_Game_UI_C_GetRewardText::Description' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, HasOptionalCharacterID) == 0x000058, "Member 'LIB_Game_UI_C_GetRewardText::HasOptionalCharacterID' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CharacterID) == 0x000060, "Member 'LIB_Game_UI_C_GetRewardText::CharacterID' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_byte_Variable) == 0x000068, "Member 'LIB_Game_UI_C_GetRewardText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_text_Variable) == 0x000070, "Member 'LIB_Game_UI_C_GetRewardText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_text_Variable_1) == 0x000088, "Member 'LIB_Game_UI_C_GetRewardText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_text_Variable_2) == 0x0000A0, "Member 'LIB_Game_UI_C_GetRewardText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_text_Variable_3) == 0x0000B8, "Member 'LIB_Game_UI_C_GetRewardText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_MakeLiteralText_ReturnValue) == 0x0000D0, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_MakeStruct_FormatArgumentData) == 0x0000E8, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_text_Variable_4) == 0x000128, "Member 'LIB_Game_UI_C_GetRewardText::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_bool_Variable) == 0x000140, "Member 'LIB_Game_UI_C_GetRewardText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_text_Variable_5) == 0x000148, "Member 'LIB_Game_UI_C_GetRewardText::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_AsVanity_Collection_Reward) == 0x000160, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_AsVanity_Collection_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_AsSchematic_Reward) == 0x000170, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_AsSchematic_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_bSuccess_1) == 0x000178, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_Array_Length_ReturnValue) == 0x00017C, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_Select_Default) == 0x000180, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_AsVictory_Pose_Reward) == 0x000198, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_AsVictory_Pose_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_AsSkin_Unlock) == 0x0001A8, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_AsSkin_Unlock' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_bSuccess_3) == 0x0001B0, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetSkinText_Title) == 0x0001B8, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetSkinText_Title' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetSkinText_Category) == 0x0001D0, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetSkinText_Category' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetSkinText_Description) == 0x0001E8, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetSkinText_Description' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetSkinText_HasOptionalCharacterID) == 0x000200, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetSkinText_HasOptionalCharacterID' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetSkinText_CharacterID) == 0x000208, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetSkinText_CharacterID' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_AsPickaxe_Set_Reward) == 0x000210, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_AsPickaxe_Set_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_bSuccess_4) == 0x000218, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetObjectName_ReturnValue) == 0x000220, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_Conv_StringToText_ReturnValue) == 0x000230, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_AsPickaxe_Part_Reward) == 0x000248, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_AsPickaxe_Part_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_bSuccess_5) == 0x000250, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetPrefferedLocation_ReturnValue) == 0x000251, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetPrefferedLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_AsResource_Reward) == 0x000258, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_AsResource_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_bSuccess_6) == 0x000260, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetPickaxePartLocationTitle_OutTitle) == 0x000268, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetPickaxePartLocationTitle_OutTitle' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000280, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002C0, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_MakeArray_Array) == 0x000300, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_Format_ReturnValue) == 0x000310, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_AsSeason_Token_Reward) == 0x000328, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_AsSeason_Token_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_bSuccess_7) == 0x000330, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000338, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_AsVanity_Reward) == 0x000378, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_AsVanity_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_DynamicCast_bSuccess_8) == 0x000380, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_MakeArray_Array_1) == 0x000388, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_Format_ReturnValue_1) == 0x000398, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetCraftableDescription_ReturnValue) == 0x0003B0, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetCraftableDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetCraftableName_ReturnValue) == 0x0003C8, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetCraftableName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetVanitySlot_ReturnValue) == 0x0003E0, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetVanitySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_int_Array_Index_Variable) == 0x0003E4, "Member 'LIB_Game_UI_C_GetRewardText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003E8, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_Array_Get_Item) == 0x0003F0, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetVanitySlot_ReturnValue_1) == 0x0003F8, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetVanitySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetCraftableDescription_ReturnValue_1) == 0x000400, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetCraftableDescription_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000418, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetVanitySlotTitle_OutTitle) == 0x000420, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetVanitySlotTitle_OutTitle' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetCraftableName_ReturnValue_1) == 0x000438, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetCraftableName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_GetVanitySlotTitle_OutTitle_1) == 0x000450, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_GetVanitySlotTitle_OutTitle_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_Select_Default_1) == 0x000468, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_bool_Variable_1) == 0x000480, "Member 'LIB_Game_UI_C_GetRewardText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, Temp_int_Loop_Counter_Variable) == 0x000484, "Member 'LIB_Game_UI_C_GetRewardText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, K2Node_Select_Default_2) == 0x000488, "Member 'LIB_Game_UI_C_GetRewardText::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_Less_IntInt_ReturnValue) == 0x0004A0, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardText, CallFunc_Add_IntInt_ReturnValue) == 0x0004A4, "Member 'LIB_Game_UI_C_GetRewardText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function LIB_Game_UI.LIB_Game_UI_C.GetRewardIcon
// 0x0110 (0x0110 - 0x0000)
struct LIB_Game_UI_C_GetRewardIcon final
{
public:
	class UReward*                                Reward;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Icon;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemSkinType                                 Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C3[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_3;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemSkinType                                 Temp_byte_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C4[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_4;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVanityCollectionReward*                K2Node_DynamicCast_AsVanity_Collection_Reward;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USchematicReward*                       K2Node_DynamicCast_AsSchematic_Reward;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C6[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVictoryPoseReward*                     K2Node_DynamicCast_AsVictory_Pose_Reward;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C7[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinUnlock*                            K2Node_DynamicCast_AsSkin_Unlock;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34C8[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPickaxeSetReward*                      K2Node_DynamicCast_AsPickaxe_Set_Reward;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemSkinType                                 CallFunc_GetSkinType_ReturnValue;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C9[0x5];                                     // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_1;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPickaxePartReward*                     K2Node_DynamicCast_AsPickaxe_Part_Reward;          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CA[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UResourceReward*                        K2Node_DynamicCast_AsResource_Reward;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPickaxePartLocation                          CallFunc_GetPrefferedLocation_ReturnValue;         // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CB[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USeasonTokenReward*                     K2Node_DynamicCast_AsSeason_Token_Reward;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CC[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVanityReward*                          K2Node_DynamicCast_AsVanity_Reward;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CD[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_2;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_GetIcon_ReturnValue;                      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LIB_Game_UI_C_GetRewardIcon) == 0x000008, "Wrong alignment on LIB_Game_UI_C_GetRewardIcon");
static_assert(sizeof(LIB_Game_UI_C_GetRewardIcon) == 0x000110, "Wrong size on LIB_Game_UI_C_GetRewardIcon");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Reward) == 0x000000, "Member 'LIB_Game_UI_C_GetRewardIcon::Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, __WorldContext) == 0x000008, "Member 'LIB_Game_UI_C_GetRewardIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Icon) == 0x000010, "Member 'LIB_Game_UI_C_GetRewardIcon::Icon' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Temp_bool_Variable) == 0x000018, "Member 'LIB_Game_UI_C_GetRewardIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Temp_object_Variable) == 0x000020, "Member 'LIB_Game_UI_C_GetRewardIcon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Temp_object_Variable_1) == 0x000028, "Member 'LIB_Game_UI_C_GetRewardIcon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Temp_byte_Variable) == 0x000030, "Member 'LIB_Game_UI_C_GetRewardIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Temp_object_Variable_2) == 0x000038, "Member 'LIB_Game_UI_C_GetRewardIcon::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Temp_object_Variable_3) == 0x000040, "Member 'LIB_Game_UI_C_GetRewardIcon::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Temp_byte_Variable_1) == 0x000048, "Member 'LIB_Game_UI_C_GetRewardIcon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Temp_object_Variable_4) == 0x000050, "Member 'LIB_Game_UI_C_GetRewardIcon::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, Temp_object_Variable_5) == 0x000058, "Member 'LIB_Game_UI_C_GetRewardIcon::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_AsVanity_Collection_Reward) == 0x000060, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_AsVanity_Collection_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_AsSchematic_Reward) == 0x000070, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_AsSchematic_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_AsVictory_Pose_Reward) == 0x000080, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_AsVictory_Pose_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_AsSkin_Unlock) == 0x000090, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_AsSkin_Unlock' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_AsPickaxe_Set_Reward) == 0x0000A0, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_AsPickaxe_Set_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A9, "Member 'LIB_Game_UI_C_GetRewardIcon::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, CallFunc_GetSkinType_ReturnValue) == 0x0000AA, "Member 'LIB_Game_UI_C_GetRewardIcon::CallFunc_GetSkinType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_Select_Default) == 0x0000B0, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_Select_Default_1) == 0x0000B8, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_AsPickaxe_Part_Reward) == 0x0000C0, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_AsPickaxe_Part_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_bSuccess_5) == 0x0000C8, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_AsResource_Reward) == 0x0000D0, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_AsResource_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_bSuccess_6) == 0x0000D8, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, CallFunc_GetPrefferedLocation_ReturnValue) == 0x0000D9, "Member 'LIB_Game_UI_C_GetRewardIcon::CallFunc_GetPrefferedLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_AsSeason_Token_Reward) == 0x0000E0, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_AsSeason_Token_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_bSuccess_7) == 0x0000E8, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E9, "Member 'LIB_Game_UI_C_GetRewardIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_AsVanity_Reward) == 0x0000F0, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_AsVanity_Reward' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_DynamicCast_bSuccess_8) == 0x0000F8, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, K2Node_Select_Default_2) == 0x000100, "Member 'LIB_Game_UI_C_GetRewardIcon::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetRewardIcon, CallFunc_GetIcon_ReturnValue) == 0x000108, "Member 'LIB_Game_UI_C_GetRewardIcon::CallFunc_GetIcon_ReturnValue' has a wrong offset!");

// Function LIB_Game_UI.LIB_Game_UI_C.GetSkinText
// 0x0198 (0x0198 - 0x0000)
struct LIB_Game_UI_C_GetSkinText final
{
public:
	class UItemSkin*                              InSkin;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemID*                                InOptionalItem;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     InOptionalCharacter;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Title;                                             // 0x0020(0x0018)(Parm, OutParm)
	class FText                                   Category;                                          // 0x0038(0x0018)(Parm, OutParm)
	class FText                                   Description;                                       // 0x0050(0x0018)(Parm, OutParm)
	bool                                          HasOptionalCharacterID;                            // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34CE[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CharacterID;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemSkinType                                 Temp_byte_Variable;                                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34CF[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x00C8(0x0018)()
	class FText                                   CallFunc_GetSkinName_ReturnValue;                  // 0x00E0(0x0018)(ConstParm)
	EItemSkinType                                 CallFunc_GetSkinType_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D0[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActor_ReturnValue;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0108(0x0018)()
	class AItem*                                  K2Node_DynamicCast_AsItem;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D1[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0130(0x0018)()
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemSkinType                                 Temp_byte_Variable_1;                              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D2[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0150(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D3[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharacterID*                     CallFunc_GetOwningCharacter_ReturnValue;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D4[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0180(0x0018)()
};
static_assert(alignof(LIB_Game_UI_C_GetSkinText) == 0x000008, "Wrong alignment on LIB_Game_UI_C_GetSkinText");
static_assert(sizeof(LIB_Game_UI_C_GetSkinText) == 0x000198, "Wrong size on LIB_Game_UI_C_GetSkinText");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, InSkin) == 0x000000, "Member 'LIB_Game_UI_C_GetSkinText::InSkin' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, InOptionalItem) == 0x000008, "Member 'LIB_Game_UI_C_GetSkinText::InOptionalItem' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, InOptionalCharacter) == 0x000010, "Member 'LIB_Game_UI_C_GetSkinText::InOptionalCharacter' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, __WorldContext) == 0x000018, "Member 'LIB_Game_UI_C_GetSkinText::__WorldContext' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Title) == 0x000020, "Member 'LIB_Game_UI_C_GetSkinText::Title' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Category) == 0x000038, "Member 'LIB_Game_UI_C_GetSkinText::Category' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Description) == 0x000050, "Member 'LIB_Game_UI_C_GetSkinText::Description' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, HasOptionalCharacterID) == 0x000068, "Member 'LIB_Game_UI_C_GetSkinText::HasOptionalCharacterID' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, CharacterID) == 0x000070, "Member 'LIB_Game_UI_C_GetSkinText::CharacterID' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Temp_text_Variable) == 0x000078, "Member 'LIB_Game_UI_C_GetSkinText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Temp_text_Variable_1) == 0x000090, "Member 'LIB_Game_UI_C_GetSkinText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Temp_bool_Variable) == 0x0000A8, "Member 'LIB_Game_UI_C_GetSkinText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Temp_byte_Variable) == 0x0000A9, "Member 'LIB_Game_UI_C_GetSkinText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Temp_text_Variable_2) == 0x0000B0, "Member 'LIB_Game_UI_C_GetSkinText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Temp_text_Variable_3) == 0x0000C8, "Member 'LIB_Game_UI_C_GetSkinText::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, CallFunc_GetSkinName_ReturnValue) == 0x0000E0, "Member 'LIB_Game_UI_C_GetSkinText::CallFunc_GetSkinName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, CallFunc_GetSkinType_ReturnValue) == 0x0000F8, "Member 'LIB_Game_UI_C_GetSkinText::CallFunc_GetSkinType_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, CallFunc_GetActor_ReturnValue) == 0x000100, "Member 'LIB_Game_UI_C_GetSkinText::CallFunc_GetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, K2Node_Select_Default) == 0x000108, "Member 'LIB_Game_UI_C_GetSkinText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, K2Node_DynamicCast_AsItem) == 0x000120, "Member 'LIB_Game_UI_C_GetSkinText::K2Node_DynamicCast_AsItem' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'LIB_Game_UI_C_GetSkinText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, CallFunc_GetItemName_ReturnValue) == 0x000130, "Member 'LIB_Game_UI_C_GetSkinText::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000148, "Member 'LIB_Game_UI_C_GetSkinText::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, Temp_byte_Variable_1) == 0x000149, "Member 'LIB_Game_UI_C_GetSkinText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, K2Node_Select_Default_1) == 0x000150, "Member 'LIB_Game_UI_C_GetSkinText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'LIB_Game_UI_C_GetSkinText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, CallFunc_GetOwningCharacter_ReturnValue) == 0x000170, "Member 'LIB_Game_UI_C_GetSkinText::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000178, "Member 'LIB_Game_UI_C_GetSkinText::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LIB_Game_UI_C_GetSkinText, K2Node_Select_Default_2) == 0x000180, "Member 'LIB_Game_UI_C_GetSkinText::K2Node_Select_Default_2' has a wrong offset!");

}

