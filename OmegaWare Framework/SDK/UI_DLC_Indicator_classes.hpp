#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_DLC_Indicator

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "Engine_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass UI_DLC_Indicator.UI_DLC_Indicator_C
// 0x0028 (0x0288 - 0x0260)
class UUI_DLC_Indicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               DLC_SizeBox;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Root_Canvas;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Size;                                              // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ENUM_MenuColors                               Tint;                                              // 0x027C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3449[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDLCBase*                               Dlc;                                               // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_DLC_Indicator(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void SetFromSkin(class UItemSkin* InItem);
	void SetFromDLC(class UDLCBase* InFromDLC);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_DLC_Indicator_C">();
	}
	static class UUI_DLC_Indicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_DLC_Indicator_C>();
	}
};
static_assert(alignof(UUI_DLC_Indicator_C) == 0x000008, "Wrong alignment on UUI_DLC_Indicator_C");
static_assert(sizeof(UUI_DLC_Indicator_C) == 0x000288, "Wrong size on UUI_DLC_Indicator_C");
static_assert(offsetof(UUI_DLC_Indicator_C, UberGraphFrame) == 0x000260, "Member 'UUI_DLC_Indicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_DLC_Indicator_C, DLC_SizeBox) == 0x000268, "Member 'UUI_DLC_Indicator_C::DLC_SizeBox' has a wrong offset!");
static_assert(offsetof(UUI_DLC_Indicator_C, Root_Canvas) == 0x000270, "Member 'UUI_DLC_Indicator_C::Root_Canvas' has a wrong offset!");
static_assert(offsetof(UUI_DLC_Indicator_C, Size) == 0x000278, "Member 'UUI_DLC_Indicator_C::Size' has a wrong offset!");
static_assert(offsetof(UUI_DLC_Indicator_C, Tint) == 0x00027C, "Member 'UUI_DLC_Indicator_C::Tint' has a wrong offset!");
static_assert(offsetof(UUI_DLC_Indicator_C, Dlc) == 0x000280, "Member 'UUI_DLC_Indicator_C::Dlc' has a wrong offset!");

}

