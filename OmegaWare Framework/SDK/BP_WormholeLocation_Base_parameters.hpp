#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WormholeLocation_Base

#include "Basic.hpp"


namespace CG::Params
{

// Function BP_WormholeLocation_Base.BP_WormholeLocation_Base_C.ExecuteUbergraph_BP_WormholeLocation_Base
// 0x0018 (0x0018 - 0x0000)
struct BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DEC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_CustomEvent_Character;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_CustomEvent_Character_1;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base) == 0x000008, "Wrong alignment on BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base");
static_assert(sizeof(BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base) == 0x000018, "Wrong size on BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base");
static_assert(offsetof(BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base, EntryPoint) == 0x000000, "Member 'BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base, K2Node_CustomEvent_Character) == 0x000008, "Member 'BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base, K2Node_CustomEvent_Character_1) == 0x000010, "Member 'BP_WormholeLocation_Base_C_ExecuteUbergraph_BP_WormholeLocation_Base::K2Node_CustomEvent_Character_1' has a wrong offset!");

// Function BP_WormholeLocation_Base.BP_WormholeLocation_Base_C.OnPlayerLeaveLocation
// 0x0008 (0x0008 - 0x0000)
struct BP_WormholeLocation_Base_C_OnPlayerLeaveLocation final
{
public:
	class APlayerCharacter*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WormholeLocation_Base_C_OnPlayerLeaveLocation) == 0x000008, "Wrong alignment on BP_WormholeLocation_Base_C_OnPlayerLeaveLocation");
static_assert(sizeof(BP_WormholeLocation_Base_C_OnPlayerLeaveLocation) == 0x000008, "Wrong size on BP_WormholeLocation_Base_C_OnPlayerLeaveLocation");
static_assert(offsetof(BP_WormholeLocation_Base_C_OnPlayerLeaveLocation, Character) == 0x000000, "Member 'BP_WormholeLocation_Base_C_OnPlayerLeaveLocation::Character' has a wrong offset!");

// Function BP_WormholeLocation_Base.BP_WormholeLocation_Base_C.OnPlayerEnterLocation
// 0x0008 (0x0008 - 0x0000)
struct BP_WormholeLocation_Base_C_OnPlayerEnterLocation final
{
public:
	class APlayerCharacter*                       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WormholeLocation_Base_C_OnPlayerEnterLocation) == 0x000008, "Wrong alignment on BP_WormholeLocation_Base_C_OnPlayerEnterLocation");
static_assert(sizeof(BP_WormholeLocation_Base_C_OnPlayerEnterLocation) == 0x000008, "Wrong size on BP_WormholeLocation_Base_C_OnPlayerEnterLocation");
static_assert(offsetof(BP_WormholeLocation_Base_C_OnPlayerEnterLocation, Character) == 0x000000, "Member 'BP_WormholeLocation_Base_C_OnPlayerEnterLocation::Character' has a wrong offset!");

}

