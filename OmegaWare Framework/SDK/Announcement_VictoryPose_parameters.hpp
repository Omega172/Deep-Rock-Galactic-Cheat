#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Announcement_VictoryPose

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function Announcement_VictoryPose.Announcement_VictoryPose_C.ExecuteUbergraph_Announcement_VictoryPose
// 0x0060 (0x0060 - 0x0000)
struct Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DA[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharacterID*                     K2Node_DynamicCast_AsPlayer_Character_ID;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33DB[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVictoryPose*                           K2Node_DynamicCast_AsVictory_Pose;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose) == 0x000008, "Wrong alignment on Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose");
static_assert(sizeof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose) == 0x000060, "Wrong size on Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, EntryPoint) == 0x000000, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::EntryPoint' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, K2Node_Event_IsDesignTime) == 0x000014, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, CallFunc_MenuColors_OutputColor) == 0x000020, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::CallFunc_MenuColors_OutputColor' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000030, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000038, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, K2Node_DynamicCast_AsPlayer_Character_ID) == 0x000040, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::K2Node_DynamicCast_AsPlayer_Character_ID' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, K2Node_DynamicCast_AsVictory_Pose) == 0x000050, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::K2Node_DynamicCast_AsVictory_Pose' has a wrong offset!");
static_assert(offsetof(Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Announcement_VictoryPose_C_ExecuteUbergraph_Announcement_VictoryPose::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Announcement_VictoryPose.Announcement_VictoryPose_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Announcement_VictoryPose_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Announcement_VictoryPose_C_PreConstruct) == 0x000001, "Wrong alignment on Announcement_VictoryPose_C_PreConstruct");
static_assert(sizeof(Announcement_VictoryPose_C_PreConstruct) == 0x000001, "Wrong size on Announcement_VictoryPose_C_PreConstruct");
static_assert(offsetof(Announcement_VictoryPose_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Announcement_VictoryPose_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

