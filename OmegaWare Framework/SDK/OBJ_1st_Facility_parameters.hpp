#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OBJ_1st_Facility

#include "Basic.hpp"

#include "FSD_structs.hpp"
#include "Engine_structs.hpp"


namespace CG::Params
{

// Function OBJ_1st_Facility.OBJ_1st_Facility_C.ExecuteUbergraph_OBJ_1st_Facility
// 0x00A8 (0x00A8 - 0x0000)
struct OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2E7D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProceduralSetup*                       K2Node_Event_setup;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Donkey_C*                           K2Node_DynamicCast_AsBP_Donkey;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E7E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEncounterManager*                      CallFunc_GetEncounterManager_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionDNA*                            CallFunc_GetMissionDNA_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDNA_Facility_DNA_C*                    K2Node_DynamicCast_AsDNA_Facility_DNA;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E7F[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E80[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIRandRange                            K2Node_MakeStruct_IRandRange;                      // 0x0070(0x0008)(NoDestructor)
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue_1;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E81[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIRandRange                            K2Node_MakeStruct_IRandRange_1;                    // 0x008C(0x0008)(NoDestructor)
	bool                                          CallFunc_AreRequiredSecondariesComplete_ReturnValue; // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E82[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDGameMode*                           CallFunc_GetFSDGameMode_ReturnValue_2;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFSDGameInstance*                       CallFunc_GetFSDGameInstance_ReturnValue_1;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility) == 0x000008, "Wrong alignment on OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility");
static_assert(sizeof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility) == 0x0000A8, "Wrong size on OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, EntryPoint) == 0x000000, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::EntryPoint' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_GetFSDGameInstance_ReturnValue) == 0x000018, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_GetFSDGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, K2Node_Event_setup) == 0x000020, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::K2Node_Event_setup' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_GetFSDGameMode_ReturnValue) == 0x000028, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_GetFSDGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, K2Node_DynamicCast_AsBP_Donkey) == 0x000030, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::K2Node_DynamicCast_AsBP_Donkey' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_GetEncounterManager_ReturnValue) == 0x000040, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_GetEncounterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_GetProceduralSetup_ReturnValue) == 0x000048, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_GetProceduralSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_GetMissionDNA_ReturnValue) == 0x000050, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_GetMissionDNA_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, K2Node_DynamicCast_AsDNA_Facility_DNA) == 0x000058, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::K2Node_DynamicCast_AsDNA_Facility_DNA' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_Subtract_IntInt_ReturnValue) == 0x000064, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000068, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, K2Node_SwitchInteger_CmpSuccess) == 0x00006C, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, K2Node_MakeStruct_IRandRange) == 0x000070, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::K2Node_MakeStruct_IRandRange' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_GetFSDGameMode_ReturnValue_1) == 0x000078, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_GetFSDGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000080, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000084, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, K2Node_MakeStruct_IRandRange_1) == 0x00008C, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::K2Node_MakeStruct_IRandRange_1' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_AreRequiredSecondariesComplete_ReturnValue) == 0x000094, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_AreRequiredSecondariesComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_GetFSDGameMode_ReturnValue_2) == 0x000098, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_GetFSDGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility, CallFunc_GetFSDGameInstance_ReturnValue_1) == 0x0000A0, "Member 'OBJ_1st_Facility_C_ExecuteUbergraph_OBJ_1st_Facility::CallFunc_GetFSDGameInstance_ReturnValue_1' has a wrong offset!");

// Function OBJ_1st_Facility.OBJ_1st_Facility_C.Receive_AddEnemies
// 0x0008 (0x0008 - 0x0000)
struct OBJ_1st_Facility_C_Receive_AddEnemies final
{
public:
	class AProceduralSetup*                       Setup;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OBJ_1st_Facility_C_Receive_AddEnemies) == 0x000008, "Wrong alignment on OBJ_1st_Facility_C_Receive_AddEnemies");
static_assert(sizeof(OBJ_1st_Facility_C_Receive_AddEnemies) == 0x000008, "Wrong size on OBJ_1st_Facility_C_Receive_AddEnemies");
static_assert(offsetof(OBJ_1st_Facility_C_Receive_AddEnemies, Setup) == 0x000000, "Member 'OBJ_1st_Facility_C_Receive_AddEnemies::Setup' has a wrong offset!");

// Function OBJ_1st_Facility.OBJ_1st_Facility_C.GetObjectiveDescription
// 0x0020 (0x0020 - 0x0000)
struct OBJ_1st_Facility_C_GetObjectiveDescription final
{
public:
	float                                         MissionLength;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E83[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(OBJ_1st_Facility_C_GetObjectiveDescription) == 0x000008, "Wrong alignment on OBJ_1st_Facility_C_GetObjectiveDescription");
static_assert(sizeof(OBJ_1st_Facility_C_GetObjectiveDescription) == 0x000020, "Wrong size on OBJ_1st_Facility_C_GetObjectiveDescription");
static_assert(offsetof(OBJ_1st_Facility_C_GetObjectiveDescription, MissionLength) == 0x000000, "Member 'OBJ_1st_Facility_C_GetObjectiveDescription::MissionLength' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_GetObjectiveDescription, ReturnValue) == 0x000008, "Member 'OBJ_1st_Facility_C_GetObjectiveDescription::ReturnValue' has a wrong offset!");

// Function OBJ_1st_Facility.OBJ_1st_Facility_C.GetObjectiveIcon
// 0x0008 (0x0008 - 0x0000)
struct OBJ_1st_Facility_C_GetObjectiveIcon final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OBJ_1st_Facility_C_GetObjectiveIcon) == 0x000008, "Wrong alignment on OBJ_1st_Facility_C_GetObjectiveIcon");
static_assert(sizeof(OBJ_1st_Facility_C_GetObjectiveIcon) == 0x000008, "Wrong size on OBJ_1st_Facility_C_GetObjectiveIcon");
static_assert(offsetof(OBJ_1st_Facility_C_GetObjectiveIcon, ReturnValue) == 0x000000, "Member 'OBJ_1st_Facility_C_GetObjectiveIcon::ReturnValue' has a wrong offset!");

// Function OBJ_1st_Facility.OBJ_1st_Facility_C.GetInMissionCounterIcon
// 0x0010 (0x0010 - 0x0000)
struct OBJ_1st_Facility_C_GetInMissionCounterIcon final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetInMissionCounterIcon_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OBJ_1st_Facility_C_GetInMissionCounterIcon) == 0x000008, "Wrong alignment on OBJ_1st_Facility_C_GetInMissionCounterIcon");
static_assert(sizeof(OBJ_1st_Facility_C_GetInMissionCounterIcon) == 0x000010, "Wrong size on OBJ_1st_Facility_C_GetInMissionCounterIcon");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionCounterIcon, ReturnValue) == 0x000000, "Member 'OBJ_1st_Facility_C_GetInMissionCounterIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionCounterIcon, CallFunc_GetInMissionCounterIcon_ReturnValue) == 0x000008, "Member 'OBJ_1st_Facility_C_GetInMissionCounterIcon::CallFunc_GetInMissionCounterIcon_ReturnValue' has a wrong offset!");

// Function OBJ_1st_Facility.OBJ_1st_Facility_C.IsObjectiveResource
// 0x0010 (0x0010 - 0x0000)
struct OBJ_1st_Facility_C_IsObjectiveResource final
{
public:
	class UResourceData*                          InResource;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OBJ_1st_Facility_C_IsObjectiveResource) == 0x000008, "Wrong alignment on OBJ_1st_Facility_C_IsObjectiveResource");
static_assert(sizeof(OBJ_1st_Facility_C_IsObjectiveResource) == 0x000010, "Wrong size on OBJ_1st_Facility_C_IsObjectiveResource");
static_assert(offsetof(OBJ_1st_Facility_C_IsObjectiveResource, InResource) == 0x000000, "Member 'OBJ_1st_Facility_C_IsObjectiveResource::InResource' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_IsObjectiveResource, ReturnValue) == 0x000008, "Member 'OBJ_1st_Facility_C_IsObjectiveResource::ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_IsObjectiveResource, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'OBJ_1st_Facility_C_IsObjectiveResource::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function OBJ_1st_Facility.OBJ_1st_Facility_C.GetObjectiveAmount
// 0x0008 (0x0008 - 0x0000)
struct OBJ_1st_Facility_C_GetObjectiveAmount final
{
public:
	float                                         MissionLength;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OBJ_1st_Facility_C_GetObjectiveAmount) == 0x000004, "Wrong alignment on OBJ_1st_Facility_C_GetObjectiveAmount");
static_assert(sizeof(OBJ_1st_Facility_C_GetObjectiveAmount) == 0x000008, "Wrong size on OBJ_1st_Facility_C_GetObjectiveAmount");
static_assert(offsetof(OBJ_1st_Facility_C_GetObjectiveAmount, MissionLength) == 0x000000, "Member 'OBJ_1st_Facility_C_GetObjectiveAmount::MissionLength' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_GetObjectiveAmount, ReturnValue) == 0x000004, "Member 'OBJ_1st_Facility_C_GetObjectiveAmount::ReturnValue' has a wrong offset!");

// Function OBJ_1st_Facility.OBJ_1st_Facility_C.GetInMissionText
// 0x0048 (0x0048 - 0x0000)
struct OBJ_1st_Facility_C_GetInMissionText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FSubObjective                          CallFunc_GetCurrentObjective_ReturnValue;          // 0x0018(0x0030)(ConstParm)
};
static_assert(alignof(OBJ_1st_Facility_C_GetInMissionText) == 0x000008, "Wrong alignment on OBJ_1st_Facility_C_GetInMissionText");
static_assert(sizeof(OBJ_1st_Facility_C_GetInMissionText) == 0x000048, "Wrong size on OBJ_1st_Facility_C_GetInMissionText");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionText, ReturnValue) == 0x000000, "Member 'OBJ_1st_Facility_C_GetInMissionText::ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionText, CallFunc_GetCurrentObjective_ReturnValue) == 0x000018, "Member 'OBJ_1st_Facility_C_GetInMissionText::CallFunc_GetCurrentObjective_ReturnValue' has a wrong offset!");

// Function OBJ_1st_Facility.OBJ_1st_Facility_C.GetInMissionCounterText
// 0x00F0 (0x00F0 - 0x0000)
struct OBJ_1st_Facility_C_GetInMissionCounterText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FSubObjective                          CallFunc_GetCurrentObjective_ReturnValue;          // 0x0018(0x0030)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
};
static_assert(alignof(OBJ_1st_Facility_C_GetInMissionCounterText) == 0x000008, "Wrong alignment on OBJ_1st_Facility_C_GetInMissionCounterText");
static_assert(sizeof(OBJ_1st_Facility_C_GetInMissionCounterText) == 0x0000F0, "Wrong size on OBJ_1st_Facility_C_GetInMissionCounterText");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionCounterText, ReturnValue) == 0x000000, "Member 'OBJ_1st_Facility_C_GetInMissionCounterText::ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionCounterText, CallFunc_GetCurrentObjective_ReturnValue) == 0x000018, "Member 'OBJ_1st_Facility_C_GetInMissionCounterText::CallFunc_GetCurrentObjective_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionCounterText, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'OBJ_1st_Facility_C_GetInMissionCounterText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionCounterText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'OBJ_1st_Facility_C_GetInMissionCounterText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionCounterText, K2Node_MakeArray_Array) == 0x0000C8, "Member 'OBJ_1st_Facility_C_GetInMissionCounterText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(OBJ_1st_Facility_C_GetInMissionCounterText, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'OBJ_1st_Facility_C_GetInMissionCounterText::CallFunc_Format_ReturnValue' has a wrong offset!");

}

