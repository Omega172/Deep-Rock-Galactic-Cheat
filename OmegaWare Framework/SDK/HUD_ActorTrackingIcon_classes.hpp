#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_ActorTrackingIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_classes.hpp"
#include "UMG_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_ActorTrackingIcon.HUD_ActorTrackingIcon_C
// 0x0038 (0x02E8 - 0x02B0)
class UHUD_ActorTrackingIcon_C final : public UActorTrackingWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Arrow;                                             // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DataImage;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_DefaultLabel_C*                    Distance;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_DefaultLabel_C*                    Name_HUD_ActorTrackingIcon_C;                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         ArrowRotation;                                     // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArrowRadius;                                       // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArrowAngle;                                        // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HUD_ActorTrackingIcon(int32 EntryPoint);
	void OnShow();
	void UpdateArrow(bool InView, float Angle);
	void PreConstruct(bool IsDesignTime);
	void OnInViewChanged(bool InView, float Angle);
	void OnPlayerNameChanged(const class FString& NewName);
	void OnTargetSet(class AActor* NewTarget);
	void OnTargetDistanceChanged(float Param_Distance);
	void SetInfo(const class FText& InText, class UTexture2D* Texture, const struct FLinearColor& InTint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_ActorTrackingIcon_C">();
	}
	static class UHUD_ActorTrackingIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_ActorTrackingIcon_C>();
	}
};
static_assert(alignof(UHUD_ActorTrackingIcon_C) == 0x000008, "Wrong alignment on UHUD_ActorTrackingIcon_C");
static_assert(sizeof(UHUD_ActorTrackingIcon_C) == 0x0002E8, "Wrong size on UHUD_ActorTrackingIcon_C");
static_assert(offsetof(UHUD_ActorTrackingIcon_C, UberGraphFrame) == 0x0002B0, "Member 'UHUD_ActorTrackingIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_ActorTrackingIcon_C, Arrow) == 0x0002B8, "Member 'UHUD_ActorTrackingIcon_C::Arrow' has a wrong offset!");
static_assert(offsetof(UHUD_ActorTrackingIcon_C, DataImage) == 0x0002C0, "Member 'UHUD_ActorTrackingIcon_C::DataImage' has a wrong offset!");
static_assert(offsetof(UHUD_ActorTrackingIcon_C, Distance) == 0x0002C8, "Member 'UHUD_ActorTrackingIcon_C::Distance' has a wrong offset!");
static_assert(offsetof(UHUD_ActorTrackingIcon_C, Name_HUD_ActorTrackingIcon_C) == 0x0002D0, "Member 'UHUD_ActorTrackingIcon_C::Name_HUD_ActorTrackingIcon_C' has a wrong offset!");
static_assert(offsetof(UHUD_ActorTrackingIcon_C, ArrowRotation) == 0x0002D8, "Member 'UHUD_ActorTrackingIcon_C::ArrowRotation' has a wrong offset!");
static_assert(offsetof(UHUD_ActorTrackingIcon_C, ArrowRadius) == 0x0002DC, "Member 'UHUD_ActorTrackingIcon_C::ArrowRadius' has a wrong offset!");
static_assert(offsetof(UHUD_ActorTrackingIcon_C, ArrowAngle) == 0x0002E0, "Member 'UHUD_ActorTrackingIcon_C::ArrowAngle' has a wrong offset!");

}

