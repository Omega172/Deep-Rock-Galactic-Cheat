#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConsoleScreen_MotivationalQuote

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace CG::Params
{

// Function ConsoleScreen_MotivationalQuote.ConsoleScreen_MotivationalQuote_C.ExecuteUbergraph_ConsoleScreen_MotivationalQuote
// 0x0058 (0x0058 - 0x0000)
struct ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3781[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote) == 0x000008, "Wrong alignment on ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote");
static_assert(sizeof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote) == 0x000058, "Wrong size on ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote, EntryPoint) == 0x000000, "Member 'ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote::EntryPoint' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000005, "Member 'ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote, CallFunc_Array_LastIndex_ReturnValue) == 0x000008, "Member 'ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00000C, "Member 'ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote, K2Node_Event_MyGeometry) == 0x000018, "Member 'ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote, K2Node_Event_InDeltaTime) == 0x000050, "Member 'ConsoleScreen_MotivationalQuote_C_ExecuteUbergraph_ConsoleScreen_MotivationalQuote::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function ConsoleScreen_MotivationalQuote.ConsoleScreen_MotivationalQuote_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ConsoleScreen_MotivationalQuote_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ConsoleScreen_MotivationalQuote_C_PreConstruct) == 0x000001, "Wrong alignment on ConsoleScreen_MotivationalQuote_C_PreConstruct");
static_assert(sizeof(ConsoleScreen_MotivationalQuote_C_PreConstruct) == 0x000001, "Wrong size on ConsoleScreen_MotivationalQuote_C_PreConstruct");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ConsoleScreen_MotivationalQuote_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ConsoleScreen_MotivationalQuote.ConsoleScreen_MotivationalQuote_C.Tick
// 0x003C (0x003C - 0x0000)
struct ConsoleScreen_MotivationalQuote_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ConsoleScreen_MotivationalQuote_C_Tick) == 0x000004, "Wrong alignment on ConsoleScreen_MotivationalQuote_C_Tick");
static_assert(sizeof(ConsoleScreen_MotivationalQuote_C_Tick) == 0x00003C, "Wrong size on ConsoleScreen_MotivationalQuote_C_Tick");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_Tick, MyGeometry) == 0x000000, "Member 'ConsoleScreen_MotivationalQuote_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ConsoleScreen_MotivationalQuote_C_Tick, InDeltaTime) == 0x000038, "Member 'ConsoleScreen_MotivationalQuote_C_Tick::InDeltaTime' has a wrong offset!");

}

