#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerControllerBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// BlueprintGeneratedClass BP_PlayerControllerBase.BP_PlayerControllerBase_C
// 0x0078 (0x0790 - 0x0718)
class ABP_PlayerControllerBase_C : public AFSDPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0718(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	FMulticastInlineDelegateProperty_             ReplyToInviteRequest;                              // 0x0720(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UBP_Invitation_C*                       InviteRequest;                                     // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InviteTimeElapsed;                                 // 0x0738(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_308C[0x4];                                     // 0x073C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              InviteWaitTime;                                    // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         AnselStatus;                                       // 0x0748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AnselCameraTries;                                  // 0x074C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FSDCameraManager_C*                 CameraManager;                                     // 0x0750(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AnselTimerHandle;                                  // 0x0758(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWindowWidget*                          RetirementPopup;                                   // 0x0760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   HudClass;                                          // 0x0768(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)

public:
	void ReplyToInviteRequest__DelegateSignature(int32 Reply);
	void ExecuteUbergraph_BP_PlayerControllerBase(int32 EntryPoint);
	void Event_On_Join_Request_Reply(int32 Reply);
	void OnJoinRequest(const struct FDiscordUserDataSDK& JoinRequest);
	void SpawnHUDAsync();
	void CustomEvent_1();
	void Reset_Player_Location();
	void ChangeUserReply(bool Yes);
	void ChangeUser();
	void Setup_Change_User();
	void AdjustCamera();
	void UpdateAnalytics();
	void OnCharacterCanRetire_Event(TSubclassOf<class APlayerCharacter> CharacterClass);
	void Setup_Retirement_Notification();
	void Setup_Invite_Handling();
	void Return_Client_Camera();
	void SetPhotographyMode(bool Active);
	void ReceiveBeginPlay();
	void InpActEvt_Ctrl_O_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_IgnoreInvite_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_RejectInvite_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_AcceptInvite_K2Node_InputActionEvent_2(const struct FKey& Key);
	void CreateInviteRequestIfNotCreated();
	void StopAnsel();
	void StartAnsel();
	void ReStartAnsel();
	void GetUnlockedItems(EItemCategory Category, TArray<class UClass*>* Unlocked_Items);
	void SetUnlockAnalytics(TArray<class UClass*>& Primary, TArray<class UClass*>& Secundary);
	void SetClassAnalytics();
	void ItemFilter(class UClass* ItemClass, bool* Result);
	void SetHasShownCharacterSelector(bool HasShown);
	void SetIsEscapeMenuEnabled(bool IsEscapeMenuEnabled);
	void GetEditorCharacterClass(class UPlayerCharacterID** Character_Class);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerControllerBase_C">();
	}
	static class ABP_PlayerControllerBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlayerControllerBase_C>();
	}
};
static_assert(alignof(ABP_PlayerControllerBase_C) == 0x000008, "Wrong alignment on ABP_PlayerControllerBase_C");
static_assert(sizeof(ABP_PlayerControllerBase_C) == 0x000790, "Wrong size on ABP_PlayerControllerBase_C");
static_assert(offsetof(ABP_PlayerControllerBase_C, UberGraphFrame) == 0x000718, "Member 'ABP_PlayerControllerBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, ReplyToInviteRequest) == 0x000720, "Member 'ABP_PlayerControllerBase_C::ReplyToInviteRequest' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, InviteRequest) == 0x000730, "Member 'ABP_PlayerControllerBase_C::InviteRequest' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, InviteTimeElapsed) == 0x000738, "Member 'ABP_PlayerControllerBase_C::InviteTimeElapsed' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, InviteWaitTime) == 0x000740, "Member 'ABP_PlayerControllerBase_C::InviteWaitTime' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, AnselStatus) == 0x000748, "Member 'ABP_PlayerControllerBase_C::AnselStatus' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, AnselCameraTries) == 0x00074C, "Member 'ABP_PlayerControllerBase_C::AnselCameraTries' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, CameraManager) == 0x000750, "Member 'ABP_PlayerControllerBase_C::CameraManager' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, AnselTimerHandle) == 0x000758, "Member 'ABP_PlayerControllerBase_C::AnselTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, RetirementPopup) == 0x000760, "Member 'ABP_PlayerControllerBase_C::RetirementPopup' has a wrong offset!");
static_assert(offsetof(ABP_PlayerControllerBase_C, HudClass) == 0x000768, "Member 'ABP_PlayerControllerBase_C::HudClass' has a wrong offset!");

}

