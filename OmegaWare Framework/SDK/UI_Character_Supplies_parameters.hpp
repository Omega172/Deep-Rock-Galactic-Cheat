#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Character_Supplies

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace CG::Params
{

// Function UI_Character_Supplies.UI_Character_Supplies_C.ExecuteUbergraph_UI_Character_Supplies
// 0x0038 (0x0038 - 0x0000)
struct UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3765[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFSDPlayerState*                        K2Node_CustomEvent_Player;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float AmmoStatus01, float HealthStatus01)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetSupplyHealthStatus_ReturnValue;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSupplyAmmoStatus_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_ammoStatus01;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_healthStatus01;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies) == 0x000008, "Wrong alignment on UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies");
static_assert(sizeof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies) == 0x000038, "Wrong size on UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies");
static_assert(offsetof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies, EntryPoint) == 0x000000, "Member 'UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies, K2Node_CustomEvent_Player) == 0x000008, "Member 'UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies, CallFunc_GetSupplyHealthStatus_ReturnValue) == 0x000020, "Member 'UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies::CallFunc_GetSupplyHealthStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies, CallFunc_GetSupplyAmmoStatus_ReturnValue) == 0x000024, "Member 'UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies::CallFunc_GetSupplyAmmoStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies, K2Node_CustomEvent_ammoStatus01) == 0x000028, "Member 'UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies::K2Node_CustomEvent_ammoStatus01' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies, K2Node_CustomEvent_healthStatus01) == 0x00002C, "Member 'UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies::K2Node_CustomEvent_healthStatus01' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies, K2Node_Event_IsDesignTime) == 0x000030, "Member 'UI_Character_Supplies_C_ExecuteUbergraph_UI_Character_Supplies::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_Character_Supplies.UI_Character_Supplies_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Character_Supplies_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_Character_Supplies_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Character_Supplies_C_PreConstruct");
static_assert(sizeof(UI_Character_Supplies_C_PreConstruct) == 0x000001, "Wrong size on UI_Character_Supplies_C_PreConstruct");
static_assert(offsetof(UI_Character_Supplies_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Character_Supplies_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Character_Supplies.UI_Character_Supplies_C.OnSupplyStatusChangedEvent
// 0x0008 (0x0008 - 0x0000)
struct UI_Character_Supplies_C_OnSupplyStatusChangedEvent final
{
public:
	float                                         AmmoStatus01;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthStatus01;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Character_Supplies_C_OnSupplyStatusChangedEvent) == 0x000004, "Wrong alignment on UI_Character_Supplies_C_OnSupplyStatusChangedEvent");
static_assert(sizeof(UI_Character_Supplies_C_OnSupplyStatusChangedEvent) == 0x000008, "Wrong size on UI_Character_Supplies_C_OnSupplyStatusChangedEvent");
static_assert(offsetof(UI_Character_Supplies_C_OnSupplyStatusChangedEvent, AmmoStatus01) == 0x000000, "Member 'UI_Character_Supplies_C_OnSupplyStatusChangedEvent::AmmoStatus01' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_OnSupplyStatusChangedEvent, HealthStatus01) == 0x000004, "Member 'UI_Character_Supplies_C_OnSupplyStatusChangedEvent::HealthStatus01' has a wrong offset!");

// Function UI_Character_Supplies.UI_Character_Supplies_C.SetData
// 0x0008 (0x0008 - 0x0000)
struct UI_Character_Supplies_C_SetData final
{
public:
	class AFSDPlayerState*                        Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Character_Supplies_C_SetData) == 0x000008, "Wrong alignment on UI_Character_Supplies_C_SetData");
static_assert(sizeof(UI_Character_Supplies_C_SetData) == 0x000008, "Wrong size on UI_Character_Supplies_C_SetData");
static_assert(offsetof(UI_Character_Supplies_C_SetData, Player) == 0x000000, "Member 'UI_Character_Supplies_C_SetData::Player' has a wrong offset!");

// Function UI_Character_Supplies.UI_Character_Supplies_C.HandleVisiblity
// 0x0006 (0x0006 - 0x0000)
struct UI_Character_Supplies_C_HandleVisiblity final
{
public:
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectVisibility_IsVisible_1;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged_1;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Character_Supplies_C_HandleVisiblity) == 0x000001, "Wrong alignment on UI_Character_Supplies_C_HandleVisiblity");
static_assert(sizeof(UI_Character_Supplies_C_HandleVisiblity) == 0x000006, "Wrong size on UI_Character_Supplies_C_HandleVisiblity");
static_assert(offsetof(UI_Character_Supplies_C_HandleVisiblity, CallFunc_SelectVisibility_IsVisible) == 0x000000, "Member 'UI_Character_Supplies_C_HandleVisiblity::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_HandleVisiblity, CallFunc_SelectVisibility_VisibilityChanged) == 0x000001, "Member 'UI_Character_Supplies_C_HandleVisiblity::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_HandleVisiblity, CallFunc_SelectVisibility_New_Visibility) == 0x000002, "Member 'UI_Character_Supplies_C_HandleVisiblity::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_HandleVisiblity, CallFunc_SelectVisibility_IsVisible_1) == 0x000003, "Member 'UI_Character_Supplies_C_HandleVisiblity::CallFunc_SelectVisibility_IsVisible_1' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_HandleVisiblity, CallFunc_SelectVisibility_VisibilityChanged_1) == 0x000004, "Member 'UI_Character_Supplies_C_HandleVisiblity::CallFunc_SelectVisibility_VisibilityChanged_1' has a wrong offset!");
static_assert(offsetof(UI_Character_Supplies_C_HandleVisiblity, CallFunc_SelectVisibility_New_Visibility_1) == 0x000005, "Member 'UI_Character_Supplies_C_HandleVisiblity::CallFunc_SelectVisibility_New_Visibility_1' has a wrong offset!");

}

