#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RewardResource

#include "Basic.hpp"


namespace CG::Params
{

// Function UI_RewardResource.UI_RewardResource_C.ExecuteUbergraph_UI_RewardResource
// 0x0018 (0x0018 - 0x0000)
struct UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33AD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource) == 0x000008, "Wrong alignment on UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource");
static_assert(sizeof(UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource) == 0x000018, "Wrong size on UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource");
static_assert(offsetof(UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource, EntryPoint) == 0x000000, "Member 'UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'UI_RewardResource_C_ExecuteUbergraph_UI_RewardResource::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function UI_RewardResource.UI_RewardResource_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_RewardResource_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_RewardResource_C_PreConstruct) == 0x000001, "Wrong alignment on UI_RewardResource_C_PreConstruct");
static_assert(sizeof(UI_RewardResource_C_PreConstruct) == 0x000001, "Wrong size on UI_RewardResource_C_PreConstruct");
static_assert(offsetof(UI_RewardResource_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_RewardResource_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

