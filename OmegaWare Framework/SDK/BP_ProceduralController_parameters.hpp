#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProceduralController

#include "Basic.hpp"

#include "FSD_structs.hpp"


namespace CG::Params
{

// Function BP_ProceduralController.BP_ProceduralController_C.ExecuteUbergraph_BP_ProceduralController
// 0x00C0 (0x00C0 - 0x0000)
struct BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDebrisItemPass                               K2Node_Event_pass;                                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_seed;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335C[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRoomNode>                      K2Node_Event_rooms;                                // 0x0060(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FPathObstacle>                  K2Node_Event_obstacles;                            // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FTunnelNode>                    K2Node_Event_tunnels;                              // 0x0080(0x0010)(ConstParm, ReferenceParm)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue_2;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue_3;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue_4;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGeneratedDataReady_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDebrisItemPass                               K2Node_CustomEvent_Pass;                           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335D[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AProceduralSetup*                       CallFunc_GetProceduralSetup_ReturnValue_5;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCarverDataReady_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController) == 0x000008, "Wrong alignment on BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController");
static_assert(sizeof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController) == 0x0000C0, "Wrong size on BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, EntryPoint) == 0x000000, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, K2Node_Event_pass) == 0x000004, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::K2Node_Event_pass' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000018, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000028, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000038, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_GetProceduralSetup_ReturnValue) == 0x000048, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_GetProceduralSetup_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_GetProceduralSetup_ReturnValue_1) == 0x000050, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_GetProceduralSetup_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, K2Node_Event_seed) == 0x000058, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::K2Node_Event_seed' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, K2Node_Event_rooms) == 0x000060, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::K2Node_Event_rooms' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, K2Node_Event_obstacles) == 0x000070, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::K2Node_Event_obstacles' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, K2Node_Event_tunnels) == 0x000080, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::K2Node_Event_tunnels' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_GetProceduralSetup_ReturnValue_2) == 0x000090, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_GetProceduralSetup_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_GetProceduralSetup_ReturnValue_3) == 0x000098, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_GetProceduralSetup_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_GetProceduralSetup_ReturnValue_4) == 0x0000A0, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_GetProceduralSetup_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_IsGeneratedDataReady_ReturnValue) == 0x0000A8, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_IsGeneratedDataReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, K2Node_CustomEvent_Pass) == 0x0000A9, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::K2Node_CustomEvent_Pass' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_GetProceduralSetup_ReturnValue_5) == 0x0000B0, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_GetProceduralSetup_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController, CallFunc_IsCarverDataReady_ReturnValue) == 0x0000B8, "Member 'BP_ProceduralController_C_ExecuteUbergraph_BP_ProceduralController::CallFunc_IsCarverDataReady_ReturnValue' has a wrong offset!");

// Function BP_ProceduralController.BP_ProceduralController_C.RequestCarverData
// 0x0001 (0x0001 - 0x0000)
struct BP_ProceduralController_C_RequestCarverData final
{
public:
	EDebrisItemPass                               Pass;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProceduralController_C_RequestCarverData) == 0x000001, "Wrong alignment on BP_ProceduralController_C_RequestCarverData");
static_assert(sizeof(BP_ProceduralController_C_RequestCarverData) == 0x000001, "Wrong size on BP_ProceduralController_C_RequestCarverData");
static_assert(offsetof(BP_ProceduralController_C_RequestCarverData, Pass) == 0x000000, "Member 'BP_ProceduralController_C_RequestCarverData::Pass' has a wrong offset!");

// Function BP_ProceduralController.BP_ProceduralController_C.Server_RequestCarverData
// 0x0001 (0x0001 - 0x0000)
struct BP_ProceduralController_C_Server_RequestCarverData final
{
public:
	EDebrisItemPass                               Pass;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProceduralController_C_Server_RequestCarverData) == 0x000001, "Wrong alignment on BP_ProceduralController_C_Server_RequestCarverData");
static_assert(sizeof(BP_ProceduralController_C_Server_RequestCarverData) == 0x000001, "Wrong size on BP_ProceduralController_C_Server_RequestCarverData");
static_assert(offsetof(BP_ProceduralController_C_Server_RequestCarverData, Pass) == 0x000000, "Member 'BP_ProceduralController_C_Server_RequestCarverData::Pass' has a wrong offset!");

// Function BP_ProceduralController.BP_ProceduralController_C.ReceivedTunnelData
// 0x0010 (0x0010 - 0x0000)
struct BP_ProceduralController_C_ReceivedTunnelData final
{
public:
	TArray<struct FTunnelNode>                    Tunnels;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ProceduralController_C_ReceivedTunnelData) == 0x000008, "Wrong alignment on BP_ProceduralController_C_ReceivedTunnelData");
static_assert(sizeof(BP_ProceduralController_C_ReceivedTunnelData) == 0x000010, "Wrong size on BP_ProceduralController_C_ReceivedTunnelData");
static_assert(offsetof(BP_ProceduralController_C_ReceivedTunnelData, Tunnels) == 0x000000, "Member 'BP_ProceduralController_C_ReceivedTunnelData::Tunnels' has a wrong offset!");

// Function BP_ProceduralController.BP_ProceduralController_C.ReceivedRoomData
// 0x0028 (0x0028 - 0x0000)
struct BP_ProceduralController_C_ReceivedRoomData final
{
public:
	int32                                         Seed;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRoomNode>                      Rooms;                                             // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FPathObstacle>                  Obstacles;                                         // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ProceduralController_C_ReceivedRoomData) == 0x000008, "Wrong alignment on BP_ProceduralController_C_ReceivedRoomData");
static_assert(sizeof(BP_ProceduralController_C_ReceivedRoomData) == 0x000028, "Wrong size on BP_ProceduralController_C_ReceivedRoomData");
static_assert(offsetof(BP_ProceduralController_C_ReceivedRoomData, Seed) == 0x000000, "Member 'BP_ProceduralController_C_ReceivedRoomData::Seed' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ReceivedRoomData, Rooms) == 0x000008, "Member 'BP_ProceduralController_C_ReceivedRoomData::Rooms' has a wrong offset!");
static_assert(offsetof(BP_ProceduralController_C_ReceivedRoomData, Obstacles) == 0x000018, "Member 'BP_ProceduralController_C_ReceivedRoomData::Obstacles' has a wrong offset!");

}

