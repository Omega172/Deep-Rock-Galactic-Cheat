#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Perks_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass UI_Perks_Item.UI_Perks_Item_C
// 0x0080 (0x02E0 - 0x0260)
class UUI_Perks_Item_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Ping;                                              // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                ClickButton;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                SelectionBorder;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PerkBackground_C*                   UI_PerkBackground;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PerkIcon_C*                         UI_PerkIcon;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPerkAsset*                             PerkAsset;                                         // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Tier;                                              // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3CD6[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHoverEnter;                                      // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHoverLeave;                                      // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnClick;                                           // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EPerkTierState                                PreviewState;                                      // 0x02D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviewHovered;                                    // 0x02D1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PreviewSelected;                                   // 0x02D2(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ItemHovered;                                       // 0x02D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ItemSelected;                                      // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ItemHighlighted;                                   // 0x02D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PreviewHighlighted;                                // 0x02D6(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CD7[0x1];                                     // 0x02D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Size;                                              // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void OnHoverEnter__DelegateSignature(class UUI_Perks_Item_C* Widget);
	void OnHoverLeave__DelegateSignature(class UUI_Perks_Item_C* Widget);
	void OnClick__DelegateSignature(class UUI_Perks_Item_C* Widget);
	void ExecuteUbergraph_UI_Perks_Item(int32 EntryPoint);
	void BndEvt__ClickButton_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ClickButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__ClickButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void OnPingFinished();
	void OnPerkPointsChanged(int32 PerkPoints, int32 Change);
	void PreConstruct(bool IsDesignTime);
	void OnPerkHighlighted_Event(class UPerkAsset* Perk, bool IsHighlighted);
	void Construct();
	void Set_Hovered(bool Hovered);
	void OnPerkClaimed(class UPerkAsset* Perk, int32 ClaimedTier);
	void Refresh();
	void GetPerkAsset(class UPerkAsset** Param_PerkAsset, EPerkTierState* State, int32* Param_Tier);
	class UWidget* CreateToolTipWidget();
	void ShowAs(class UPerkAsset* InPerkAsset, int32 InRank, EPerkTierState InState, bool InHovered, bool InPerkHighlighted, bool InSelected);
	void Set_Selected(bool InSelected);
	void SetIconSize(int32 InSize);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Perks_Item_C">();
	}
	static class UUI_Perks_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Perks_Item_C>();
	}
};
static_assert(alignof(UUI_Perks_Item_C) == 0x000008, "Wrong alignment on UUI_Perks_Item_C");
static_assert(sizeof(UUI_Perks_Item_C) == 0x0002E0, "Wrong size on UUI_Perks_Item_C");
static_assert(offsetof(UUI_Perks_Item_C, UberGraphFrame) == 0x000260, "Member 'UUI_Perks_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, Ping) == 0x000268, "Member 'UUI_Perks_Item_C::Ping' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, ClickButton) == 0x000270, "Member 'UUI_Perks_Item_C::ClickButton' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, SelectionBorder) == 0x000278, "Member 'UUI_Perks_Item_C::SelectionBorder' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, UI_PerkBackground) == 0x000280, "Member 'UUI_Perks_Item_C::UI_PerkBackground' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, UI_PerkIcon) == 0x000288, "Member 'UUI_Perks_Item_C::UI_PerkIcon' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, PerkAsset) == 0x000290, "Member 'UUI_Perks_Item_C::PerkAsset' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, Tier) == 0x000298, "Member 'UUI_Perks_Item_C::Tier' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, OnHoverEnter) == 0x0002A0, "Member 'UUI_Perks_Item_C::OnHoverEnter' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, OnHoverLeave) == 0x0002B0, "Member 'UUI_Perks_Item_C::OnHoverLeave' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, OnClick) == 0x0002C0, "Member 'UUI_Perks_Item_C::OnClick' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, PreviewState) == 0x0002D0, "Member 'UUI_Perks_Item_C::PreviewState' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, PreviewHovered) == 0x0002D1, "Member 'UUI_Perks_Item_C::PreviewHovered' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, PreviewSelected) == 0x0002D2, "Member 'UUI_Perks_Item_C::PreviewSelected' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, ItemHovered) == 0x0002D3, "Member 'UUI_Perks_Item_C::ItemHovered' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, ItemSelected) == 0x0002D4, "Member 'UUI_Perks_Item_C::ItemSelected' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, ItemHighlighted) == 0x0002D5, "Member 'UUI_Perks_Item_C::ItemHighlighted' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, PreviewHighlighted) == 0x0002D6, "Member 'UUI_Perks_Item_C::PreviewHighlighted' has a wrong offset!");
static_assert(offsetof(UUI_Perks_Item_C, Size) == 0x0002D8, "Member 'UUI_Perks_Item_C::Size' has a wrong offset!");

}

