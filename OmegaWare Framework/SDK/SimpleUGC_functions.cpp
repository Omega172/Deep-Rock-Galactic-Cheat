#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimpleUGC

#include "Basic.hpp"

#include "SimpleUGC_classes.hpp"
#include "SimpleUGC_parameters.hpp"


namespace CG
{

// Function SimpleUGC.UGCBlueprintLibrary.GetUGCLatentActionManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUGCLatentActionManager*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUGCLatentActionManager* UUGCBlueprintLibrary::GetUGCLatentActionManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UGCBlueprintLibrary", "GetUGCLatentActionManager");

	Params::UGCBlueprintLibrary_GetUGCLatentActionManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCBlueprintLibrary.GetUGCRegistry
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUGCRegistry*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUGCRegistry* UUGCBlueprintLibrary::GetUGCRegistry(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UGCBlueprintLibrary", "GetUGCRegistry");

	Params::UGCBlueprintLibrary_GetUGCRegistry Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCBlueprintLibrary.GetUGCSettings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUGCSettings*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUGCSettings* UUGCBlueprintLibrary::GetUGCSettings(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("UGCBlueprintLibrary", "GetUGCSettings");

	Params::UGCBlueprintLibrary_GetUGCSettings Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.ModioModInfoWrapper.IsModIdInvalid
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioModInfoWrapper::IsModIdInvalid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioModInfoWrapper", "IsModIdInvalid");

	Params::ModioModInfoWrapper_IsModIdInvalid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.ModioTermsWrapper.isEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UModioTermsWrapper::IsEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ModioTermsWrapper", "isEmpty");

	Params::ModioTermsWrapper_IsEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCLatentActionManager.GetCachedModioModMetaData
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UModioModInfoWrapper*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UModioModInfoWrapper* UUGCLatentActionManager::GetCachedModioModMetaData(int64 ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCLatentActionManager", "GetCachedModioModMetaData");

	Params::UGCLatentActionManager_GetCachedModioModMetaData Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCPackage.GetIdAsInt
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UUGCPackage::GetIdAsInt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCPackage", "GetIdAsInt");

	Params::UGCPackage_GetIdAsInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCPackage.GetIdAsString
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UUGCPackage::GetIdAsString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCPackage", "GetIdAsString");

	Params::UGCPackage_GetIdAsString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.AreDeprecatedModsInstalled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::AreDeprecatedModsInstalled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "AreDeprecatedModsInstalled");

	Params::UGCRegistry_AreDeprecatedModsInstalled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.AreModsInstalled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUGCApprovalStatus                      ApprovalStatus                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::AreModsInstalled(EUGCApprovalStatus ApprovalStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "AreModsInstalled");

	Params::UGCRegistry_AreModsInstalled Parms{};

	Parms.ApprovalStatus = ApprovalStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.GetAllClassesInPackage
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUGCPackage*                      Package                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>                   Classes                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::GetAllClassesInPackage(class UUGCPackage* Package, TArray<class UClass*>* Classes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "GetAllClassesInPackage");

	Params::UGCRegistry_GetAllClassesInPackage Parms{};

	Parms.Package = Package;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Classes != nullptr)
		*Classes = std::move(Parms.Classes);

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.GetMapsInPackage
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUGCPackage*                      Package                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     Maps                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::GetMapsInPackage(class UUGCPackage* Package, TArray<class FName>* Maps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "GetMapsInPackage");

	Params::UGCRegistry_GetMapsInPackage Parms{};

	Parms.Package = Package;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Maps != nullptr)
		*Maps = std::move(Parms.Maps);

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.GetPackagesWhichDependsOnPackage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUGCPackage*                      Package                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UUGCPackage*>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UUGCPackage*> UUGCRegistry::GetPackagesWhichDependsOnPackage(class UUGCPackage* Package)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "GetPackagesWhichDependsOnPackage");

	Params::UGCRegistry_GetPackagesWhichDependsOnPackage Parms{};

	Parms.Package = Package;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.MountUGCPackage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUGCPackage*                      Package                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FromJoining                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::MountUGCPackage(class UUGCPackage* Package, bool FromJoining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "MountUGCPackage");

	Params::UGCRegistry_MountUGCPackage Parms{};

	Parms.Package = Package;
	Parms.FromJoining = FromJoining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.NumberOfModsInstalled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EUGCApprovalStatus                      ApprovalStatus                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUGCRegistry::NumberOfModsInstalled(EUGCApprovalStatus ApprovalStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "NumberOfModsInstalled");

	Params::UGCRegistry_NumberOfModsInstalled Parms{};

	Parms.ApprovalStatus = ApprovalStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.RegisterAssetFromPackage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUGCPackage*                      Package                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCRegistry::RegisterAssetFromPackage(class UUGCPackage* Package)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "RegisterAssetFromPackage");

	Params::UGCRegistry_RegisterAssetFromPackage Parms{};

	Parms.Package = Package;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCRegistry.ResetUGCPackagesManipulatedDuringJoin
// (Final, Native, Public, BlueprintCallable)

void UUGCRegistry::ResetUGCPackagesManipulatedDuringJoin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "ResetUGCPackagesManipulatedDuringJoin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCRegistry.TryGetPackageFromId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ModId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUGCPackage*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUGCPackage* UUGCRegistry::TryGetPackageFromId(const class FString& ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "TryGetPackageFromId");

	Params::UGCRegistry_TryGetPackageFromId Parms{};

	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction SimpleUGC.UGCRegistry.UGCBlueprintsSpawned__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCRegistry::UGCBlueprintsSpawned__DelegateSignature(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "UGCBlueprintsSpawned__DelegateSignature");

	Params::UGCRegistry_UGCBlueprintsSpawned__DelegateSignature Parms{};

	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SimpleUGC.UGCRegistry.UGCPackageMounted__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Sandbox                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCRegistry::UGCPackageMounted__DelegateSignature(bool Sandbox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "UGCPackageMounted__DelegateSignature");

	Params::UGCRegistry_UGCPackageMounted__DelegateSignature Parms{};

	Parms.Sandbox = Sandbox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SimpleUGC.UGCRegistry.UnmountAllNonVerifiedUGCPackages
// (Final, Native, Public, BlueprintCallable)

void UUGCRegistry::UnmountAllNonVerifiedUGCPackages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "UnmountAllNonVerifiedUGCPackages");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCRegistry.UnmountSandboxUGCPackages
// (Final, Native, Public, BlueprintCallable)

void UUGCRegistry::UnmountSandboxUGCPackages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "UnmountSandboxUGCPackages");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCRegistry.UnmountUGCPackage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUGCPackage*                      Package                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RemoveFromUserSettings                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RemoveFromDisk                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::UnmountUGCPackage(class UUGCPackage* Package, bool RemoveFromUserSettings, bool RemoveFromDisk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "UnmountUGCPackage");

	Params::UGCRegistry_UnmountUGCPackage Parms{};

	Parms.Package = Package;
	Parms.RemoveFromUserSettings = RemoveFromUserSettings;
	Parms.RemoveFromDisk = RemoveFromDisk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.UnmountUGCPackages
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ExcludingModIds                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUGCRegistry::UnmountUGCPackages(const TArray<class FString>& ExcludingModIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "UnmountUGCPackages");

	Params::UGCRegistry_UnmountUGCPackages Parms{};

	Parms.ExcludingModIds = std::move(ExcludingModIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCRegistry.GetPackagesSorted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPackageSortField                       ByField                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UUGCPackage*>              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UUGCPackage*> UUGCRegistry::GetPackagesSorted(EPackageSortField ByField, bool Ascending) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "GetPackagesSorted");

	Params::UGCRegistry_GetPackagesSorted Parms{};

	Parms.ByField = ByField;
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.IsModEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ModId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::IsModEnabled(const class FString& ModId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "IsModEnabled");

	Params::UGCRegistry_IsModEnabled Parms{};

	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.IsModInstalled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ModId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::IsModInstalled(const class FString& ModId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "IsModInstalled");

	Params::UGCRegistry_IsModInstalled Parms{};

	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.IsModInstalledByIdOrName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ModIdOrName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeDeprecatedLocation                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::IsModInstalledByIdOrName(const class FString& ModIdOrName, bool IncludeDeprecatedLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "IsModInstalledByIdOrName");

	Params::UGCRegistry_IsModInstalledByIdOrName Parms{};

	Parms.ModIdOrName = std::move(ModIdOrName);
	Parms.IncludeDeprecatedLocation = IncludeDeprecatedLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.IsModInstalledImprecise
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ModName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeDeprecatedLocation                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::IsModInstalledImprecise(const class FString& ModName, bool IncludeDeprecatedLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "IsModInstalledImprecise");

	Params::UGCRegistry_IsModInstalledImprecise Parms{};

	Parms.ModName = std::move(ModName);
	Parms.IncludeDeprecatedLocation = IncludeDeprecatedLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCRegistry.IsModToBeEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                                   ModId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCRegistry::IsModToBeEnabled(int64 ModId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCRegistry", "IsModToBeEnabled");

	Params::UGCRegistry_IsModToBeEnabled Parms{};

	Parms.ModId = ModId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSettings.CleanupSlots
// (Final, Native, Public, BlueprintCallable)

void UUGCSettings::CleanupSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "CleanupSlots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSettings.ClearSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSettings::ClearSlot(int32 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "ClearSlot");

	Params::UGCSettings_ClearSlot Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSettings.DoesSlotContainMods
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   SlotNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSettings::DoesSlotContainMods(int32 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "DoesSlotContainMods");

	Params::UGCSettings_DoesSlotContainMods Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSettings.GetIconIndexOfSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUGCSettings::GetIconIndexOfSlot(int32 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "GetIconIndexOfSlot");

	Params::UGCSettings_GetIconIndexOfSlot Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSettings.GetModIdsOfSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   SlotNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUGCSettings::GetModIdsOfSlot(int32 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "GetModIdsOfSlot");

	Params::UGCSettings_GetModIdsOfSlot Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSettings.GetModNamesOfSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   SlotNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutNumberOfUnknown                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUGCSettings::GetModNamesOfSlot(int32 SlotNumber, int32* OutNumberOfUnknown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "GetModNamesOfSlot");

	Params::UGCSettings_GetModNamesOfSlot Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNumberOfUnknown != nullptr)
		*OutNumberOfUnknown = Parms.OutNumberOfUnknown;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSettings.LoadSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSettings::LoadSlot(int32 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "LoadSlot");

	Params::UGCSettings_LoadSlot Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSettings.ReadFromPlainText
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutTextContent                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSettings::ReadFromPlainText(const class FString& Filename, class FString* OutTextContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "ReadFromPlainText");

	Params::UGCSettings_ReadFromPlainText Parms{};

	Parms.Filename = std::move(Filename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTextContent != nullptr)
		*OutTextContent = std::move(Parms.OutTextContent);

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSettings.ResetSlot
// (Final, Native, Public, BlueprintCallable)

void UUGCSettings::ResetSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "ResetSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSettings.SaveToSelectedSlot
// (Final, Native, Public, BlueprintCallable)

void UUGCSettings::SaveToSelectedSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "SaveToSelectedSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSettings.SaveToSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSettings::SaveToSlot(int32 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "SaveToSlot");

	Params::UGCSettings_SaveToSlot Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSettings.SetIconIndexOfSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IconIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSettings::SetIconIndexOfSlot(int32 SlotNumber, int32 IconIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "SetIconIndexOfSlot");

	Params::UGCSettings_SetIconIndexOfSlot Parms{};

	Parms.SlotNumber = SlotNumber;
	Parms.IconIndex = IconIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SimpleUGC.UGCSettings.UGCSettingsUpdated__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UUGCSettings::UGCSettingsUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "UGCSettingsUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SimpleUGC.UGCSettings.WriteToPlainText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Filename                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TextContent                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutError                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    Append                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSettings::WriteToPlainText(const class FString& Filename, const class FString& TextContent, class FText* OutError, bool Append)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSettings", "WriteToPlainText");

	Params::UGCSettings_WriteToPlainText Parms{};

	Parms.Filename = std::move(Filename);
	Parms.TextContent = std::move(TextContent);
	Parms.Append = Append;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutError != nullptr)
		*OutError = std::move(Parms.OutError);

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSubsystem.ApplyPendingMods
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    FromJoining                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::ApplyPendingMods(bool FromJoining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "ApplyPendingMods");

	Params::UGCSubsystem_ApplyPendingMods Parms{};

	Parms.FromJoining = FromJoining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.DisableModioModManagement
// (Final, Native, Public, BlueprintCallable)

void UUGCSubsystem::DisableModioModManagement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "DisableModioModManagement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.EnableModioModManagement
// (Final, Native, Public, BlueprintCallable)

void UUGCSubsystem::EnableModioModManagement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "EnableModioModManagement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.FetchModsForSession
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   HostMods                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TDelegate<void(TArray<class FString>& ModsToEnable, TArray<class FString>& ModsToInstall)>OnModsFetched                                          (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSubsystem::FetchModsForSession(const TArray<class FString>& HostMods, TDelegate<void(TArray<class FString>& ModsToEnable, TArray<class FString>& ModsToInstall)> OnModsFetched)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "FetchModsForSession");

	Params::UGCSubsystem_FetchModsForSession Parms{};

	Parms.HostMods = std::move(HostMods);
	Parms.OnModsFetched = OnModsFetched;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGRequiredModsFetched__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// TArray<class FString>                   ModsToEnable                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   ModsToInstall                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UUGCSubsystem::UGRequiredModsFetched__DelegateSignature(const TArray<class FString>& ModsToEnable, const TArray<class FString>& ModsToInstall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGRequiredModsFetched__DelegateSignature");

	Params::UGCSubsystem_UGRequiredModsFetched__DelegateSignature Parms{};

	Parms.ModsToEnable = std::move(ModsToEnable);
	Parms.ModsToInstall = std::move(ModsToInstall);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SimpleUGC.UGCSubsystem.GetCheckGameVersion
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSubsystem::GetCheckGameVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "GetCheckGameVersion");

	Params::UGCSubsystem_GetCheckGameVersion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSubsystem.GetModdingSettingsMenuEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSubsystem::GetModdingSettingsMenuEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "GetModdingSettingsMenuEnabled");

	Params::UGCSubsystem_GetModdingSettingsMenuEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSubsystem.GetNamesOfModsPendingInstall
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUGCSubsystem::GetNamesOfModsPendingInstall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "GetNamesOfModsPendingInstall");

	Params::UGCSubsystem_GetNamesOfModsPendingInstall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSubsystem.GetNamesOfModsPendingUninstall
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUGCSubsystem::GetNamesOfModsPendingUninstall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "GetNamesOfModsPendingUninstall");

	Params::UGCSubsystem_GetNamesOfModsPendingUninstall Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSubsystem.GetNamesOfModsPendingUpdate
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UUGCSubsystem::GetNamesOfModsPendingUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "GetNamesOfModsPendingUpdate");

	Params::UGCSubsystem_GetNamesOfModsPendingUpdate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSubsystem.GetQueuedModioRequests
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<EModioRequestType>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EModioRequestType> UUGCSubsystem::GetQueuedModioRequests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "GetQueuedModioRequests");

	Params::UGCSubsystem_GetQueuedModioRequests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSubsystem.HasOutstadingRequestOfType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EModioRequestType                       RequestType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSubsystem::HasOutstadingRequestOfType(EModioRequestType RequestType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "HasOutstadingRequestOfType");

	Params::UGCSubsystem_HasOutstadingRequestOfType Parms{};

	Parms.RequestType = RequestType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSubsystem.K2_RequestAuthentication
// (Final, Native, Public, BlueprintCallable)

void UUGCSubsystem::K2_RequestAuthentication()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "K2_RequestAuthentication");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.K2_RequestFetchModUpdates
// (Final, Native, Public, BlueprintCallable)

void UUGCSubsystem::K2_RequestFetchModUpdates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "K2_RequestFetchModUpdates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.K2_RequestModDependencyList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ModId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutParentId                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OutModIds                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUGCSubsystem::K2_RequestModDependencyList(class UObject* WorldContext, const struct FLatentActionInfo& LatentInfo, const class FString& ModId, class FString* OutParentId, TArray<class FString>* OutModIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "K2_RequestModDependencyList");

	Params::UGCSubsystem_K2_RequestModDependencyList Parms{};

	Parms.WorldContext = WorldContext;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutParentId != nullptr)
		*OutParentId = std::move(Parms.OutParentId);

	if (OutModIds != nullptr)
		*OutModIds = std::move(Parms.OutModIds);
}


// Function SimpleUGC.UGCSubsystem.K2_RequestModMetaData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ModioStringID                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ModId                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::K2_RequestModMetaData(class UObject* WorldContext, const struct FLatentActionInfo& LatentInfo, const class FString& ModioStringID, int64* ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "K2_RequestModMetaData");

	Params::UGCSubsystem_K2_RequestModMetaData Parms{};

	Parms.WorldContext = WorldContext;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.ModioStringID = std::move(ModioStringID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ModId != nullptr)
		*ModId = Parms.ModId;
}


// Function SimpleUGC.UGCSubsystem.K2_RequestModThumbnail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UUGCPackage*                      Package                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::K2_RequestModThumbnail(class UObject* WorldContext, const struct FLatentActionInfo& LatentInfo, class UUGCPackage* Package)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "K2_RequestModThumbnail");

	Params::UGCSubsystem_K2_RequestModThumbnail Parms{};

	Parms.WorldContext = WorldContext;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.Package = Package;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.K2_RequestModThumbnailById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           ModId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::K2_RequestModThumbnailById(class UObject* WorldContext, const struct FLatentActionInfo& LatentInfo, const class FString& ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "K2_RequestModThumbnailById");

	Params::UGCSubsystem_K2_RequestModThumbnailById Parms{};

	Parms.WorldContext = WorldContext;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.K2_RequestSubscribe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ModId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSubsystem::K2_RequestSubscribe(const class FString& ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "K2_RequestSubscribe");

	Params::UGCSubsystem_K2_RequestSubscribe Parms{};

	Parms.ModId = std::move(ModId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SimpleUGC.UGCSubsystem.K2_RequestTermsOfUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UUGCSubsystem::K2_RequestTermsOfUse(class UObject* WorldContext, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "K2_RequestTermsOfUse");

	Params::UGCSubsystem_K2_RequestTermsOfUse Parms{};

	Parms.WorldContext = WorldContext;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.MarkRecentlyInstalledModsSuccesful
// (Final, Native, Public, BlueprintCallable)

void UUGCSubsystem::MarkRecentlyInstalledModsSuccesful()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "MarkRecentlyInstalledModsSuccesful");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.RemoveRequestOfType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EModioRequestType                       RequestType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::RemoveRequestOfType(EModioRequestType RequestType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "RemoveRequestOfType");

	Params::UGCSubsystem_RemoveRequestOfType Parms{};

	Parms.RequestType = RequestType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.SetCheckGameVersion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ShouldCheck                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::SetCheckGameVersion(bool ShouldCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "SetCheckGameVersion");

	Params::UGCSubsystem_SetCheckGameVersion Parms{};

	Parms.ShouldCheck = ShouldCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.SetModidngSettingsMenuEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::SetModidngSettingsMenuEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "SetModidngSettingsMenuEnabled");

	Params::UGCSubsystem_SetModidngSettingsMenuEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.SetModsAsRecentlyInstalled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   RecentMods                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUGCSubsystem::SetModsAsRecentlyInstalled(const TArray<class FString>& RecentMods)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "SetModsAsRecentlyInstalled");

	Params::UGCSubsystem_SetModsAsRecentlyInstalled Parms{};

	Parms.RecentMods = std::move(RecentMods);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SimpleUGC.UGCSubsystem.SetPackagesAsRecentlyInstalled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UUGCPackage*>              RecentMods                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UUGCSubsystem::SetPackagesAsRecentlyInstalled(const TArray<class UUGCPackage*>& RecentMods)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "SetPackagesAsRecentlyInstalled");

	Params::UGCSubsystem_SetPackagesAsRecentlyInstalled Parms{};

	Parms.RecentMods = std::move(RecentMods);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGCAuthenticatedModioUser__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Authenticated                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::UGCAuthenticatedModioUser__DelegateSignature(bool Authenticated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGCAuthenticatedModioUser__DelegateSignature");

	Params::UGCSubsystem_UGCAuthenticatedModioUser__DelegateSignature Parms{};

	Parms.Authenticated = Authenticated;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGCEscapeMenuOpened__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UUGCSubsystem::UGCEscapeMenuOpened__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGCEscapeMenuOpened__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGCHiddenMods__DelegateSignature
// (Public, Delegate)

void UUGCSubsystem::UGCHiddenMods__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGCHiddenMods__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGCLocalUserModsInstalled__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UUGCSubsystem::UGCLocalUserModsInstalled__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGCLocalUserModsInstalled__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGCModManagementStateChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    Enabled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::UGCModManagementStateChanged__DelegateSignature(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGCModManagementStateChanged__DelegateSignature");

	Params::UGCSubsystem_UGCModManagementStateChanged__DelegateSignature Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGCModProgress__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class FString                           Param_Name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ModsPendingDownload                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    Downloading                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Progress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Total                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::UGCModProgress__DelegateSignature(const class FString& Param_Name, const TArray<class FString>& ModsPendingDownload, bool Downloading, int32 Progress, int32 Total)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGCModProgress__DelegateSignature");

	Params::UGCSubsystem_UGCModProgress__DelegateSignature Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.ModsPendingDownload = std::move(ModsPendingDownload);
	Parms.Downloading = Downloading;
	Parms.Progress = Progress;
	Parms.Total = Total;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGCRequestHandled__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EModioRequestType                       RequestType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::UGCRequestHandled__DelegateSignature(EModioRequestType RequestType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGCRequestHandled__DelegateSignature");

	Params::UGCSubsystem_UGCRequestHandled__DelegateSignature Parms{};

	Parms.RequestType = RequestType;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGInstallError__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           ModName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EUGCPackageError                        ErrorType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::UGInstallError__DelegateSignature(const class FString& ModName, EUGCPackageError ErrorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGInstallError__DelegateSignature");

	Params::UGCSubsystem_UGInstallError__DelegateSignature Parms{};

	Parms.ModName = std::move(ModName);
	Parms.ErrorType = ErrorType;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction SimpleUGC.UGCSubsystem.UGModProgressDone__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           ModName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ModId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUGCSubsystem::UGModProgressDone__DelegateSignature(const class FString& ModName, const class FString& ModId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "UGModProgressDone__DelegateSignature");

	Params::UGCSubsystem_UGModProgressDone__DelegateSignature Parms{};

	Parms.ModName = std::move(ModName);
	Parms.ModId = std::move(ModId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SimpleUGC.UGCSubsystem.IsModPendingUninstall
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUGCPackage*                      InMod                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UUGCSubsystem::IsModPendingUninstall(class UUGCPackage* InMod) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UGCSubsystem", "IsModPendingUninstall");

	Params::UGCSubsystem_IsModPendingUninstall Parms{};

	Parms.InMod = InMod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

