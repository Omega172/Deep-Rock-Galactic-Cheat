#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_RoundedCanvas

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function UI_RoundedCanvas.UI_RoundedCanvas_C.ExecuteUbergraph_UI_RoundedCanvas
// 0x0008 (0x0008 - 0x0000)
struct UI_RoundedCanvas_C_ExecuteUbergraph_UI_RoundedCanvas final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_RoundedCanvas_C_ExecuteUbergraph_UI_RoundedCanvas) == 0x000004, "Wrong alignment on UI_RoundedCanvas_C_ExecuteUbergraph_UI_RoundedCanvas");
static_assert(sizeof(UI_RoundedCanvas_C_ExecuteUbergraph_UI_RoundedCanvas) == 0x000008, "Wrong size on UI_RoundedCanvas_C_ExecuteUbergraph_UI_RoundedCanvas");
static_assert(offsetof(UI_RoundedCanvas_C_ExecuteUbergraph_UI_RoundedCanvas, EntryPoint) == 0x000000, "Member 'UI_RoundedCanvas_C_ExecuteUbergraph_UI_RoundedCanvas::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_RoundedCanvas_C_ExecuteUbergraph_UI_RoundedCanvas, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_RoundedCanvas_C_ExecuteUbergraph_UI_RoundedCanvas::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_RoundedCanvas.UI_RoundedCanvas_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_RoundedCanvas_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UI_RoundedCanvas_C_PreConstruct) == 0x000001, "Wrong alignment on UI_RoundedCanvas_C_PreConstruct");
static_assert(sizeof(UI_RoundedCanvas_C_PreConstruct) == 0x000001, "Wrong size on UI_RoundedCanvas_C_PreConstruct");
static_assert(offsetof(UI_RoundedCanvas_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_RoundedCanvas_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_RoundedCanvas.UI_RoundedCanvas_C.UpdateMaterial
// 0x0010 (0x0010 - 0x0000)
struct UI_RoundedCanvas_C_UpdateMaterial final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA5[0x7];                                      // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_RoundedCanvas_C_UpdateMaterial) == 0x000008, "Wrong alignment on UI_RoundedCanvas_C_UpdateMaterial");
static_assert(sizeof(UI_RoundedCanvas_C_UpdateMaterial) == 0x000010, "Wrong size on UI_RoundedCanvas_C_UpdateMaterial");
static_assert(offsetof(UI_RoundedCanvas_C_UpdateMaterial, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UI_RoundedCanvas_C_UpdateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RoundedCanvas_C_UpdateMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'UI_RoundedCanvas_C_UpdateMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function UI_RoundedCanvas.UI_RoundedCanvas_C.OnPaint
// 0x0048 (0x0048 - 0x0000)
struct UI_RoundedCanvas_C_OnPaint final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FVector2D                              CallFunc_GetDrawSize_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA6[0x3];                                      // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_RoundedCanvas_C_OnPaint) == 0x000008, "Wrong alignment on UI_RoundedCanvas_C_OnPaint");
static_assert(sizeof(UI_RoundedCanvas_C_OnPaint) == 0x000048, "Wrong size on UI_RoundedCanvas_C_OnPaint");
static_assert(offsetof(UI_RoundedCanvas_C_OnPaint, Context) == 0x000000, "Member 'UI_RoundedCanvas_C_OnPaint::Context' has a wrong offset!");
static_assert(offsetof(UI_RoundedCanvas_C_OnPaint, CallFunc_GetDrawSize_ReturnValue) == 0x000030, "Member 'UI_RoundedCanvas_C_OnPaint::CallFunc_GetDrawSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RoundedCanvas_C_OnPaint, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'UI_RoundedCanvas_C_OnPaint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_RoundedCanvas_C_OnPaint, CallFunc_BreakVector2D_X) == 0x00003C, "Member 'UI_RoundedCanvas_C_OnPaint::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_RoundedCanvas_C_OnPaint, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'UI_RoundedCanvas_C_OnPaint::CallFunc_BreakVector2D_Y' has a wrong offset!");

}

