#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EndScreenSetups

#include "Basic.hpp"

#include "EndScreenSetups_classes.hpp"
#include "EndScreenSetups_parameters.hpp"


namespace CG
{

// Function EndScreenSetups.EndScreenSetups_C.RandomAnimElement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UAnimSequence*>            Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UAnimSequence*                    Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEndScreenSetups_C::RandomAnimElement(TArray<class UAnimSequence*>& Array, class UAnimSequence** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "RandomAnimElement");

	Params::EndScreenSetups_C_RandomAnimElement Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function EndScreenSetups.EndScreenSetups_C.GetEndScreenMoveSet
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Survived                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UVictoryPose*                     VictPose                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRandomStream                    Param_RandStream                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// struct FEndScreenMove                   Selected                                               (Parm, OutParm, HasGetValueTypeHash)

void UEndScreenSetups_C::GetEndScreenMoveSet(bool Survived, class UVictoryPose* VictPose, struct FRandomStream& Param_RandStream, struct FEndScreenMove* Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "GetEndScreenMoveSet");

	Params::EndScreenSetups_C_GetEndScreenMoveSet Parms{};

	Parms.Survived = Survived;
	Parms.VictPose = VictPose;
	Parms.Param_RandStream = std::move(Param_RandStream);

	UObject::ProcessEvent(Func, &Parms);

	Param_RandStream = std::move(Parms.Param_RandStream);

	if (Selected != nullptr)
		*Selected = std::move(Parms.Selected);
}


// Function EndScreenSetups.EndScreenSetups_C.RandomWeightedMoveSet
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FEndScreenMoveSet>        Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEndScreenMove                   Selected                                               (Parm, OutParm, HasGetValueTypeHash)

void UEndScreenSetups_C::RandomWeightedMoveSet(TArray<struct FEndScreenMoveSet>& Array, struct FEndScreenMove* Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "RandomWeightedMoveSet");

	Params::EndScreenSetups_C_RandomWeightedMoveSet Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	if (Selected != nullptr)
		*Selected = std::move(Parms.Selected);
}


// Function EndScreenSetups.EndScreenSetups_C.ResetMovesets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewSeed                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEndScreenSetups_C::ResetMovesets(int32 NewSeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "ResetMovesets");

	Params::EndScreenSetups_C_ResetMovesets Parms{};

	Parms.NewSeed = NewSeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EndScreenSetups.EndScreenSetups_C.SplitMoveSetAnims
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftObjectPtr<class UAnimSequence>>TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UAnimSequence*                    Selected1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<TSoftObjectPtr<class UAnimSequence>>Rest1                                                  (Parm, OutParm)

void UEndScreenSetups_C::SplitMoveSetAnims(const TArray<TSoftObjectPtr<class UAnimSequence>>& TargetArray, class UAnimSequence** Selected1, TArray<TSoftObjectPtr<class UAnimSequence>>* Rest1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "SplitMoveSetAnims");

	Params::EndScreenSetups_C_SplitMoveSetAnims Parms{};

	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);

	if (Selected1 != nullptr)
		*Selected1 = Parms.Selected1;

	if (Rest1 != nullptr)
		*Rest1 = std::move(Parms.Rest1);
}


// Function EndScreenSetups.EndScreenSetups_C.LoadAnimSeq
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UAnimSequence>     Soft                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UAnimSequence*                    Hard                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEndScreenSetups_C::LoadAnimSeq(TSoftObjectPtr<class UAnimSequence> Soft, class UAnimSequence** Hard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "LoadAnimSeq");

	Params::EndScreenSetups_C_LoadAnimSeq Parms{};

	Parms.Soft = Soft;

	UObject::ProcessEvent(Func, &Parms);

	if (Hard != nullptr)
		*Hard = Parms.Hard;
}


// Function EndScreenSetups.EndScreenSetups_C.LoadAnimSeqArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TSoftObjectPtr<class UAnimSequence>>Soft                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UAnimSequence*>            Hard                                                   (Parm, OutParm)

void UEndScreenSetups_C::LoadAnimSeqArray(TArray<TSoftObjectPtr<class UAnimSequence>>& Soft, TArray<class UAnimSequence*>* Hard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "LoadAnimSeqArray");

	Params::EndScreenSetups_C_LoadAnimSeqArray Parms{};

	Parms.Soft = std::move(Soft);

	UObject::ProcessEvent(Func, &Parms);

	Soft = std::move(Parms.Soft);

	if (Hard != nullptr)
		*Hard = std::move(Parms.Hard);
}


// Function EndScreenSetups.EndScreenSetups_C.LoadActorClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftClassPtr<class UClass>             Soft                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UClass*                           Hard                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEndScreenSetups_C::LoadActorClass(TSoftClassPtr<class UClass> Soft, class UClass** Hard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "LoadActorClass");

	Params::EndScreenSetups_C_LoadActorClass Parms{};

	Parms.Soft = Soft;

	UObject::ProcessEvent(Func, &Parms);

	if (Hard != nullptr)
		*Hard = Parms.Hard;
}


// Function EndScreenSetups.EndScreenSetups_C.LoadVictoryAnims
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UVictoryPose*                     InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRandomStream                    Param_RandStream                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// struct FEndScreenMove                   EndScreenMove                                          (Parm, OutParm, HasGetValueTypeHash)

void UEndScreenSetups_C::LoadVictoryAnims(class UVictoryPose* InputPin, struct FRandomStream& Param_RandStream, struct FEndScreenMove* EndScreenMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "LoadVictoryAnims");

	Params::EndScreenSetups_C_LoadVictoryAnims Parms{};

	Parms.InputPin = InputPin;
	Parms.Param_RandStream = std::move(Param_RandStream);

	UObject::ProcessEvent(Func, &Parms);

	Param_RandStream = std::move(Parms.Param_RandStream);

	if (EndScreenMove != nullptr)
		*EndScreenMove = std::move(Parms.EndScreenMove);
}


// Function EndScreenSetups.EndScreenSetups_C.GetRandomWalkAnim
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UVictoryPose*                     VicPose                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRandomStream                    Param_RandStream                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// TSoftObjectPtr<class UAnimSequence>     Walk                                                   (Parm, OutParm, HasGetValueTypeHash)

void UEndScreenSetups_C::GetRandomWalkAnim(class UVictoryPose* VicPose, struct FRandomStream& Param_RandStream, TSoftObjectPtr<class UAnimSequence>* Walk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EndScreenSetups_C", "GetRandomWalkAnim");

	Params::EndScreenSetups_C_GetRandomWalkAnim Parms{};

	Parms.VicPose = VicPose;
	Parms.Param_RandStream = std::move(Param_RandStream);

	UObject::ProcessEvent(Func, &Parms);

	Param_RandStream = std::move(Parms.Param_RandStream);

	if (Walk != nullptr)
		*Walk = Parms.Walk;
}

}

