#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ClaimableRewards_Entry

#include "Basic.hpp"

#include "UI_ClaimableRewards_Entry_classes.hpp"
#include "UI_ClaimableRewards_Entry_parameters.hpp"


namespace CG
{

// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.ExecuteUbergraph_UI_ClaimableRewards_Entry
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClaimableRewards_Entry_C::ExecuteUbergraph_UI_ClaimableRewards_Entry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "ExecuteUbergraph_UI_ClaimableRewards_Entry");

	Params::UI_ClaimableRewards_Entry_C_ExecuteUbergraph_UI_ClaimableRewards_Entry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.ReceiveMoveIn
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   InStartDelay                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_ClaimableRewards_Entry_C::ReceiveMoveIn(float InStartDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "ReceiveMoveIn");

	Params::UI_ClaimableRewards_Entry_C_ReceiveMoveIn Parms{};

	Parms.InStartDelay = InStartDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.PlaySlamAudio
// (BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_Entry_C::PlaySlamAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "PlaySlamAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.OnPopupImageLoaded
// (BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_Entry_C::OnPopupImageLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "OnPopupImageLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.BndEvt__ITM_BigButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// (BlueprintEvent)

void UUI_ClaimableRewards_Entry_C::BndEvt__ITM_BigButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "BndEvt__ITM_BigButton_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.OnClaimAnimFinished
// (BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_Entry_C::OnClaimAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "OnClaimAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_ClaimableRewards_Entry_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_ClaimableRewards_Entry_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "PreConstruct");

	Params::UI_ClaimableRewards_Entry_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.PlayRevealAudio
// (Private, BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_Entry_C::PlayRevealAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "PlayRevealAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.Refresh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_Entry_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.SequenceEvent__ENTRYPOINTUI_ClaimableRewards_Entry_0
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_Entry_C::SequenceEvent__ENTRYPOINTUI_ClaimableRewards_Entry_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "SequenceEvent__ENTRYPOINTUI_ClaimableRewards_Entry_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_ClaimableRewards_Entry.UI_ClaimableRewards_Entry_C.SequenceEvent__ENTRYPOINTUI_ClaimableRewards_Entry_1
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_ClaimableRewards_Entry_C::SequenceEvent__ENTRYPOINTUI_ClaimableRewards_Entry_1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_ClaimableRewards_Entry_C", "SequenceEvent__ENTRYPOINTUI_ClaimableRewards_Entry_1");

	UObject::ProcessEvent(Func, nullptr);
}

}

