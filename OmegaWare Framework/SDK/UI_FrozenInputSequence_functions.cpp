#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_FrozenInputSequence

#include "Basic.hpp"

#include "UI_FrozenInputSequence_classes.hpp"
#include "UI_FrozenInputSequence_parameters.hpp"


namespace CG
{

// Function UI_FrozenInputSequence.UI_FrozenInputSequence_C.ExecuteUbergraph_UI_FrozenInputSequence
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_FrozenInputSequence_C::ExecuteUbergraph_UI_FrozenInputSequence(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_FrozenInputSequence_C", "ExecuteUbergraph_UI_FrozenInputSequence");

	Params::UI_FrozenInputSequence_C_ExecuteUbergraph_UI_FrozenInputSequence Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_FrozenInputSequence.UI_FrozenInputSequence_C.OnInputFailed
// (BlueprintCallable, BlueprintEvent)

void UUI_FrozenInputSequence_C::OnInputFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_FrozenInputSequence_C", "OnInputFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_FrozenInputSequence.UI_FrozenInputSequence_C.OnInputSuccess
// (BlueprintCallable, BlueprintEvent)

void UUI_FrozenInputSequence_C::OnInputSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_FrozenInputSequence_C", "OnInputSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_FrozenInputSequence.UI_FrozenInputSequence_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_FrozenInputSequence_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_FrozenInputSequence_C", "PreConstruct");

	Params::UI_FrozenInputSequence_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_FrozenInputSequence.UI_FrozenInputSequence_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_FrozenInputSequence_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_FrozenInputSequence_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_FrozenInputSequence.UI_FrozenInputSequence_C.SetupSequence
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EThawInputDirection>             Param_Sequence                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    First                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UUI_FrozenInputSequence_C::SetupSequence(const TArray<EThawInputDirection>& Param_Sequence, bool First)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_FrozenInputSequence_C", "SetupSequence");

	Params::UI_FrozenInputSequence_C_SetupSequence Parms{};

	Parms.Param_Sequence = std::move(Param_Sequence);
	Parms.First = First;

	UObject::ProcessEvent(Func, &Parms);
}

}

