#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_PlayerTemperature

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "FSD_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function HUD_PlayerTemperature.HUD_PlayerTemperature_C.ExecuteUbergraph_HUD_PlayerTemperature
// 0x0090 (0x0090 - 0x0000)
struct HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3276[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ChangeRate)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool barVisible)>              K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EPlayerTemperatureState State)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float Temperature, float Change)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_Temperature;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_change;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3277[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ChangeRate;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_barVisible;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3278[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerTemperatureState                       K2Node_CustomEvent_State;                          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3279[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature) == 0x000008, "Wrong alignment on HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature");
static_assert(sizeof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature) == 0x000090, "Wrong size on HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, EntryPoint) == 0x000000, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_CustomEvent_Temperature) == 0x000048, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_CustomEvent_Temperature' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_CustomEvent_change) == 0x00004C, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_CustomEvent_change' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_Event_IsDesignTime) == 0x000050, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_CustomEvent_ChangeRate) == 0x000054, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_CustomEvent_ChangeRate' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_CustomEvent_barVisible) == 0x000058, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_CustomEvent_barVisible' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_MakeArray_Array) == 0x000060, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, K2Node_CustomEvent_State) == 0x000071, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000072, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, CallFunc_PlayAnimation_ReturnValue) == 0x000078, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, CallFunc_PlayAnimation_ReturnValue_1) == 0x000080, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, CallFunc_MakeLiteralByte_ReturnValue) == 0x000088, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000089, "Member 'HUD_PlayerTemperature_C_ExecuteUbergraph_HUD_PlayerTemperature::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function HUD_PlayerTemperature.HUD_PlayerTemperature_C.OnTemperatureStateChanged
// 0x0001 (0x0001 - 0x0000)
struct HUD_PlayerTemperature_C_OnTemperatureStateChanged final
{
public:
	EPlayerTemperatureState                       State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerTemperature_C_OnTemperatureStateChanged) == 0x000001, "Wrong alignment on HUD_PlayerTemperature_C_OnTemperatureStateChanged");
static_assert(sizeof(HUD_PlayerTemperature_C_OnTemperatureStateChanged) == 0x000001, "Wrong size on HUD_PlayerTemperature_C_OnTemperatureStateChanged");
static_assert(offsetof(HUD_PlayerTemperature_C_OnTemperatureStateChanged, State) == 0x000000, "Member 'HUD_PlayerTemperature_C_OnTemperatureStateChanged::State' has a wrong offset!");

// Function HUD_PlayerTemperature.HUD_PlayerTemperature_C.OnBarVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct HUD_PlayerTemperature_C_OnBarVisibilityChanged final
{
public:
	bool                                          barVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerTemperature_C_OnBarVisibilityChanged) == 0x000001, "Wrong alignment on HUD_PlayerTemperature_C_OnBarVisibilityChanged");
static_assert(sizeof(HUD_PlayerTemperature_C_OnBarVisibilityChanged) == 0x000001, "Wrong size on HUD_PlayerTemperature_C_OnBarVisibilityChanged");
static_assert(offsetof(HUD_PlayerTemperature_C_OnBarVisibilityChanged, barVisible) == 0x000000, "Member 'HUD_PlayerTemperature_C_OnBarVisibilityChanged::barVisible' has a wrong offset!");

// Function HUD_PlayerTemperature.HUD_PlayerTemperature_C.OnTemperatureChangeRate_Event
// 0x0004 (0x0004 - 0x0000)
struct HUD_PlayerTemperature_C_OnTemperatureChangeRate_Event final
{
public:
	int32                                         ChangeRate;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerTemperature_C_OnTemperatureChangeRate_Event) == 0x000004, "Wrong alignment on HUD_PlayerTemperature_C_OnTemperatureChangeRate_Event");
static_assert(sizeof(HUD_PlayerTemperature_C_OnTemperatureChangeRate_Event) == 0x000004, "Wrong size on HUD_PlayerTemperature_C_OnTemperatureChangeRate_Event");
static_assert(offsetof(HUD_PlayerTemperature_C_OnTemperatureChangeRate_Event, ChangeRate) == 0x000000, "Member 'HUD_PlayerTemperature_C_OnTemperatureChangeRate_Event::ChangeRate' has a wrong offset!");

// Function HUD_PlayerTemperature.HUD_PlayerTemperature_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_PlayerTemperature_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerTemperature_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_PlayerTemperature_C_PreConstruct");
static_assert(sizeof(HUD_PlayerTemperature_C_PreConstruct) == 0x000001, "Wrong size on HUD_PlayerTemperature_C_PreConstruct");
static_assert(offsetof(HUD_PlayerTemperature_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_PlayerTemperature_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_PlayerTemperature.HUD_PlayerTemperature_C.OnTemperatureChanged
// 0x0008 (0x0008 - 0x0000)
struct HUD_PlayerTemperature_C_OnTemperatureChanged final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Change;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerTemperature_C_OnTemperatureChanged) == 0x000004, "Wrong alignment on HUD_PlayerTemperature_C_OnTemperatureChanged");
static_assert(sizeof(HUD_PlayerTemperature_C_OnTemperatureChanged) == 0x000008, "Wrong size on HUD_PlayerTemperature_C_OnTemperatureChanged");
static_assert(offsetof(HUD_PlayerTemperature_C_OnTemperatureChanged, Temperature) == 0x000000, "Member 'HUD_PlayerTemperature_C_OnTemperatureChanged::Temperature' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_OnTemperatureChanged, Change) == 0x000004, "Member 'HUD_PlayerTemperature_C_OnTemperatureChanged::Change' has a wrong offset!");

// Function HUD_PlayerTemperature.HUD_PlayerTemperature_C.UpdateArrows
// 0x0098 (0x0098 - 0x0000)
struct HUD_PlayerTemperature_C_UpdateArrows final
{
public:
	class UImage*                                 CurrentArrow;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Speed;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrowCount;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_327B[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentTemperatureNormalized_ReturnValue; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327C[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327D[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTemperatureChangedSpeed_ReturnValue;   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SignOfInteger_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerTemperature_C_UpdateArrows) == 0x000008, "Wrong alignment on HUD_PlayerTemperature_C_UpdateArrows");
static_assert(sizeof(HUD_PlayerTemperature_C_UpdateArrows) == 0x000098, "Wrong size on HUD_PlayerTemperature_C_UpdateArrows");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CurrentArrow) == 0x000000, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CurrentArrow' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, Speed) == 0x000008, "Member 'HUD_PlayerTemperature_C_UpdateArrows::Speed' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, ArrowCount) == 0x00000C, "Member 'HUD_PlayerTemperature_C_UpdateArrows::ArrowCount' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, Temp_bool_Variable) == 0x000010, "Member 'HUD_PlayerTemperature_C_UpdateArrows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, Temp_struct_Variable) == 0x000014, "Member 'HUD_PlayerTemperature_C_UpdateArrows::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, Temp_struct_Variable_1) == 0x000024, "Member 'HUD_PlayerTemperature_C_UpdateArrows::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, Temp_bool_Variable_1) == 0x000034, "Member 'HUD_PlayerTemperature_C_UpdateArrows::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, Temp_byte_Variable) == 0x000035, "Member 'HUD_PlayerTemperature_C_UpdateArrows::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, Temp_byte_Variable_1) == 0x000036, "Member 'HUD_PlayerTemperature_C_UpdateArrows::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, Temp_int_Array_Index_Variable) == 0x000038, "Member 'HUD_PlayerTemperature_C_UpdateArrows::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'HUD_PlayerTemperature_C_UpdateArrows::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_GetCurrentTemperatureNormalized_ReturnValue) == 0x000044, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_GetCurrentTemperatureNormalized_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Array_Get_Item) == 0x000048, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_SignOfFloat_ReturnValue) == 0x000050, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_GetTemperatureChangedSpeed_ReturnValue) == 0x000064, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_GetTemperatureChangedSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, K2Node_Select_Default) == 0x000068, "Member 'HUD_PlayerTemperature_C_UpdateArrows::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_SignOfInteger_ReturnValue) == 0x000078, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_SignOfInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Abs_Int_ReturnValue) == 0x00007C, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000080, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Min_ReturnValue) == 0x000084, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_MakeVector2D_ReturnValue) == 0x00008C, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'HUD_PlayerTemperature_C_UpdateArrows::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateArrows, K2Node_Select_Default_1) == 0x000095, "Member 'HUD_PlayerTemperature_C_UpdateArrows::K2Node_Select_Default_1' has a wrong offset!");

// Function HUD_PlayerTemperature.HUD_PlayerTemperature_C.UpdateTemperature
// 0x0148 (0x0148 - 0x0000)
struct HUD_PlayerTemperature_C_UpdateTemperature final
{
public:
	float                                         InTemperature;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InChange;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerTemperatureState                       State;                                             // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Burning;                                           // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327E[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temperature;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327F[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0018(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0040(0x0028)(HasGetValueTypeHash)
	EPlayerTemperatureState                       Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3280[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerTemperatureState                       Temp_byte_Variable_1;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3281[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3282[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x00A8(0x0028)(HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3283[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0108(0x0028)()
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3284[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3285[0x2];                                     // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentTemperatureNormalized_ReturnValue; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerTemperature_C_UpdateTemperature) == 0x000008, "Wrong alignment on HUD_PlayerTemperature_C_UpdateTemperature");
static_assert(sizeof(HUD_PlayerTemperature_C_UpdateTemperature) == 0x000148, "Wrong size on HUD_PlayerTemperature_C_UpdateTemperature");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, InTemperature) == 0x000000, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::InTemperature' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, InChange) == 0x000004, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::InChange' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, State) == 0x000008, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::State' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Burning) == 0x000009, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Burning' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temperature) == 0x00000C, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temperature' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temp_bool_Variable) == 0x000010, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temp_bool_Variable_1) == 0x000011, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temp_softobject_Variable) == 0x000018, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temp_softobject_Variable_1) == 0x000040, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temp_byte_Variable) == 0x000068, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temp_struct_Variable) == 0x00006C, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temp_struct_Variable_1) == 0x00007C, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temp_byte_Variable_1) == 0x00008C, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, Temp_struct_Variable_2) == 0x000090, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0000A0, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A2, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000A3, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, K2Node_Select_Default) == 0x0000A8, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_Abs_ReturnValue) == 0x0000D0, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, K2Node_Select_Default_1) == 0x0000D4, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, K2Node_Select_Default_2) == 0x0000E4, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, K2Node_Select_Default_3) == 0x0000F4, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, K2Node_MakeStruct_SlateColor) == 0x000108, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000130, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_PlayAnimation_ReturnValue) == 0x000138, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000140, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_BooleanOR_ReturnValue) == 0x000141, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_UpdateTemperature, CallFunc_GetCurrentTemperatureNormalized_ReturnValue) == 0x000144, "Member 'HUD_PlayerTemperature_C_UpdateTemperature::CallFunc_GetCurrentTemperatureNormalized_ReturnValue' has a wrong offset!");

// Function HUD_PlayerTemperature.HUD_PlayerTemperature_C.SetFaded
// 0x0020 (0x0020 - 0x0000)
struct HUD_PlayerTemperature_C_SetFaded final
{
public:
	bool                                          FadeOut;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3286[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerTemperature_C_SetFaded) == 0x000008, "Wrong alignment on HUD_PlayerTemperature_C_SetFaded");
static_assert(sizeof(HUD_PlayerTemperature_C_SetFaded) == 0x000020, "Wrong size on HUD_PlayerTemperature_C_SetFaded");
static_assert(offsetof(HUD_PlayerTemperature_C_SetFaded, FadeOut) == 0x000000, "Member 'HUD_PlayerTemperature_C_SetFaded::FadeOut' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_SetFaded, Temp_bool_Variable) == 0x000001, "Member 'HUD_PlayerTemperature_C_SetFaded::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_SetFaded, Temp_byte_Variable) == 0x000002, "Member 'HUD_PlayerTemperature_C_SetFaded::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_SetFaded, Temp_byte_Variable_1) == 0x000003, "Member 'HUD_PlayerTemperature_C_SetFaded::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_SetFaded, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000004, "Member 'HUD_PlayerTemperature_C_SetFaded::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_SetFaded, K2Node_Select_Default) == 0x000008, "Member 'HUD_PlayerTemperature_C_SetFaded::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_SetFaded, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'HUD_PlayerTemperature_C_SetFaded::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerTemperature_C_SetFaded, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000018, "Member 'HUD_PlayerTemperature_C_SetFaded::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

}

