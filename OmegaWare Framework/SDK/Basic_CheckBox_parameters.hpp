#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Basic_CheckBox

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ENUM_MenuColors_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace CG::Params
{

// Function Basic_CheckBox.Basic_CheckBox_C.OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct Basic_CheckBox_C_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          Param_IsChecked;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_CheckBox_C_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on Basic_CheckBox_C_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(Basic_CheckBox_C_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on Basic_CheckBox_C_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(Basic_CheckBox_C_OnCheckStateChanged__DelegateSignature, Param_IsChecked) == 0x000000, "Member 'Basic_CheckBox_C_OnCheckStateChanged__DelegateSignature::Param_IsChecked' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.ExecuteUbergraph_Basic_CheckBox
// 0x0028 (0x0028 - 0x0000)
struct Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3413[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3414[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InChecked;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox) == 0x000008, "Wrong alignment on Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox");
static_assert(sizeof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox) == 0x000028, "Wrong size on Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, EntryPoint) == 0x000000, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, Temp_bool_Variable) == 0x000004, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, Temp_byte_Variable) == 0x000005, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, Temp_byte_Variable_1) == 0x000006, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, K2Node_Event_IsDesignTime) == 0x000011, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, K2Node_Select_Default) == 0x000012, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox, K2Node_CustomEvent_InChecked) == 0x000020, "Member 'Basic_CheckBox_C_ExecuteUbergraph_Basic_CheckBox::K2Node_CustomEvent_InChecked' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.OnClicked
// 0x0001 (0x0001 - 0x0000)
struct Basic_CheckBox_C_OnClicked final
{
public:
	bool                                          InChecked;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_CheckBox_C_OnClicked) == 0x000001, "Wrong alignment on Basic_CheckBox_C_OnClicked");
static_assert(sizeof(Basic_CheckBox_C_OnClicked) == 0x000001, "Wrong size on Basic_CheckBox_C_OnClicked");
static_assert(offsetof(Basic_CheckBox_C_OnClicked, InChecked) == 0x000000, "Member 'Basic_CheckBox_C_OnClicked::InChecked' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Basic_CheckBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_CheckBox_C_PreConstruct) == 0x000001, "Wrong alignment on Basic_CheckBox_C_PreConstruct");
static_assert(sizeof(Basic_CheckBox_C_PreConstruct) == 0x000001, "Wrong size on Basic_CheckBox_C_PreConstruct");
static_assert(offsetof(Basic_CheckBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Basic_CheckBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.GetIsChecked
// 0x0001 (0x0001 - 0x0000)
struct Basic_CheckBox_C_GetIsChecked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_CheckBox_C_GetIsChecked) == 0x000001, "Wrong alignment on Basic_CheckBox_C_GetIsChecked");
static_assert(sizeof(Basic_CheckBox_C_GetIsChecked) == 0x000001, "Wrong size on Basic_CheckBox_C_GetIsChecked");
static_assert(offsetof(Basic_CheckBox_C_GetIsChecked, ReturnValue) == 0x000000, "Member 'Basic_CheckBox_C_GetIsChecked::ReturnValue' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.SetIsChecked
// 0x0005 (0x0005 - 0x0000)
struct Basic_CheckBox_C_SetIsChecked final
{
public:
	bool                                          InIsChecked;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECheckBoxState                                Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_CheckBox_C_SetIsChecked) == 0x000001, "Wrong alignment on Basic_CheckBox_C_SetIsChecked");
static_assert(sizeof(Basic_CheckBox_C_SetIsChecked) == 0x000005, "Wrong size on Basic_CheckBox_C_SetIsChecked");
static_assert(offsetof(Basic_CheckBox_C_SetIsChecked, InIsChecked) == 0x000000, "Member 'Basic_CheckBox_C_SetIsChecked::InIsChecked' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetIsChecked, Temp_bool_Variable) == 0x000001, "Member 'Basic_CheckBox_C_SetIsChecked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetIsChecked, Temp_byte_Variable) == 0x000002, "Member 'Basic_CheckBox_C_SetIsChecked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetIsChecked, Temp_byte_Variable_1) == 0x000003, "Member 'Basic_CheckBox_C_SetIsChecked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetIsChecked, K2Node_Select_Default) == 0x000004, "Member 'Basic_CheckBox_C_SetIsChecked::K2Node_Select_Default' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.SetText
// 0x0060 (0x0060 - 0x0000)
struct Basic_CheckBox_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          InUpperCase;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3415[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UButtonSlot*                            K2Node_DynamicCast_AsButton_Slot;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_IsVisible;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SelectVisibility_VisibilityChanged;       // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_SelectVisibility_New_Visibility;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3416[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0030(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0048(0x0018)()
};
static_assert(alignof(Basic_CheckBox_C_SetText) == 0x000008, "Wrong alignment on Basic_CheckBox_C_SetText");
static_assert(sizeof(Basic_CheckBox_C_SetText) == 0x000060, "Wrong size on Basic_CheckBox_C_SetText");
static_assert(offsetof(Basic_CheckBox_C_SetText, InText) == 0x000000, "Member 'Basic_CheckBox_C_SetText::InText' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, InUpperCase) == 0x000018, "Member 'Basic_CheckBox_C_SetText::InUpperCase' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, Temp_bool_Variable) == 0x000019, "Member 'Basic_CheckBox_C_SetText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, Temp_byte_Variable) == 0x00001A, "Member 'Basic_CheckBox_C_SetText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, Temp_byte_Variable_1) == 0x00001B, "Member 'Basic_CheckBox_C_SetText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, Temp_bool_Variable_1) == 0x00001C, "Member 'Basic_CheckBox_C_SetText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, K2Node_DynamicCast_AsButton_Slot) == 0x000020, "Member 'Basic_CheckBox_C_SetText::K2Node_DynamicCast_AsButton_Slot' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Basic_CheckBox_C_SetText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, CallFunc_TextIsEmpty_ReturnValue) == 0x000029, "Member 'Basic_CheckBox_C_SetText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, CallFunc_SelectVisibility_IsVisible) == 0x00002A, "Member 'Basic_CheckBox_C_SetText::CallFunc_SelectVisibility_IsVisible' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, CallFunc_SelectVisibility_VisibilityChanged) == 0x00002B, "Member 'Basic_CheckBox_C_SetText::CallFunc_SelectVisibility_VisibilityChanged' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, CallFunc_SelectVisibility_New_Visibility) == 0x00002C, "Member 'Basic_CheckBox_C_SetText::CallFunc_SelectVisibility_New_Visibility' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, K2Node_Select_Default) == 0x00002D, "Member 'Basic_CheckBox_C_SetText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, CallFunc_TextToUpper_ReturnValue) == 0x000030, "Member 'Basic_CheckBox_C_SetText::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetText, K2Node_Select_Default_1) == 0x000048, "Member 'Basic_CheckBox_C_SetText::K2Node_Select_Default_1' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.GetUpperCased
// 0x0001 (0x0001 - 0x0000)
struct Basic_CheckBox_C_GetUpperCased final
{
public:
	bool                                          Param_UpperCase;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_CheckBox_C_GetUpperCased) == 0x000001, "Wrong alignment on Basic_CheckBox_C_GetUpperCased");
static_assert(sizeof(Basic_CheckBox_C_GetUpperCased) == 0x000001, "Wrong size on Basic_CheckBox_C_GetUpperCased");
static_assert(offsetof(Basic_CheckBox_C_GetUpperCased, Param_UpperCase) == 0x000000, "Member 'Basic_CheckBox_C_GetUpperCased::Param_UpperCase' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.SetState
// 0x0034 (0x0034 - 0x0000)
struct Basic_CheckBox_C_SetState final
{
public:
	ECheckBoxState                                InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3417[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3418[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3419[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_CheckBox_C_SetState) == 0x000004, "Wrong alignment on Basic_CheckBox_C_SetState");
static_assert(sizeof(Basic_CheckBox_C_SetState) == 0x000034, "Wrong size on Basic_CheckBox_C_SetState");
static_assert(offsetof(Basic_CheckBox_C_SetState, InState) == 0x000000, "Member 'Basic_CheckBox_C_SetState::InState' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, Temp_bool_Variable) == 0x000001, "Member 'Basic_CheckBox_C_SetState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, Temp_int_Variable) == 0x000004, "Member 'Basic_CheckBox_C_SetState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, Temp_int_Variable_1) == 0x000008, "Member 'Basic_CheckBox_C_SetState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, Temp_bool_Variable_1) == 0x00000C, "Member 'Basic_CheckBox_C_SetState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, Temp_struct_Variable) == 0x000010, "Member 'Basic_CheckBox_C_SetState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, Temp_struct_Variable_1) == 0x000018, "Member 'Basic_CheckBox_C_SetState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Basic_CheckBox_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, K2Node_Select_Default) == 0x000024, "Member 'Basic_CheckBox_C_SetState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, K2Node_Select_Default_1) == 0x000028, "Member 'Basic_CheckBox_C_SetState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000030, "Member 'Basic_CheckBox_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.GetState
// 0x0001 (0x0001 - 0x0000)
struct Basic_CheckBox_C_GetState final
{
public:
	ECheckBoxState                                Param_State;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_CheckBox_C_GetState) == 0x000001, "Wrong alignment on Basic_CheckBox_C_GetState");
static_assert(sizeof(Basic_CheckBox_C_GetState) == 0x000001, "Wrong size on Basic_CheckBox_C_GetState");
static_assert(offsetof(Basic_CheckBox_C_GetState, Param_State) == 0x000000, "Member 'Basic_CheckBox_C_GetState::Param_State' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.SetSize
// 0x0028 (0x0028 - 0x0000)
struct Basic_CheckBox_C_SetSize final
{
public:
	float                                         InSize;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetSwitcherSlot*                    CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_CheckBox_C_SetSize) == 0x000008, "Wrong alignment on Basic_CheckBox_C_SetSize");
static_assert(sizeof(Basic_CheckBox_C_SetSize) == 0x000028, "Wrong size on Basic_CheckBox_C_SetSize");
static_assert(offsetof(Basic_CheckBox_C_SetSize, InSize) == 0x000000, "Member 'Basic_CheckBox_C_SetSize::InSize' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetSize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'Basic_CheckBox_C_SetSize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetSize, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Basic_CheckBox_C_SetSize::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetSize, CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue) == 0x000010, "Member 'Basic_CheckBox_C_SetSize::CallFunc_SlotAsWidgetSwitcherSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetSize, K2Node_MakeStruct_Margin) == 0x000018, "Member 'Basic_CheckBox_C_SetSize::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.SetHovered
// 0x0014 (0x0014 - 0x0000)
struct Basic_CheckBox_C_SetHovered final
{
public:
	bool                                          InHovered;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuColors                               K2Node_Select_Default;                             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341B[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_MenuColors_OutputColor;                   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Basic_CheckBox_C_SetHovered) == 0x000004, "Wrong alignment on Basic_CheckBox_C_SetHovered");
static_assert(sizeof(Basic_CheckBox_C_SetHovered) == 0x000014, "Wrong size on Basic_CheckBox_C_SetHovered");
static_assert(offsetof(Basic_CheckBox_C_SetHovered, InHovered) == 0x000000, "Member 'Basic_CheckBox_C_SetHovered::InHovered' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetHovered, Temp_bool_Variable) == 0x000001, "Member 'Basic_CheckBox_C_SetHovered::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetHovered, K2Node_Select_Default) == 0x000002, "Member 'Basic_CheckBox_C_SetHovered::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetHovered, CallFunc_MenuColors_OutputColor) == 0x000004, "Member 'Basic_CheckBox_C_SetHovered::CallFunc_MenuColors_OutputColor' has a wrong offset!");

// Function Basic_CheckBox.Basic_CheckBox_C.SetTextWidth
// 0x0008 (0x0008 - 0x0000)
struct Basic_CheckBox_C_SetTextWidth final
{
public:
	float                                         InWidthOverride;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Basic_CheckBox_C_SetTextWidth) == 0x000004, "Wrong alignment on Basic_CheckBox_C_SetTextWidth");
static_assert(sizeof(Basic_CheckBox_C_SetTextWidth) == 0x000008, "Wrong size on Basic_CheckBox_C_SetTextWidth");
static_assert(offsetof(Basic_CheckBox_C_SetTextWidth, InWidthOverride) == 0x000000, "Member 'Basic_CheckBox_C_SetTextWidth::InWidthOverride' has a wrong offset!");
static_assert(offsetof(Basic_CheckBox_C_SetTextWidth, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'Basic_CheckBox_C_SetTextWidth::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

