#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_CrosshairManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "FSD_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass HUD_CrosshairManager.HUD_CrosshairManager_C
// 0x00A0 (0x0300 - 0x0260)
class UHUD_CrosshairManager_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimIntro;                                         // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetSwitcher*                        CrosshairSwitcher;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHUD_HitIndicator_C*                    HUD_HitIndicator;                                  // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           MainCanvas;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NoCrosshair;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOnScreen_Indicator_UsableZipLine_C*    OnScreen_Indicator_UsableZipLine;                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUserWidget*                            CurrentCrosshair;                                  // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayIntroAnim;                                     // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3677[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       Character;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AItem*, class UUserWidget*>        CrosshairCache;                                    // 0x02B0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)

public:
	void ExecuteUbergraph_HUD_CrosshairManager(int32 EntryPoint);
	void OnItemsLoaded();
	void On_Inventory_Ready();
	void Construct();
	void Destruct();
	void OnCharacterStateChanged(ECharacterState NewState);
	void OnCameraModeChanged_Event(ECharacterCameraMode NewCameraMode, ECharacterCameraMode OldCameraMode);
	void OnDepositingBegin_Event(class UResourceBank* ResourceBank);
	void OnDepositingEnd_Event(class UResourceBank* ResourceBank);
	void OnToggleMapTool(bool Visible);
	void SetCrosshair(class AItem* InEquippedItem);
	void UpdateVisibility();
	void UnregisterEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_CrosshairManager_C">();
	}
	static class UHUD_CrosshairManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_CrosshairManager_C>();
	}
};
static_assert(alignof(UHUD_CrosshairManager_C) == 0x000008, "Wrong alignment on UHUD_CrosshairManager_C");
static_assert(sizeof(UHUD_CrosshairManager_C) == 0x000300, "Wrong size on UHUD_CrosshairManager_C");
static_assert(offsetof(UHUD_CrosshairManager_C, UberGraphFrame) == 0x000260, "Member 'UHUD_CrosshairManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, AnimIntro) == 0x000268, "Member 'UHUD_CrosshairManager_C::AnimIntro' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, CrosshairSwitcher) == 0x000270, "Member 'UHUD_CrosshairManager_C::CrosshairSwitcher' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, HUD_HitIndicator) == 0x000278, "Member 'UHUD_CrosshairManager_C::HUD_HitIndicator' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, MainCanvas) == 0x000280, "Member 'UHUD_CrosshairManager_C::MainCanvas' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, NoCrosshair) == 0x000288, "Member 'UHUD_CrosshairManager_C::NoCrosshair' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, OnScreen_Indicator_UsableZipLine) == 0x000290, "Member 'UHUD_CrosshairManager_C::OnScreen_Indicator_UsableZipLine' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, CurrentCrosshair) == 0x000298, "Member 'UHUD_CrosshairManager_C::CurrentCrosshair' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, PlayIntroAnim) == 0x0002A0, "Member 'UHUD_CrosshairManager_C::PlayIntroAnim' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, Character) == 0x0002A8, "Member 'UHUD_CrosshairManager_C::Character' has a wrong offset!");
static_assert(offsetof(UHUD_CrosshairManager_C, CrosshairCache) == 0x0002B0, "Member 'UHUD_CrosshairManager_C::CrosshairCache' has a wrong offset!");

}

