#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionControl_TextAnimator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"


namespace CG::Params
{

// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.ExecuteUbergraph_MissionControl_TextAnimator
// 0x000C (0x000C - 0x0000)
struct MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1664[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetText_Unformatted_Length;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator) == 0x000004, "Wrong alignment on MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator");
static_assert(sizeof(MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator) == 0x00000C, "Wrong size on MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator");
static_assert(offsetof(MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator, EntryPoint) == 0x000000, "Member 'MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator::EntryPoint' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator, K2Node_Event_IsDesignTime) == 0x000004, "Member 'MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator, CallFunc_SetText_Unformatted_Length) == 0x000008, "Member 'MissionControl_TextAnimator_C_ExecuteUbergraph_MissionControl_TextAnimator::CallFunc_SetText_Unformatted_Length' has a wrong offset!");

// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MissionControl_TextAnimator_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionControl_TextAnimator_C_PreConstruct) == 0x000001, "Wrong alignment on MissionControl_TextAnimator_C_PreConstruct");
static_assert(sizeof(MissionControl_TextAnimator_C_PreConstruct) == 0x000001, "Wrong size on MissionControl_TextAnimator_C_PreConstruct");
static_assert(offsetof(MissionControl_TextAnimator_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MissionControl_TextAnimator_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.SetText
// 0x0060 (0x0060 - 0x0000)
struct MissionControl_TextAnimator_C_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Unformatted_Length;                                // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1665[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRichTextParseResult                   CallFunc_ParseRichText_ReturnValue;                // 0x0020(0x0040)()
};
static_assert(alignof(MissionControl_TextAnimator_C_SetText) == 0x000008, "Wrong alignment on MissionControl_TextAnimator_C_SetText");
static_assert(sizeof(MissionControl_TextAnimator_C_SetText) == 0x000060, "Wrong size on MissionControl_TextAnimator_C_SetText");
static_assert(offsetof(MissionControl_TextAnimator_C_SetText, InText) == 0x000000, "Member 'MissionControl_TextAnimator_C_SetText::InText' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetText, Unformatted_Length) == 0x000018, "Member 'MissionControl_TextAnimator_C_SetText::Unformatted_Length' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetText, CallFunc_ParseRichText_ReturnValue) == 0x000020, "Member 'MissionControl_TextAnimator_C_SetText::CallFunc_ParseRichText_ReturnValue' has a wrong offset!");

// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.SetAnimProgress
// 0x0208 (0x0208 - 0x0000)
struct MissionControl_TextAnimator_C_SetAnimProgress final
{
public:
	float                                         Param_AnimProgress;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1666[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Caret;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Hidden;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Visible;                                           // 0x0028(0x0018)(Edit, BlueprintVisible)
	int32                                         SplitIndex;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1667[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1668[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Mid_ReturnValue_1;                        // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0148(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0198(0x0018)()
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_SplitRichText_OutLeftText;                // 0x01B8(0x0018)()
	class FText                                   CallFunc_SplitRichText_OutRightText;               // 0x01D0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetFirstWord_OutWord;                     // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionControl_TextAnimator_C_SetAnimProgress) == 0x000008, "Wrong alignment on MissionControl_TextAnimator_C_SetAnimProgress");
static_assert(sizeof(MissionControl_TextAnimator_C_SetAnimProgress) == 0x000208, "Wrong size on MissionControl_TextAnimator_C_SetAnimProgress");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, Param_AnimProgress) == 0x000000, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::Param_AnimProgress' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, Caret) == 0x000008, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::Caret' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, Hidden) == 0x000018, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::Hidden' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, Visible) == 0x000028, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::Visible' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, SplitIndex) == 0x000040, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::SplitIndex' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_FClamp_ReturnValue) == 0x000044, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Len_ReturnValue) == 0x000048, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Len_ReturnValue_1) == 0x000050, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Mid_ReturnValue) == 0x000058, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Mid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Mid_ReturnValue_1) == 0x000068, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Mid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000F0, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, K2Node_MakeStruct_FormatArgumentData_2) == 0x000148, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, K2Node_MakeArray_Array) == 0x000188, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Format_ReturnValue) == 0x000198, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0001B0, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_FCeil_ReturnValue) == 0x0001B4, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_SplitRichText_OutLeftText) == 0x0001B8, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_SplitRichText_OutLeftText' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_SplitRichText_OutRightText) == 0x0001D0, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_SplitRichText_OutRightText' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_Conv_TextToString_ReturnValue) == 0x0001E8, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_SetAnimProgress, CallFunc_GetFirstWord_OutWord) == 0x0001F8, "Member 'MissionControl_TextAnimator_C_SetAnimProgress::CallFunc_GetFirstWord_OutWord' has a wrong offset!");

// Function MissionControl_TextAnimator.MissionControl_TextAnimator_C.GetFirstWord
// 0x0088 (0x0088 - 0x0000)
struct MissionControl_TextAnimator_C_GetFirstWord final
{
public:
	class FString                                 InString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 OutWord;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          FirstWhiteSpace;                                   // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1669[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Char;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Result;                                            // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWhiteSpace_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166A[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionControl_TextAnimator_C_GetFirstWord) == 0x000008, "Wrong alignment on MissionControl_TextAnimator_C_GetFirstWord");
static_assert(sizeof(MissionControl_TextAnimator_C_GetFirstWord) == 0x000088, "Wrong size on MissionControl_TextAnimator_C_GetFirstWord");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, InString) == 0x000000, "Member 'MissionControl_TextAnimator_C_GetFirstWord::InString' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, OutWord) == 0x000010, "Member 'MissionControl_TextAnimator_C_GetFirstWord::OutWord' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, FirstWhiteSpace) == 0x000020, "Member 'MissionControl_TextAnimator_C_GetFirstWord::FirstWhiteSpace' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, Char) == 0x000028, "Member 'MissionControl_TextAnimator_C_GetFirstWord::Char' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, Result) == 0x000038, "Member 'MissionControl_TextAnimator_C_GetFirstWord::Result' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, Temp_int_Variable) == 0x000048, "Member 'MissionControl_TextAnimator_C_GetFirstWord::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'MissionControl_TextAnimator_C_GetFirstWord::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, CallFunc_IsWhiteSpace_ReturnValue) == 0x000050, "Member 'MissionControl_TextAnimator_C_GetFirstWord::CallFunc_IsWhiteSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'MissionControl_TextAnimator_C_GetFirstWord::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, CallFunc_Mid_ReturnValue) == 0x000068, "Member 'MissionControl_TextAnimator_C_GetFirstWord::CallFunc_Mid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, CallFunc_Len_ReturnValue) == 0x000078, "Member 'MissionControl_TextAnimator_C_GetFirstWord::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'MissionControl_TextAnimator_C_GetFirstWord::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionControl_TextAnimator_C_GetFirstWord, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'MissionControl_TextAnimator_C_GetFirstWord::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

}

