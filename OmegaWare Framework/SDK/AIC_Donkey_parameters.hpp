#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_Donkey

#include "Basic.hpp"


namespace CG::Params
{

// Function AIC_Donkey.AIC_Donkey_C.ExecuteUbergraph_AIC_Donkey
// 0x0050 (0x0050 - 0x0000)
struct AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F44[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 OverlapCount)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F45[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OverlapCount;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F46[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Donkey_C*                           K2Node_DynamicCast_AsBP_Donkey;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F47[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey) == 0x000008, "Wrong alignment on AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey");
static_assert(sizeof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey) == 0x000050, "Wrong size on AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, EntryPoint) == 0x000000, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, CallFunc_RunBehaviorTree_ReturnValue) == 0x000018, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, K2Node_CustomEvent_OverlapCount) == 0x000028, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::K2Node_CustomEvent_OverlapCount' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, K2Node_DynamicCast_AsBP_Donkey) == 0x000030, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::K2Node_DynamicCast_AsBP_Donkey' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, CallFunc_GetBlackboard_ReturnValue) == 0x000040, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey, CallFunc_MakeLiteralName_ReturnValue) == 0x000048, "Member 'AIC_Donkey_C_ExecuteUbergraph_AIC_Donkey::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");

// Function AIC_Donkey.AIC_Donkey_C.OnOverlapsChanged
// 0x0004 (0x0004 - 0x0000)
struct AIC_Donkey_C_OnOverlapsChanged final
{
public:
	int32                                         OverlapCount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_Donkey_C_OnOverlapsChanged) == 0x000004, "Wrong alignment on AIC_Donkey_C_OnOverlapsChanged");
static_assert(sizeof(AIC_Donkey_C_OnOverlapsChanged) == 0x000004, "Wrong size on AIC_Donkey_C_OnOverlapsChanged");
static_assert(offsetof(AIC_Donkey_C_OnOverlapsChanged, OverlapCount) == 0x000000, "Member 'AIC_Donkey_C_OnOverlapsChanged::OverlapCount' has a wrong offset!");

}

