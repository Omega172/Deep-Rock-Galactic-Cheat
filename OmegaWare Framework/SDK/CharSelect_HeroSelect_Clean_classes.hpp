#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CharSelect_HeroSelect_Clean

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass CharSelect_HeroSelect_Clean.CharSelect_HeroSelect_Clean_C
// 0x00C8 (0x0328 - 0x0260)
class UCharSelect_HeroSelect_Clean_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UICON_HeroSelect_C*                     ICON_HeroSelect_65;                                // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UICON_HeroSelect_C*                     ICON_HeroSelect_C_66;                              // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UICON_HeroSelect_C*                     ICON_HeroSelect_C_67;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UICON_HeroSelect_C*                     ICON_HeroSelect_C_68;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SelectionBox;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCharacterSelected;                               // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UAudioComponent*                        ShoutAudioComponent;                               // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCharacterHovered;                                // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          DoSelectedShouts;                                  // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1E[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnCharacterUnhovered;                              // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRetirementHovered;                               // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRetirementUnhovered;                             // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRetireCharacter;                                 // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          OnlyShowCharactersNotInUse;                        // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanSelectCharacters;                               // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          CanPromote;                                        // 0x0302(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_3A1F[0x5];                                     // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UICON_HeroSelect_C*>             HeroWidgets;                                       // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FMargin                                IconPadding;                                       // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnCharacterSelected__DelegateSignature(class UPlayerCharacterID* Character);
	void OnCharacterHovered__DelegateSignature(class UPlayerCharacterID* Character);
	void OnRetirementHovered__DelegateSignature(class UPlayerCharacterID* Character);
	void OnRetirementUnhovered__DelegateSignature(class UPlayerCharacterID* Character);
	void OnRetireCharacter__DelegateSignature(class UPlayerCharacterID* Character);
	void OnCharacterUnhovered__DelegateSignature(class UPlayerCharacterID* CharacterID);
	void ExecuteUbergraph_CharSelect_HeroSelect_Clean(int32 EntryPoint);
	void OnUnHoveredEvent(class UPlayerCharacterID* CharacterID);
	void RetireCharacter(class UPlayerCharacterID* Character);
	void RetirementUnHovered(class UPlayerCharacterID* Character);
	void RetirementHovered(class UPlayerCharacterID* Character);
	void OnSelect();
	void OnHovered_Event_0(class UPlayerCharacterID* Character);
	void Update();
	void OnCharacterSelected_Event(class UPlayerCharacterID* Character);
	void Next();
	void Prev();
	void Select();
	struct FEventReply HandleKeyEvent(struct FKeyEvent& InKeyEvent, bool IsDown, bool* Handled);
	void GetSelectedIndex(int32* Param_Index);
	void SetSelectedIndex(int32 Param_Index, bool* Valid);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnKeyUp(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void HighlightClassChallenge(TArray<class UObject*>& ClassRefs, bool ShouldHighlight, class USeasonChallenge* Challenge);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CharSelect_HeroSelect_Clean_C">();
	}
	static class UCharSelect_HeroSelect_Clean_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCharSelect_HeroSelect_Clean_C>();
	}
};
static_assert(alignof(UCharSelect_HeroSelect_Clean_C) == 0x000008, "Wrong alignment on UCharSelect_HeroSelect_Clean_C");
static_assert(sizeof(UCharSelect_HeroSelect_Clean_C) == 0x000328, "Wrong size on UCharSelect_HeroSelect_Clean_C");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, UberGraphFrame) == 0x000260, "Member 'UCharSelect_HeroSelect_Clean_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, ICON_HeroSelect_65) == 0x000268, "Member 'UCharSelect_HeroSelect_Clean_C::ICON_HeroSelect_65' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, ICON_HeroSelect_C_66) == 0x000270, "Member 'UCharSelect_HeroSelect_Clean_C::ICON_HeroSelect_C_66' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, ICON_HeroSelect_C_67) == 0x000278, "Member 'UCharSelect_HeroSelect_Clean_C::ICON_HeroSelect_C_67' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, ICON_HeroSelect_C_68) == 0x000280, "Member 'UCharSelect_HeroSelect_Clean_C::ICON_HeroSelect_C_68' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, SelectionBox) == 0x000288, "Member 'UCharSelect_HeroSelect_Clean_C::SelectionBox' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, OnCharacterSelected) == 0x000290, "Member 'UCharSelect_HeroSelect_Clean_C::OnCharacterSelected' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, ShoutAudioComponent) == 0x0002A0, "Member 'UCharSelect_HeroSelect_Clean_C::ShoutAudioComponent' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, OnCharacterHovered) == 0x0002A8, "Member 'UCharSelect_HeroSelect_Clean_C::OnCharacterHovered' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, DoSelectedShouts) == 0x0002B8, "Member 'UCharSelect_HeroSelect_Clean_C::DoSelectedShouts' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, OnCharacterUnhovered) == 0x0002C0, "Member 'UCharSelect_HeroSelect_Clean_C::OnCharacterUnhovered' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, OnRetirementHovered) == 0x0002D0, "Member 'UCharSelect_HeroSelect_Clean_C::OnRetirementHovered' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, OnRetirementUnhovered) == 0x0002E0, "Member 'UCharSelect_HeroSelect_Clean_C::OnRetirementUnhovered' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, OnRetireCharacter) == 0x0002F0, "Member 'UCharSelect_HeroSelect_Clean_C::OnRetireCharacter' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, OnlyShowCharactersNotInUse) == 0x000300, "Member 'UCharSelect_HeroSelect_Clean_C::OnlyShowCharactersNotInUse' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, CanSelectCharacters) == 0x000301, "Member 'UCharSelect_HeroSelect_Clean_C::CanSelectCharacters' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, CanPromote) == 0x000302, "Member 'UCharSelect_HeroSelect_Clean_C::CanPromote' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, HeroWidgets) == 0x000308, "Member 'UCharSelect_HeroSelect_Clean_C::HeroWidgets' has a wrong offset!");
static_assert(offsetof(UCharSelect_HeroSelect_Clean_C, IconPadding) == 0x000318, "Member 'UCharSelect_HeroSelect_Clean_C::IconPadding' has a wrong offset!");

}

