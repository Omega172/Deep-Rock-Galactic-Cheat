#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_TutorialWidget

#include "Basic.hpp"


namespace CG::Params
{

// Function HUD_TutorialWidget.HUD_TutorialWidget_C.ExecuteUbergraph_HUD_TutorialWidget
// 0x0080 (0x0080 - 0x0000)
struct HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_watched;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AB[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Text;                                 // 0x0010(0x0018)(ConstParm)
	class FText                                   K2Node_Event_Title;                                // 0x0028(0x0018)(ConstParm)
	class FText                                   K2Node_Event_TaskText;                             // 0x0040(0x0018)(ConstParm)
	class UTexture2D*                             K2Node_Event_Image;                                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35AC[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)()
};
static_assert(alignof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget) == 0x000008, "Wrong alignment on HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget");
static_assert(sizeof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget) == 0x000080, "Wrong size on HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, EntryPoint) == 0x000000, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, Temp_bool_Variable) == 0x000004, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, K2Node_Event_watched) == 0x000005, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::K2Node_Event_watched' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, CallFunc_IsVisible_ReturnValue) == 0x000007, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, K2Node_Event_Text) == 0x000010, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, K2Node_Event_Title) == 0x000028, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::K2Node_Event_Title' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, K2Node_Event_TaskText) == 0x000040, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::K2Node_Event_TaskText' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, K2Node_Event_Image) == 0x000058, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::K2Node_Event_Image' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, CallFunc_TextIsEmpty_ReturnValue) == 0x000060, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget, K2Node_Select_Default) == 0x000068, "Member 'HUD_TutorialWidget_C_ExecuteUbergraph_HUD_TutorialWidget::K2Node_Select_Default' has a wrong offset!");

// Function HUD_TutorialWidget.HUD_TutorialWidget_C.OnHide
// 0x0001 (0x0001 - 0x0000)
struct HUD_TutorialWidget_C_OnHide final
{
public:
	bool                                          Watched;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_TutorialWidget_C_OnHide) == 0x000001, "Wrong alignment on HUD_TutorialWidget_C_OnHide");
static_assert(sizeof(HUD_TutorialWidget_C_OnHide) == 0x000001, "Wrong size on HUD_TutorialWidget_C_OnHide");
static_assert(offsetof(HUD_TutorialWidget_C_OnHide, Watched) == 0x000000, "Member 'HUD_TutorialWidget_C_OnHide::Watched' has a wrong offset!");

// Function HUD_TutorialWidget.HUD_TutorialWidget_C.OnShow
// 0x0050 (0x0050 - 0x0000)
struct HUD_TutorialWidget_C_OnShow final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Title;                                             // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   TaskText;                                          // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UTexture2D*                             Image;                                             // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_TutorialWidget_C_OnShow) == 0x000008, "Wrong alignment on HUD_TutorialWidget_C_OnShow");
static_assert(sizeof(HUD_TutorialWidget_C_OnShow) == 0x000050, "Wrong size on HUD_TutorialWidget_C_OnShow");
static_assert(offsetof(HUD_TutorialWidget_C_OnShow, Text) == 0x000000, "Member 'HUD_TutorialWidget_C_OnShow::Text' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_OnShow, Title) == 0x000018, "Member 'HUD_TutorialWidget_C_OnShow::Title' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_OnShow, TaskText) == 0x000030, "Member 'HUD_TutorialWidget_C_OnShow::TaskText' has a wrong offset!");
static_assert(offsetof(HUD_TutorialWidget_C_OnShow, Image) == 0x000048, "Member 'HUD_TutorialWidget_C_OnShow::Image' has a wrong offset!");

}

