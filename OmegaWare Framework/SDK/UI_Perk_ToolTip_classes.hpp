#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Perk_ToolTip

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSD_structs.hpp"
#include "FSD_classes.hpp"


namespace CG
{

// WidgetBlueprintGeneratedClass UI_Perk_ToolTip.UI_Perk_ToolTip_C
// 0x0078 (0x02F8 - 0x0280)
class UUI_Perk_ToolTip_C final : public UFSDUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIntro;                                         // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FancyIntro;                                        // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_BG;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         CostBox;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CostText;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_107;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextSizable*                       PerkDescriptionRich;                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Perktitle;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           RootCanvas;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_PerkIcon_C*                         UI_PerkIcon;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Perks_Item_C*                       PerkWidget;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPerkAsset*                             PerkAsset;                                         // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rank;                                              // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Tier;                                              // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DelayTimer;                                        // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_Perk_ToolTip(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void AfterFancyDelay();
	void Reset_Animations();
	void Show_Rank(bool InShowRank);
	void Equip_Intro();
	void KPI_Intro();
	void SetPerkAsset(class UPerkAsset* Param_PerkAsset, int32 Param_Rank, bool ShowRank);
	void OnPerkClaimed_Event(class UPerkAsset* Perk, int32 ClaimedTier);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Perk_ToolTip_C">();
	}
	static class UUI_Perk_ToolTip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Perk_ToolTip_C>();
	}
};
static_assert(alignof(UUI_Perk_ToolTip_C) == 0x000008, "Wrong alignment on UUI_Perk_ToolTip_C");
static_assert(sizeof(UUI_Perk_ToolTip_C) == 0x0002F8, "Wrong size on UUI_Perk_ToolTip_C");
static_assert(offsetof(UUI_Perk_ToolTip_C, UberGraphFrame) == 0x000280, "Member 'UUI_Perk_ToolTip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, FadeIntro) == 0x000288, "Member 'UUI_Perk_ToolTip_C::FadeIntro' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, FancyIntro) == 0x000290, "Member 'UUI_Perk_ToolTip_C::FancyIntro' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, Border_BG) == 0x000298, "Member 'UUI_Perk_ToolTip_C::Border_BG' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, CostBox) == 0x0002A0, "Member 'UUI_Perk_ToolTip_C::CostBox' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, CostText) == 0x0002A8, "Member 'UUI_Perk_ToolTip_C::CostText' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, Image_107) == 0x0002B0, "Member 'UUI_Perk_ToolTip_C::Image_107' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, PerkDescriptionRich) == 0x0002B8, "Member 'UUI_Perk_ToolTip_C::PerkDescriptionRich' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, Perktitle) == 0x0002C0, "Member 'UUI_Perk_ToolTip_C::Perktitle' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, RootCanvas) == 0x0002C8, "Member 'UUI_Perk_ToolTip_C::RootCanvas' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, UI_PerkIcon) == 0x0002D0, "Member 'UUI_Perk_ToolTip_C::UI_PerkIcon' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, PerkWidget) == 0x0002D8, "Member 'UUI_Perk_ToolTip_C::PerkWidget' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, PerkAsset) == 0x0002E0, "Member 'UUI_Perk_ToolTip_C::PerkAsset' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, Rank) == 0x0002E8, "Member 'UUI_Perk_ToolTip_C::Rank' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, Tier) == 0x0002EC, "Member 'UUI_Perk_ToolTip_C::Tier' has a wrong offset!");
static_assert(offsetof(UUI_Perk_ToolTip_C, DelayTimer) == 0x0002F0, "Member 'UUI_Perk_ToolTip_C::DelayTimer' has a wrong offset!");

}

